; -------------------------------------------------------------------------
; Rules pertaining to:   Conversion of Proposed DHW Systmes & Heaters into Budget/Standard Design
; CEC Title-24 Residential Energy Code
; -------------------------------------------------------------------------
; Copyright (c) 2012-2015, California Energy Commission
; Copyright (c) 2012-2015, Wrightsoft Corporation
; All rights reserved.
; Redistribution and use in source and binary forms, with or without modification,
; are permitted provided that the following conditions are met:
; - Redistributions of source code must retain the above copyright notice, this
;   list of conditions and the following disclaimer.
; - Redistributions in binary form must reproduce the above copyright notice, this
;   list of conditions, the following disclaimer in the documentation and/or other
;   materials provided with the distribution.
; - Neither the name of the California Energy Commission nor the names of its
;   contributors may be used to endorse or promote products derived from this
;   software without specific prior written permission.
; DISCLAIMER: THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
; "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
; THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
; NON-INFRINGEMENT ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION,
; WRIGHTSOFT CORPORATION, ITRON, INC. OR ANY OTHER AUTHOR OR COPYRIGHT HOLDER OF
; THIS SOFTWARE (COLLECTIVELY, THE "AUTHORS") BE LIABLE FOR ANY DIRECT, INDIRECT,
; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
; LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
; OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
; LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
; OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
; ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  EACH LICENSEE AND SUBLICENSEE OF THE
; SOFTWARE AGREES NOT TO ASSERT ANY CLAIM AGAINST ANY OF THE AUTHORS RELATING TO
; THIS SOFTWARE, WHETHER DUE TO PERFORMANCE ISSUES, TITLE OR INFRINGEMENT ISSUES,
; STRICT LIABILITY OR OTHERWISE.
; -------------------------------------------------------------------------

ENUM_PROPERTIES_VALUE   ; ensures retrieval/logic/us of enum properties assume numeric value (alternative is ENUM_PROPERTIES_STRING)

;*************************************************************************
;*************************************************************************
RULELIST  "BudgetConversion_DHW" 1 0 1 0
;
;   Rules that govern the conversion of DHW Systems and heaters of the
;   proposed building design to the budget building design.
;
;*************************************************************************
;*************************************************************************
;"log status"   Proj:Action = {  if (DevMode==0 .OR. LocalStatus(RunAbbrev) < 1 .OR. EngyCodeYearNum < 2019) then  UNCHANGED  else
;   PostMessageToLog( "      evaluating 'BudgetConversion_DHW' rules on '%s' model...", RunAbbrev )  endif  }
;"dbg" Proj:Action = {  PostMessageToLog( "   eval rulelist 'BudgetConversion_DHW' for run %s", RunAbbrev )  }

   "Set Proj:StdDesignCompactDistYear - Title24 code year to base DHW compact distribution table look-ups on"                    ; SAC 01/22/21
      Proj:StdDesignCompactDistYear = {   if (IfValidAnd( ResProj:AllowStdDesignFuel > 0 ) .AND. IfValidAnd( ResProj:StdDesignCompactDistrib > 0 ) .AND.
                                              ( IfValidAnd( ResProj:RunAbbrev = "s" ) .OR. RunAbbrev == "zb" .OR.
                                                (IfValidAnd( ResProj:SMFFollowsStdDesignFuel > 0 ) .AND. IfValidAnd( ResProj:RunAbbrev = "smf" )))) then  2019
                                          else  StdDesignBase  endif  }
                        ;"dbg" ResProj:Action = { PostMessageToLog( "just set StdDesignCompactDistYear to %g (inside BudgetConversion_DHW)", StdDesignCompactDistYear ) }
   "Set Proj:StdDesignDrnWtrHtRecYear - Title24 code year to base drain water heat recovery table look-ups on" 
      Proj:StdDesignDrnWtrHtRecYear = {   if (IfValidAnd( ResProj:AllowStdDesignFuel > 0 ) .AND. IfValidAnd( ResProj:StdDesignDrnWtrHtRecov > 0 ) .AND.
                                              ( IfValidAnd( ResProj:RunAbbrev = "s" ) .OR. RunAbbrev == "zb" .OR.
                                                (IfValidAnd( ResProj:SMFFollowsStdDesignFuel > 0 ) .AND. IfValidAnd( ResProj:RunAbbrev = "smf" )))) then  2019
                                          else  StdDesignBase  endif  }
   ; Proj:StdDesignCompactDistYear & Proj:StdDesignDrnWtrHtRecYear ALSO set in 'ProposedInput' rulelist - SAC 01/22/21

   ;--------------------------------------------------------------------
   ; BudgetConversion: DHW System(s)
   ;--------------------------------------------------------------------

   ; SAC 12/23/14 - moved up from below in order to reference in following rules
   ; SAC 3/19/14 - modified to cause 2016, multi-family w/ non-central DHW to simulate standard design
   ; SAC 9/10/15 - added condition to ensure systems/heaters converted to valid std design when DHWCalcMethod anything other than "T24"
   ; SAC 7/29/18 - removed all logic - always set to 1 with removal of DHWCalcMethod from all rule logic
   "Set flag to treat Std Design as Prop Design in DHWDLL for E+A+A -OR- for 2016 multi-family models w/ exclusively non-central DHW systems"
      Proj:SimulateStdDHW = {  1  }

   "Rules to remove DWHRSys object references for SFam std design systems"      ; SAC 1/8/19
      DHWSys:Action  = {
         if (Proj:SimulateStdDHW < 0.5 .OR. IfValidAnd( StdEqProp > 0.5 ) .OR. IfValidAnd( IsExisting > 0.5 ) .OR.
             IfValidAnd( FloorAreaServed[1] < 0.1 )) then  UNCHANGED
         else if (IfValidAnd( NumDWHRSysRefs > 0 ))
         then  EvalRulelist( "Blast_DHWSys_DWHRSysRefs", 1 )
         else  UNCHANGED  endif endif  }
   "Rules to remove DWHRSys object references for MFam std design system #1"      ; SAC 1/8/19
      DwellUnitType:Action  = {
         if (Proj:SimulateStdDHW < 0.5 .OR. IfValidAnd( DHWSysRef[1]:StdEqProp > 0.5 ) .OR. Proj:IsSFamResRuleset .OR.
             IfValidAnd( AssignedDUFlrArea < 0.1 )) then  UNCHANGED
         else if (IfValidAnd( HaveDHWSysRef[1] > 0 ) .AND. IfValidAnd( DHWSysRef[1]:IsExisting < 0.5 ))
         then  EvalRulelist( "Blast_DwellUnitType_DWHRSysRefs_1", 1 )
         else  UNCHANGED  endif endif  }
   "Rules to remove DWHRSys object references for MFam std design system #2"
      DwellUnitType:Action  = {
         if (Proj:SimulateStdDHW < 1 .OR. IfValidAnd( DHWSysRef[1]:StdEqProp > 0.5 ) .OR. Proj:IsSFamResRuleset .OR.
             IfValidAnd( AssignedDUFlrArea < 0.1 )) then  UNCHANGED
         else if (IfValidAnd( HaveDHWSysRef[2] > 0 ) .AND. IfValidAnd( DHWSysRef[2]:IsExisting < 1 ))
         then  EvalRulelist( "Blast_DwellUnitType_DWHRSysRefs_2", 1 )
         else  UNCHANGED  endif endif  }
   "Rules to remove DWHRSys object references for MFam std design system #3"
      DwellUnitType:Action  = {
         if (Proj:SimulateStdDHW < 1 .OR. IfValidAnd( DHWSysRef[1]:StdEqProp > 0.5 ) .OR. Proj:IsSFamResRuleset .OR.
             IfValidAnd( AssignedDUFlrArea < 0.1 )) then  UNCHANGED
         else if (IfValidAnd( HaveDHWSysRef[3] > 0 ) .AND. IfValidAnd( DHWSysRef[3]:IsExisting < 1 ))
         then  EvalRulelist( "Blast_DwellUnitType_DWHRSysRefs_3", 1 )
         else  UNCHANGED  endif endif  }
   "Rules to remove DWHRSys object references for MFam std design system #4"
      DwellUnitType:Action  = {
         if (Proj:SimulateStdDHW < 1 .OR. IfValidAnd( DHWSysRef[1]:StdEqProp > 0.5 ) .OR. Proj:IsSFamResRuleset .OR.
             IfValidAnd( AssignedDUFlrArea < 0.1 )) then  UNCHANGED
         else if (IfValidAnd( HaveDHWSysRef[4] > 0 ) .AND. IfValidAnd( DHWSysRef[4]:IsExisting < 1 ))
         then  EvalRulelist( "Blast_DwellUnitType_DWHRSysRefs_4", 1 )
         else  UNCHANGED  endif endif  }
   "Rules to remove DWHRSys object references for MFam std design system #5"
      DwellUnitType:Action  = {
         if (Proj:SimulateStdDHW < 1 .OR. IfValidAnd( DHWSysRef[1]:StdEqProp > 0.5 ) .OR. Proj:IsSFamResRuleset .OR.
             IfValidAnd( AssignedDUFlrArea < 0.1 )) then  UNCHANGED
         else if (IfValidAnd( HaveDHWSysRef[5] > 0 ) .AND. IfValidAnd( DHWSysRef[5]:IsExisting < 1 ))
         then  EvalRulelist( "Blast_DwellUnitType_DWHRSysRefs_5", 1 )
         else  UNCHANGED  endif endif  }

   "Blast user-defined DHWSys:HeaterMultFlt[*] for Std/DRtg systems"    DHWSys:Action  =        ; SAC 3/7/20 (Colmac)
      {  if (Proj:SimulateStdDHW < 0.5 .OR. IfValidAnd( StdEqProp > 0.5 ) .OR. IfValidAnd( IsExisting > 0.5 ) .OR. IfValidAnd( FloorAreaServed > 1 )==0 .OR.
             (LocalStatus( HeaterMultFlt[1] ) < 5 .AND. LocalStatus( HeaterMultFlt[2] ) < 5 .AND. LocalStatus( HeaterMultFlt[3] ) < 5 .AND.
              LocalStatus( HeaterMultFlt[4] ) < 5 .AND. LocalStatus( HeaterMultFlt[5] ) < 5 .AND. LocalStatus( HeaterMultFlt[6] ) < 5))
         then  UNCHANGED
         else  EvalRulelist( "ForceDefault_DHWSys_HeaterMultFlt", 1 )  endif  }

      ; SAC 1/27/20 - added logic to prevent setup of CentralRecircGasBoiler DHWSys for DRtg runs
      ; revised rule to handle conversion for DRtg run from CHPWH to old-style gas or elec
      ; restructured logic a bit and added new case for central HPWHs in 2022+ codes - SAC 07/02/21 (tic #1275)
;"dbg" DHWSys:Action = { MessageBox( "eval rulelist to setup Std DHWSys '%s':  Proj:SimulateStdDHW %g / RunAbbrev '%s', '%s' / AnalysisVersion %g / CentralElecDHW %g",
;                           Name, Proj:SimulateStdDHW, ValidOr( ResProj:RunAbbrev, "?" ), ValidOr( Proj:RunAbbrev, "?" ), Proj:AnalysisVersion, CentralElecDHW )  }
   "Setup Central Recirc Boiler when appropriate"     DHWSys:Action  =        ; SAC 12/30/19 (tic #862)  ; chk Proj:RunAbbrev for Htl/Mtl std design - SAC 03/01/22
      {  if (Proj:SimulateStdDHW < 0.5 .OR. IfValidAnd( StdEqProp > 0.5 ) .OR. IfValidAnd( IsExisting > 0.5 ) .OR.
             CentralDHW < 1 .OR. IfValidAnd( FloorAreaServed > 1 )==0) then  UNCHANGED
         else if ((IfValidAnd( ResProj:RunAbbrev = "s" ) .OR. Proj:RunAbbrev == "zb") .AND. Proj:AnalysisVersion >= 220060 .AND.
                  IfValidAnd( CentralElecDHW > 0 ))
; regardless of recirc??
         then  EvalRulelist( "BudgetConversion_DHWSys_CentralHPWH", 1 )
         else if (MFamDistType < 1) then  UNCHANGED
         else if (ResProj:RunAbbrev == "s"  .OR. ResProj:RunAbbrev == "zb" .OR. ResProj:RunAbbrev == "smf" .OR.
                     Proj:RunAbbrev == "ab" .OR.    Proj:RunAbbrev == "zb")
         then  EvalRulelist( "BudgetConversion_DHWSys_CentralRecircGasBoiler", 1 )
         else  UNCHANGED  endif endif endif endif  }
   ; DRtg run w/ CHPWH no longer applicable (starting 2022) - SAC 11/12/21
   ;      else if (ResProj:RunAbbrev == "dr" .AND. IfValidAnd( CentralDHWTypeVal = 2 ))
   ;      then  EvalRulelist( "BudgetConversion_DHWSys_DRtg_Central", 1 )


   "Redefault this DHWSys"    DHWSys:Action = {  EvalRulelist( "ProposedInput_DHWEquipment", 1 )  }


; BLAST current DHWSolarSysRef
   "Set DHWSys:DHWSolarSysRef"    DHWSys:DHWSolarSysRef  =        ; added logic to prevent reset of DHWSolarSysRef when appropriate - SAC 05/01/23 (tic #3489)
      {  if (Proj:SimulateStdDHW < 0.5 .OR. IfValidAnd( StdEqProp > 0.5 ) .OR. IfValidAnd( IsExisting > 0.5 ))
         then  UNCHANGED  else  UNDEFINED  endif  }
   ;   {  UNDEFINED  }       ; SAC 1/15/20 (tic #1013)

   ; SAC 1/27/20 (StdSolarSys)
   ; revised to prevent solar sys for central HPWH in 2022 - SAC 03/22/22
   ; prevent setting StdDsgnSolarSysReqd for systems not assigned to dwelling units - SAC 05/08/23
   "Set DHWSys:StdDsgnSolarSysReqd flag"     DHWSys:StdDsgnSolarSysReqd  =       ; prevent activating StdDsgnSolarSysReqd for systems NOT 'New' - SAC 08/04/24
      {  if (Proj:SimulateStdDHW < 0.5 .OR. IfValidAnd( StdEqProp > 0.5 ) .OR. IfValidAnd( IsExisting > 0.5 ) .OR. IfValidAnd( IsAltered > 0.5 ) .OR.
             CentralDHW < 1 .OR. IfValidAnd( FloorAreaServed > 1 )==0 .OR. IfValidAnd( NumDUsServed > 1 )==0 .OR.
             (Proj:AnalysisVersion >= 220000 .AND. IfValidAnd( CentralElecDHW > 0 )) .OR.
             (IfValidAnd( ResProj:RunAbbrev = "s" )==0 .AND. IfValidAnd( ResProj:RunAbbrev = "smf" )==0 .AND.
              Proj:RunAbbrev != "zb" .AND. Proj:RunAbbrev != "ab")) then  UNDEFINED
         else  1  endif  }
   "Set ResProj:CalcStdDHWTDVExclSolThrml - flag indicating Std run needed to calculate DHW TDV (excluding solar thermal)"   ResProj:CalcStdDHWTDVExclSolThrml =     ; SAC 5/2/20 (FlexibilityCredit)
      {  if (AllowCntrlElecDHWSlrPVCred .AND. IfValidAnd( TakeCntrlElecDHWSlrPVCred > 0 ) .AND.
             SumAll( DHWSys:StdDsgnSolarSysReqd ) > 0)
         then  1  else  UNDEFINED  endif  }

; must we delete other DHWSolarSys objects before retrieving the Std design one?  (due to max DHWSolarSys occurs of 1)
   "Create Proj:StdDHWSolarSysRef if necessary"    Proj:StdDHWSolarSysRef  =
      {  if (SumAll( DHWSys:StdDsgnSolarSysReqd ) < 1) then  UNDEFINED
         else  RuleLibrary( DHWSolarSys, "t24-Std SolarSys" )  endif  }
   "Set Std SolarSys flag"    Proj:StdDHWSolarSysRef:IsStdSys  = {  1  }         ; SAC 1/27/20 (StdSolarSys)
   "Default Proj:StdDHWSolarSysRef"    DHWSolarSys:Action  =
      {  if (IfValidAnd( IsStdSys > 0 )==0) then  UNCHANGED
         else  EvalRulelist( "Default_DHWSolarSys", 1 )  endif  }
   "Assign Std SolarSys DHWSys:DHWSolarSysRef"  DHWSys:DHWSolarSysRef  =
      {  if (IfValidAnd( StdDsgnSolarSysReqd > 0 )) then  Proj:StdDHWSolarSysRef
         else  UNCHANGED  endif  }
   "Refresh DHWSolarSys FloorArea/DUs/BRs served properties"      DHWSolarSys:Action  =      ; SAC 1/27/20 (StdSolarSys)
      {  EvalRulelist( "Refresh_DHWSolarSys_ServedAreaDUsBRs", 1 )  }

;"store BEMProc details"		ResProj:Action = {  StoreBEMProc( Format( "StdSolarSys-%s", RunAbbrev ), 0 )  }
;"dbg" ResProj:Action = {  PostMessageToLog( "   eval rulelist 'BudgetConversion' for run %s", RunAbbrev )  }

   ; SAC 2/26/20 - incorported multiplier of 0.69 into std design sizing formulas to account for recent changes in solar simulation (resulting in more efficient results)     ; remove 0.69 factors due to CSE revisions - SAC 7/15/20
   "Set DHWSolarSys:StdDsgnCntFloat[1]-Low"     DHWSolarSys:StdDsgnCntFloat[1]  =      ; SAC 1/28/20 (StdSolarSys)  ; SAC 03/07/22 (MFam)
      {  if (IfValidAnd( IsStdSys > 0 ))
         then  0.8 * (  SolarCollectorCountEst:Const(   "CZ", Proj:CliZnNum ) +
                       (SolarCollectorCountEst:Dwell(   "CZ", Proj:CliZnNum ) * DwellUnitsServed) +
                       (SolarCollectorCountEst:Bedrm(   "CZ", Proj:CliZnNum ) * BedroomsServed  ) +
                       (SolarCollectorCountEst:GuestRm( "CZ", Proj:CliZnNum ) * GuestRoomsServed))
         else  UNDEFINED  endif  }     ; can be made to depend on DHWSolarSys:DwellUnitsServed, BedroomsServed and/or FloorAreaServed
   "Set DHWSolarSys:StdDsgnCntFloat[2]-High"    DHWSolarSys:StdDsgnCntFloat[2]  = 
      {  if (IfValidAnd( IsStdSys > 0 ))
         then  1.2 * (  SolarCollectorCountEst:Const(   "CZ", Proj:CliZnNum ) +
                       (SolarCollectorCountEst:Dwell(   "CZ", Proj:CliZnNum ) * DwellUnitsServed) +
                       (SolarCollectorCountEst:Bedrm(   "CZ", Proj:CliZnNum ) * BedroomsServed  ) +
                       (SolarCollectorCountEst:GuestRm( "CZ", Proj:CliZnNum ) * GuestRoomsServed))
         else  UNDEFINED  endif  }

   ; SAC 3/8/18 - revised logic to set flag for all-elec central systems w/ no recirc (tic #983)
   ; SAC 12/19/18 - revised logic to piggy-back small (<= 8 DwellUnit), non-recirc central systems using the same flag - HPWHSIZE
   ; SAC 12/21/18 - revised flag to indicate the assignment index of the FIRST elec heater in system - HPWHSIZE
   ; SAC 8/28/19 - added logic to allow IsStdDesignElec for 2019+ central elec systems serving <= 8 DUs when BypassRuleLimits is activated (testing of new HPWH tank model)
   "Set DHWSys:IsStdDesignElec - whether this system is setup as an electric standard design"  ; SAC 2/16/18 - tic #983
      DHWSys:IsStdDesignElec = {
         if (Proj:SimulateStdDHW < 0.5 .OR. IfValidAnd( StdEqProp > 0.5 ) .OR. IfValidAnd( IsExisting > 0.5 ) .OR. IfValidAnd( FloorAreaServed[1] < 0.1 )) then UNDEFINED
         else if (Proj:IsComRuleset .AND. CentralDHW > 0 .AND. 
                  (MFamDistType == 0 .OR. IfValidAnd( ResProj:BypassRuleLimits > 0 )) .AND.
                  IfValidAnd( Proj:EngyCodeYearNum >= 2019 ) .AND. IfValidAnd( ResProj:DRtgRefRunID > 1900 )==0 .AND.
                  IfValidAnd( NumElecHeaters > 0 ) .AND. IfValidAnd( NumDUsServed <= 8 )) then  1
         else if ((IfValidAnd( CentralDHW = 0 )==0 .AND. MFamDistType != 0) .OR. IfValidAnd( HeatersAllElec > 0 )==0) then  UNDEFINED
         else  if (     IfValidAnd( HeaterMultFlt[1] > 0 ) .AND. IfValidAnd( DHWHeater[1]:HeaterElementType != 1 )) then  1
               else if (IfValidAnd( HeaterMultFlt[2] > 0 ) .AND. IfValidAnd( DHWHeater[2]:HeaterElementType != 1 )) then  2
               else if (IfValidAnd( HeaterMultFlt[3] > 0 ) .AND. IfValidAnd( DHWHeater[3]:HeaterElementType != 1 )) then  3
               else if (IfValidAnd( HeaterMultFlt[4] > 0 ) .AND. IfValidAnd( DHWHeater[4]:HeaterElementType != 1 )) then  4
               else if (IfValidAnd( HeaterMultFlt[5] > 0 ) .AND. IfValidAnd( DHWHeater[5]:HeaterElementType != 1 )) then  5
               else if (IfValidAnd( HeaterMultFlt[6] > 0 ) .AND. IfValidAnd( DHWHeater[6]:HeaterElementType != 1 )) then  6
               else  1  endif endif endif endif endif endif
         endif endif endif  }

   ; SAC 4/1/19 - added DwellUnitType:IsStdDesignElecDHW to control whether DUT setup for Compact Distrib
   "Set DwellUnitType:IsStdDesignElecDHW - init"   DwellUnitType:IsStdDesignElecDHW  = {  1  }
   "Set DwellUnitType:IsStdDesignElecDHW - 1"      DwellUnitType:IsStdDesignElecDHW  = {
         if (NumDHWSysTypes >= 1 .AND. IfValidAnd( DHWSysRef[1]:IsStdDesignElec > 0.5 )==0) then  0  else  UNCHANGED  endif  }
   "Set DwellUnitType:IsStdDesignElecDHW - 2"      DwellUnitType:IsStdDesignElecDHW  = {
         if (NumDHWSysTypes >= 2 .AND. IfValidAnd( DHWSysRef[2]:IsStdDesignElec > 0.5 )==0) then  0  else  UNCHANGED  endif  }
   "Set DwellUnitType:IsStdDesignElecDHW - 3"      DwellUnitType:IsStdDesignElecDHW  = {
         if (NumDHWSysTypes >= 3 .AND. IfValidAnd( DHWSysRef[3]:IsStdDesignElec > 0.5 )==0) then  0  else  UNCHANGED  endif  }
   "Set DwellUnitType:IsStdDesignElecDHW - 4"      DwellUnitType:IsStdDesignElecDHW  = {
         if (NumDHWSysTypes >= 4 .AND. IfValidAnd( DHWSysRef[4]:IsStdDesignElec > 0.5 )==0) then  0  else  UNCHANGED  endif  }
   "Set DwellUnitType:IsStdDesignElecDHW - 5"      DwellUnitType:IsStdDesignElecDHW  = {
         if (NumDHWSysTypes >= 5 .AND. IfValidAnd( DHWSysRef[5]:IsStdDesignElec > 0.5 )==0) then  0  else  UNCHANGED  endif  }

   ; SAC 9/25/15 - rule to override user-specified DHWSys:SystemType in case where we are simulating the std design DHW
   ; SAC 8/21/16 - removed condition where CentralDHW being set was preventing SystemType from getting set to "Standard" (tic #735)
   ; SAC 2/16/18 - revised logic to enable different standard design SystemType for non-central, all-electric DHW systems (tic #983)  - extended to include all elec central w/ no recirc - SAC 3/8/18
	"Reset DHWSys:SystemType"		DHWSys:SystemType		=     ; revision to 'Standard' for runs excluding MFam dwellings (Hotel/Motel) - SAC 03/01/22
      {  if (Proj:SimulateStdDHW < 0.5 .OR. IfValidAnd( StdEqProp > 0.5 ) .OR. IfValidAnd( IsExisting > 0.5 )) then  UNCHANGED
         else if (IfValidAnd( Proj:SimMFamUnits > 0 )==0 .OR. ComponentCount( ResProj ) < 1) then  "Standard"
         else if (HeatersAllElec == 1 .AND. (CentralDHW == 0 .OR. MFamDistType == 0))
         then  T24RClimateZoneCodeBase:ElecDHWDwellUnitDist( "ClimateZone", Proj:CliZnNum, "CodeBase", Proj:StdDesignBase, "BldgType", Proj:BldgTypeTblStr )
         else  T24RClimateZoneCodeBase:DHWDwellUnitDist(     "ClimateZone", Proj:CliZnNum, "CodeBase", Proj:StdDesignBase, "BldgType", Proj:BldgTypeTblStr )
         endif endif endif  }

; SAC 10/22/15 - rule to override user-specified DHWSys:MFamDistType
; SAC 11/10/15 - added logic to cause standard design for proposed MFamDistType of 'No loops or central system pump' to remain unchanged
; SAC 12/30/19 - revised std design MFamDistType to be "Multi-family: Recirculating with no control (continuous pumping)" (5056) (tic #862)
	"Reset DHWSys:MFamDistType"		DHWSys:MFamDistType		=
      {  if (Proj:SimulateStdDHW < 0.5 .OR. IfValidAnd( StdEqProp > 0.5 ) .OR. IfValidAnd( IsExisting > 0.5 ) .OR. IfValidAnd( CentralDHW < 0.5 ) .OR. MFamDistType == 0 .OR.
             IfValidAnd( Proj:AnalysisVersion >= 190200 )) then  UNCHANGED       ; no need to change this for 2019.2.0+ as it will already be set - SAC 02/14/21
         else  5056     ; "Multi-family: Recirculating with no control (continuous pumping)"
         endif  }
; SAC 8/28/16 - revised logic to always default to single recirc loop (from 2 for > 8 DUs served) (tic #670)
	"Reset DHWSys:NRecircLoops"		DHWSys:NRecircLoops		= {	if (Proj:SimulateStdDHW < 0.5 .OR. IfValidAnd( StdEqProp > 0.5 ) .OR. IfValidAnd( IsExisting > 0.5 ) .OR. IfValidAnd( CentralDHW < 0.5 ) .OR. MFamDistType == 0) then  UNCHANGED
																						else	1  endif  }
																				;;		else if (IfValidAnd( ResProj:NumDwellingUnits > 8 ))   - SAC 11/10/15 - revised to be triggered on # DUs drawing from this system
																				;		else if (IfValidAnd( NumDUsServed > 8 ))
																				;		then	2
																				;		else	1  endif endif  }
	; SAC 11/11/15 - based on stds, table 120.3-A, which for all pipe diameters >= 1 in. and in the temperature range 105-140 is simply 1.5 in.
	"Reset DHWSys:LoopPipeInsulThk"	DHWSys:LoopPipeInsulThk	= {	1.5  }
	"Reset DHWSys:RecircPipeLoc[1]"	DHWSys:RecircPipeLoc[1]	= {	0  }		; => Conditioned
	"Reset DHWSys:RecircPipeLoc[2]"	DHWSys:RecircPipeLoc[2]	= {	0  }
	"Reset DHWSys:RecircPipeLoc[3]"	DHWSys:RecircPipeLoc[3]	= {	0  }
	"Reset DHWSys:RecircPipeLoc[4]"	DHWSys:RecircPipeLoc[4]	= {	0  }
	"Reset DHWSys:RecircPipeLoc[5]"	DHWSys:RecircPipeLoc[5]	= {	0  }
	"Reset DHWSys:RecircPipeLoc[6]"	DHWSys:RecircPipeLoc[6]	= {	0  }

; SAC 9/30/15 - rules to reset DHWSys:SolFracType for new and altered systems
	"Reset DHWSys:SolFracType"		DHWSys:SolFracType	= {	if (Proj:SimulateStdDHW < 0.5 .OR. IfValidAnd( StdEqProp > 0.5 ) .OR. IfValidAnd( IsExisting > 0.5 )) then  UNCHANGED
																				else	0  endif  }

; mjb 12/17/13 - need some rules for E+A+A
; SAC 12/23/14 - added more rules immediately below to handle fuel switching - also to cover situations where standard design is simulated directly from database (due to one or more Existing units)
	"Set DHWHeater:ForceStdDesign (for New/Altered equipment when simulating std design)"		; whether or not (1/0) budget conversion needs to force this heater to reflect standard design type & performance
			DHWHeater:ForceStdDesign	= {	if (Proj:SimulateStdDHW < 0.5 .OR. IfValidAnd( StdEqProp > 0.5 ) .OR. (ValidOr( AltFlrAreaServed, 0 ) + ValidOr( NewFlrAreaServed, 1 )) < 1) then	0  else  1  endif  }

; SAC 11/10/15 - no longer used in 2016 rules
;; SAC 5/2/15 - new rules setting flag values used to check for models that include combinations of nat gsa & propane water heaters (which for now are not allowed)
;	"Set DHWHeater:StdDesignIsNatGas"		DHWHeater:StdDesignIsNatGas	= {	if (ForceStdDesign < 0.5) then  0
;																										else if (Proj:StdDesignBase >= 2016)
;																										then	if (ResProj:NatGasAvailable < 0.5 .AND. HeaterElementType == 2) then  0  else  1  endif
;																										else if (ResProj:NatGasAvailable > 0.5 .AND. HeaterElementType != 1 .AND. HeaterElementType != 2) then  1		; != NatGas or Propane
;																										else	0  endif endif endif  }
;	"Set DHWHeater:StdDesignIsPropane"		DHWHeater:StdDesignIsPropane	= {	if (ForceStdDesign < 0.5) then  0
;																										else if (Proj:StdDesignBase >= 2016)
;																										then	if (ResProj:NatGasAvailable < 0.5 .AND. HeaterElementType == 2) then  1  else  0  endif
;																										else	0  endif endif  }

	; SAC 10/7/15 - force assignments of DHWSys to DwellUnitTypes to 1
; TO DO - DO NOT DO THIS for DwellUnitTypes that have Existing OR Altered/Verified DHWSys assignments
	"Force DwellUnitType:NumDHWSysTypes to 1"					DwellUnitType:NumDHWSysTypes		= {	if (Proj:SimulateStdDHW < 0.5 .OR. IfValidAnd( DHWSysRef[1]:StdEqProp > 0.5 ) .OR. Proj:IsSFamResRuleset) then  UNCHANGED
																																else	1  endif  }
	"Set DwellUnitType DHWSys references and related properties"	DwellUnitType:Action		= {	if (Proj:SimulateStdDHW < 0.5 .OR. IfValidAnd( DHWSysRef[1]:StdEqProp > 0.5 ) .OR. Proj:IsSFamResRuleset) then  UNCHANGED
																																else	EvalRulelist( "Default_DwellUnitType_DHWSysRefs", 1 )  endif  }

	; SAC 10/12/15 - assign single, gratest area serving, New, non-central proposed DHWSys in standard design model
	; SAC 1/4/16 - revised Zone:DHWSys1 rule to prevent assigning std design DHW to Zones w/ no Proposed DHW systems (tic 593) and also add rule to UNassign DHWSys2 for same zones (in case two were assigned in proposed design)
;	"Set Zone:DHWSys1 (if new and sim std)"	Zone:DHWSys1	= {	if (Proj:SimulateStdDHW < 0.5 .OR. Proj:IsComRuleset .OR. GlobalCompAssigned( ResProj:MaxNewNCntrlDHWSys ) < 1 .OR.
;																								DHWSys1Status != 3 .OR. (LocalCompAssigned( DHWSys1 ) < 1 .AND. LocalCompAssigned( DHWSys2 ) < 1)) then  UNCHANGED
;																						else	ResProj:MaxNewNCntrlDHWSys  endif  }
; SAC 2/29/16 - REMOVED above rule, as new/alt/ex DHWSys1 assignment should already be present -AND- expand following rule to remove new/alt/ex DHWSys2 assignments if DHWSys1 assignment present (tic #607)
; LDH 170525  - Modified rules to only remove 2nd DHW sys ref if both 1st and 2 DHWSys Ref are to 'New' systems.  Otherwise standard design will have mulitple DHW systems.

; remove assignement to (New)DHWSys2 if DHWSys1 is New
	"Set Zone:DHWSys2 (remove assignment)"			Zone:DHWSys2		= {	if (Proj:SimulateStdDHW < 0.5 .OR. Proj:IsComRuleset .OR. LocalCompAssigned( DHWSys2 ) < 1) then  UNCHANGED
																								else if (DHWSys1Status == 3 .AND. LocalCompAssigned( DHWSys1 ) > 0) then  UNDEFINED
																								else	UNCHANGED  endif endif  }


;	"Set Zone:DHWSys2 (remove assignment)"			Zone:DHWSys2		= {	if (Proj:SimulateStdDHW < 0.5 .OR. Proj:IsComRuleset .OR. LocalCompAssigned( DHWSys2 ) < 1) then  UNCHANGED
;																								else if (DHWSys1Status == 3 .AND. LocalCompAssigned( DHWSys1 ) > 0) then  UNDEFINED
;																								else if ((ResProj:RunScope == 2 .OR. ResProj:IsAddAlone > 0) .AND. DHWSys1Status == 2 .AND. LocalCompAssigned( AltDHWSys1 ) > 0) then  UNDEFINED
;																								else if ((ResProj:RunScope == 2 .OR. ResProj:IsAddAlone > 0) .AND. DHWSys1Status == 1 .AND. LocalCompAssigned(  exDHWSys1 ) > 0) then  UNDEFINED
;																								else	UNCHANGED  endif endif endif endif  }
;	"Set Zone:AltDHWSys2 (remove assignment)"		Zone:AltDHWSys2	= {	if (Proj:SimulateStdDHW < 0.5 .OR. Proj:IsComRuleset .OR. LocalCompAssigned( AltDHWSys2 ) < 1) then  UNCHANGED
;																								else if (DHWSys1Status == 3 .AND. LocalCompAssigned( DHWSys1 ) > 0) then  UNDEFINED
;																								else if ((ResProj:RunScope == 2 .OR. ResProj:IsAddAlone > 0) .AND. DHWSys1Status == 2 .AND. LocalCompAssigned( AltDHWSys1 ) > 0) then  UNDEFINED
;																								else if ((ResProj:RunScope == 2 .OR. ResProj:IsAddAlone > 0) .AND. DHWSys1Status == 1 .AND. LocalCompAssigned(  exDHWSys1 ) > 0) then  UNDEFINED
;																								else	UNCHANGED  endif endif endif endif  }
;	"Set Zone:exDHWSys2 (remove assignment)"		Zone:exDHWSys2		= {	if (Proj:SimulateStdDHW < 0.5 .OR. Proj:IsComRuleset .OR. LocalCompAssigned( exDHWSys2 ) < 1) then  UNCHANGED
;																								else if (DHWSys1Status == 3 .AND. LocalCompAssigned( DHWSys1 ) > 0) then  UNDEFINED
;																								else if ((ResProj:RunScope == 2 .OR. ResProj:IsAddAlone > 0) .AND. DHWSys1Status == 2 .AND. LocalCompAssigned( AltDHWSys1 ) > 0) then  UNDEFINED
;																								else if ((ResProj:RunScope == 2 .OR. ResProj:IsAddAlone > 0) .AND. DHWSys1Status == 1 .AND. LocalCompAssigned( exDHWSys1 ) > 0) then  UNDEFINED
;																								else	UNCHANGED  endif endif endif endif  }

	; SAC 10/24/15 - same as above but for DwellUnitTypes - assign single, greatest area serving, New, proposed DHWSys in standard design model
	; SAC 10/27/15 - leave CENTRAL DHW assignments alone
	"Set DwellUnitType:DHWSysRef[1] (if new and sim std)"	DwellUnitType:DHWSysRef[1]	= {	if (Proj:SimulateStdDHW < 0.5 .OR. IfValidAnd( DHWSysRef[1]:StdEqProp > 0.5 ) .OR. Proj:IsSFamResRuleset .OR. AssignedDUFlrArea < 1) then  UNCHANGED
																						else if (IfValidAnd( NumDUsCntrlDHW    > 0.5 ) .AND. GlobalCompAssigned( ResProj:MaxNewCntrlDHWSys  ) > 0.5) then  UNCHANGED		; ResProj:MaxNewCntrlDHWSys
																						else if (IfValidAnd( NumDUsNonCntrlDHW > 0.5 ) .AND. GlobalCompAssigned( ResProj:MaxNewNCntrlDHWSys ) > 0.5) then  ResProj:MaxNewNCntrlDHWSys
																						else	UNCHANGED  endif endif endif  }
	"Remove DwellUnitType:DHWSysRef[2] (if new and sim std)"		DwellUnitType:DHWSysRef[2]	= {	if (Proj:SimulateStdDHW < 0.5 .OR. IfValidAnd( DHWSysRef[2]:StdEqProp > 0.5 ) .OR. Proj:IsSFamResRuleset .OR. LocalCompAssigned( DHWSysRef[2] ) < 1 .OR.
																																	 IfValidAnd( NumDUsCntrlDHW > 0.5 )) then  UNCHANGED
																																else	UNDEFINED  endif  }
	"Remove DwellUnitType:DHWSysRef[3] (if new and sim std)"		DwellUnitType:DHWSysRef[3]	= {	if (Proj:SimulateStdDHW < 0.5 .OR. IfValidAnd( DHWSysRef[3]:StdEqProp > 0.5 ) .OR. Proj:IsSFamResRuleset .OR. LocalCompAssigned( DHWSysRef[3] ) < 1 .OR.
																																	 IfValidAnd( NumDUsCntrlDHW > 0.5 )) then  UNCHANGED
																																else	UNDEFINED  endif  }
	"Remove DwellUnitType:DHWSysRef[4] (if new and sim std)"		DwellUnitType:DHWSysRef[4]	= {	if (Proj:SimulateStdDHW < 0.5 .OR. IfValidAnd( DHWSysRef[4]:StdEqProp > 0.5 ) .OR. Proj:IsSFamResRuleset .OR. LocalCompAssigned( DHWSysRef[4] ) < 1 .OR.
																																	 IfValidAnd( NumDUsCntrlDHW > 0.5 )) then  UNCHANGED
																																else	UNDEFINED  endif  }
	"Remove DwellUnitType:DHWSysRef[5] (if new and sim std)"		DwellUnitType:DHWSysRef[5]	= {	if (Proj:SimulateStdDHW < 0.5 .OR. IfValidAnd( DHWSysRef[5]:StdEqProp > 0.5 ) .OR. Proj:IsSFamResRuleset .OR. LocalCompAssigned( DHWSysRef[5] ) < 1 .OR.
																																	 IfValidAnd( NumDUsCntrlDHW > 0.5 )) then  UNCHANGED
																																else	UNDEFINED  endif  }

	; SAC 10/7/15 - remove assignment of second Zone DHWSys if both are assigned and either New or Altered & not verified
  ; LDH 170525 - these rules seem to be redundant with the 'Set Zone:DHWSys2 (remove assignment)' rules above.
;********************************************************************
;	"Reset Zone:DHWSys2 assignment"			Zone:DHWSys2		= {	if (Proj:SimulateStdDHW < 0.5 .OR. Proj:IsComRuleset .OR. LocalCompAssigned( DHWSys2 ) < 1 .OR. DHWSys2Status != 3) then  UNCHANGED
;																						else if ( ( LocalCompAssigned( DHWSys1 ) > 0 .AND. DHWSys1Status == 3 ) .OR.
;																									 ( LocalCompAssigned( AltDHWSys1 ) > 0 .AND. DHWSys1Status == 2 .AND. IfValidAnd( DHWSys2Verified > 0 )==0 ) )
;																						then	UNDEFINED
;																						else	UNCHANGED  endif endif }
;	"Reset Zone:AltDHWSys2 assignment"		Zone:AltDHWSys2	= {	if (Proj:SimulateStdDHW < 0.5 .OR. Proj:IsComRuleset .OR. LocalCompAssigned( AltDHWSys2 ) < 1 .OR. DHWSys2Status != 2) then  UNCHANGED
;																						else if ( (LocalCompAssigned(    DHWSys1 ) > 0 .AND. DHWSys1Status == 3) .OR.
;																									 (LocalCompAssigned( AltDHWSys1 ) > 0 .AND. DHWSys1Status == 2 .AND. IfValidAnd( DHWSys2Verified > 0 )==0))
;																						then	UNDEFINED
;																						else	UNCHANGED  endif endif  }
;*********************************************************************


   ; SAC 2/16/18 - (tic #983)
   ; SAC 9/30/18 - mod to prevent use of new T24 std design HPWH in DesignRtg reference runs
   ; SAC 12/11/18 - altered logic to setup 'Std UEF2 NEEA HPWH' for NumElecHeaters as opposed to just HeatersAllElec (HPWHSIZE)
   ; SAC 12/19/18 - switched from check for DHWSys:NumElecHeaters to IsStdDesignElec in order to prevent Std Dsgn HPWH for > 8 DwellUnit or recric systems (HPWHSIZE)
   "Import HPWH from library if use is possible"      Proj:StdElecDHWHeater = {
         if (IfValidAnd( EngyCodeYearNum >= 2019 ) .AND. IfValidAnd( ResProj:DRtgRefRunID > 1900 )==0 .AND.
             SimulateStdDHW > 0.5 .AND. SumAll( DHWSys:IsStdDesignElec ) > 0)
         then  RuleLibrary( DHWHeater, "Std UEF2 NEEA HPWH" )
         else  UNDEFINED  endif  }
   "Position std design HPWH in largest cond Zone (if specified)"    Proj:Action =        ; SAC 01/22/21
      {  if (IfValidAnd( ResProj:AllowStdDesignFuel > 0 ) .AND. IfValidAnd( ResProj:StdDesignHPWHLocOverride > 0 ) .AND.
             LocalCompAssigned( StdElecDHWHeater ) .AND. (ResProj:RunAbbrev == "s" .OR. ResProj:RunAbbrev == "zb" .OR. (IfValidAnd( ResProj:SMFFollowsStdDesignFuel > 0 ) .AND. ResProj:RunAbbrev == "smf")))
         then  EvalRulelist( "BudgetConversion_DHW_StdHPWHToCondZone" )
         else  UNCHANGED  endif  }

   "Set Proj:StdElecDHWHeater:ForceStdDesign"   Proj:StdElecDHWHeater:ForceStdDesign = {  0  }
   ; SAC 2/16/18 - allow defaulting rules to set location of DHWHtr (which defaults first to Garage) (tic #983)
   ; "Set Proj:StdElecDHWHeater:TankZone based in part on presence of Garage"   Proj:StdElecDHWHeater:TankZone  = {
   ;      if (HasGarage > 0.5 .OR. ComponentCount( Garage ) > 0) then  MaxAllComp( Garage:Area )

   ; SAC 1/8/19 - same as above but for CENTRAL HPWHs to be located in garage or outside (for all CZs)
   "Import HPWH from library if use is possible (for Central htrs)"     Proj:StdCntrlElecDHWHtr = {
         if (IfValidAnd( EngyCodeYearNum >= 2019 ) .AND. IfValidAnd( ResProj:DRtgRefRunID > 1900 )==0 .AND.
             Proj:SimulateStdDHW > 0.5 .AND. SumAll( DHWSys:IsStdDesignElec ) > 0 .AND.
             SumAcrossIf( DHWSys:CentralDHW, DHWSys:FloorAreaServed[1] > 1 ) > 0)
         then  RuleLibrary( DHWHeater, "Std Cntrl UEF2 NEEA HPWH" )
         else  UNDEFINED  endif  }
   "Set Proj:StdCntrlElecDHWHtr:ForceStdDesign (for Central htrs)"   Proj:StdCntrlElecDHWHtr:ForceStdDesign  = {  0  }
   "Set Proj:StdCntrlElecDHWHtr:TankOutside (for Central htrs)"      Proj:StdCntrlElecDHWHtr:TankOutside  = {
         if (ComponentCount( Garage ) < 1) then  1  else  0  endif  }
   "Set Proj:StdCntrlElecDHWHtr:TankZone (for Central htrs)"         Proj:StdCntrlElecDHWHtr:TankZone  = {
         if (IfValidAnd( StdCntrlElecDHWHtr:TankOutside < 1 ))
         then  MaxAllComp( Garage:Area )
         else  UNCHANGED  endif  }

   ; SAC 1/12/19 - create DWHRSys for elec DHW std design if might be needed
   "Create Proj:StdElecDWHRSysRef[1] (individual HPs) if use possible"    Proj:StdElecDWHRSysRef[1]  =            ; StdDesignDrnWtrHtRecYear - SAC 01/22/21   ; Unchanged for non-MFam dwelling models - SAC 03/01/22
      {  if (IfValidAnd( SimMFamUnits > 0 )==0 .OR. ComponentCount( ResProj ) < 1) then  UNCHANGED
         else if (LocalCompAssigned( StdElecDHWHeater   ) > 0 .AND.
                  T24RClimateZoneCodeBase:ElecDHWDrnWtrHtRecovEff( "ClimateZone", Proj:CliZnNum, "CodeBase", Proj:StdDesignDrnWtrHtRecYear, "BldgType", Proj:BldgTypeTblStr ) > 0.01)
         then  CreateComp( DWHRSys, "Std Design Indiv DWHRSys" )
         else  UNCHANGED  endif endif  }
   "Set Proj:StdElecDWHRSysRef[1]:CSARatedEff"     Proj:StdElecDWHRSysRef[1]:CSARatedEff  =                       ; StdDesignDrnWtrHtRecYear - SAC 01/22/21
      {  T24RClimateZoneCodeBase:ElecDHWDrnWtrHtRecovEff( "ClimateZone", Proj:CliZnNum, "CodeBase", Proj:StdDesignDrnWtrHtRecYear, "BldgType", Proj:BldgTypeTblStr )  }
   "Create Proj:StdElecDWHRSysRef[2] (sm central HPs) if use possible"    Proj:StdElecDWHRSysRef[2]  = {
         if (LocalCompAssigned( Proj:StdCntrlElecDHWHtr ) > 0)
         then  CreateComp( DWHRSys, "Std Design Cntrl DWHRSys" )
         else  UNCHANGED  endif  }
   "Set Proj:StdElecDWHRSysRef[2]:CSARatedEff"     Proj:StdElecDWHRSysRef[2]:CSARatedEff  = {  60  }

  ; SAC 1/11/16 - REPLACE first heater in MaxNewNCntrlDHWSys if it is NOT a DHWHeater object (could be an air-to-water heat pump) (tic 560)
  ; SAC 6/27/18 - fix problem where return value from EvalRulelist() incompatible w/ original rule property (ResProj:MaxNewNCntrlDHWSys:DHWHeater[1])
	"Replace ResProj:MaxNewNCntrlDHWSys:DHWHeater[1] (if necessary)"	
				ResProj:MaxNewNCntrlDHWSys:Action      	= {	if (Proj:SimulateStdDHW < 0.5 .OR. IfValidAnd( MaxNewNCntrlDHWSys:IsExisting > 0.5 ) .OR.
																				 (IsMultiFamily > 0.5 .AND. IfValidAnd( MaxNewNCntrlDHWSys:CentralDHW > 0.5 )) .OR.
																				 (IfValidAnd( MaxNewNCntrlDHWSys:IsAltered > 0.5 ) .AND. IfValidAnd( MaxNewNCntrlDHWSys:IsVerified > 0.5 ))) then  UNCHANGED
																			else if (LocalCompAssigned( MaxNewNCntrlDHWSys:DHWHeater[1] ) == ComponentType( "ResWtrHtr" )) then  UNCHANGED
																			else	EvalRulelist( "BudgetConversion_DHWHeater_ImportFromLibrary" )
																			endif endif  }

   ; SAC 10/5/15 - Added eval of rulelist to prevent multiple heaters in a system and multipliers > 1 for any standard design system
   ; SAC 10/27/15 - prevent removing DHWHeater assignments from CENTRAL systems
   ; revise logic to prevent heater trimming for Altered (not just Altered-Verified) systems - SAC 09/02/20
   ; revise to eval rulelist to assign individual std HPWH for Altered HPWHs - SAC 09/02/20
	"Trim DHWHeater assignments/counts to DHWSys objects to 1 per -OR- assign StdCntrlElecDHWHtr for Altered HPWHs"      DHWSys:Action		= {
         if (Proj:SimulateStdDHW < 0.5 .OR. IfValidAnd( StdEqProp > 0.5 ) .OR. IfValidAnd( IsExisting > 0.5 ) .OR.
             (Proj:IsComRuleset .AND. IfValidAnd( CentralDHW > 0.5 ))) then  UNCHANGED
         else if (IfValidAnd( IsAltered > 0.5 ))
         then  EvalRulelist( "BudgetConversion_DHWSys_AssignStdElecDHWHeaters", 1 )
         else	EvalRulelist( "BudgetConversion_DHWSys_SingleHeater", 1 )
         endif endif  }

   ; SAC 3/8/18 - similar rule as above only this time to assign StdElecDHWHeater to each heater assignment of all-elec std design systems (tic #983)
   ; SAC 12/10/18 - revised rule to assign StdElecDHWHeater to each heater assignment of all-elec std design systems regardless of MFamDistType (tic #975)
   ; SAC 12/11/18 - swapped out logical reference to HeatersAllElec with new NumElecHeaters to enable replacement of any/all Elec htrs (HPWHSIZE)
   ; SAC 12/19/18 - switched from use of NumElecHeaters to IsStdDesignElec in order to prevent Std Dsgn HPWH for > 8 DwellUnit or recric systems (HPWHSIZE)
   ; SAC 1/8/19 - revised to reference StdCntrlElecDHWHtr (located in garage or outside) as opposed to StdElecDHWHeater
   ; revise logic to prevent StdElecDHWHeater heater assignment for Altered (not just Altered-Verified) systems -AND- rulelist to assign individual std HPWH for Altered HPWHs - SAC 09/02/20
   "Assign StdCntrlElecDHWHtr for central systems w/ 1 or more electric heaters"		DHWSys:Action		= {
         if (Proj:EngyCodeYearNum < 2019 .OR. Proj:SimulateStdDHW < 0.5 .OR. IfValidAnd( StdEqProp > 0.5 ) .OR. IfValidAnd( IsExisting > 0.5 ) .OR. IfValidAnd( CentralDHW > 0.5 )==0 .OR.
             IfValidAnd( IsStdDesignElec > 0 )==0 .OR. GlobalCompAssigned( Proj:StdCntrlElecDHWHtr )==0 .OR. IfValidAnd( IsAltered > 0.5 )) then  UNCHANGED
         else  EvalRulelist( "BudgetConversion_DHWSys_CentralElecHeaters", 1 )
         endif  }
           ;  IfValidAnd( CentralDHW > 0.5 )==0 .OR. MFamDistType != 0 .OR. HeatersAllElec < 1 .OR. GlobalCompAssigned( Proj:StdElecDHWHeater )==0 .OR.
   ; SAC 12/21/18 - reset DHWSys:TotNumDHWHeaters & ResProj:NumDHWEquipUnits following possible Std design replacements
   "Set DHWSys:TotNumDHWHeaters & ResProj:NumDHWEquipUnits via subordinate rulelist"      ResProj:Action  = {
         EvalRulelist( "Set_ResDHWSys_TotNumDHWHeaters" )  }

   ; SAC 12/11/18 - set flag to trigger HPWH sizing prior to final simulation (by DHWSys) - HPWHSIZE
   ; SAC 12/16/18 - added logic ensuring StdElecDHWHeater:HeaterElementType = 5 (not the case in StdMixedFuel runs) - HPWHSIZE
   ; SAC 12/19/18 - added logic to PREVENT HPWH sizing for any non-central system - HPWHSIZE
   "Set DHWSys:HPWHSizingReqd flag"    DHWSys:HPWHSizingReqd  = {
         if (IfValidAnd( ResProj:DRtgRefRunID > 1900 ) .OR. GlobalCompAssigned( Proj:StdCntrlElecDHWHtr )==0 .OR.
             IfValidAnd( Proj:StdElecDHWHeater:HeaterElementType = 5 )==0) then  UNCHANGED
         else if (IfValidAnd( CentralDHW > 0 )==0) then  UNDEFINED
         else if ((IfValidAnd( HeaterMultFlt[1] > 0 ) .AND. IfValidAnd( DHWHeater[1] = Proj:StdCntrlElecDHWHtr )) .OR.
                  (IfValidAnd( HeaterMultFlt[2] > 0 ) .AND. IfValidAnd( DHWHeater[2] = Proj:StdCntrlElecDHWHtr )) .OR.
                  (IfValidAnd( HeaterMultFlt[3] > 0 ) .AND. IfValidAnd( DHWHeater[3] = Proj:StdCntrlElecDHWHtr )) .OR.
                  (IfValidAnd( HeaterMultFlt[4] > 0 ) .AND. IfValidAnd( DHWHeater[4] = Proj:StdCntrlElecDHWHtr )) .OR.
                  (IfValidAnd( HeaterMultFlt[5] > 0 ) .AND. IfValidAnd( DHWHeater[5] = Proj:StdCntrlElecDHWHtr )) .OR.
                  (IfValidAnd( HeaterMultFlt[6] > 0 ) .AND. IfValidAnd( DHWHeater[6] = Proj:StdCntrlElecDHWHtr )))
         then  1  else  UNDEFINED  endif endif endif  }
   "Set ResProj:CSE_HPWHSizingReqd"       ResProj:CSE_HPWHSizingReqd  = {  SumAll( DHWSys:HPWHSizingReqd )  }

   "Set DHWSolarSys:NumHPWHNeedingSizing - # DHWSystems served that require CSE HPWH sizing performed"   DHWSolarSys:NumHPWHNeedingSizing  =    ; SAC 2/11/20 (tic #862)
      {  if (IfValidAnd( FloorAreaServed > 0 )==0) then  UNDEFINED
         else  SumRevRef( DHWSys:DHWSolarSysRef, DHWSys:HPWHSizingReqd )  endif  }
   "Set ResProj:CSE_HPWHSizUseSSF - whether HPWH sizing runs need to use annual/constant SSFs (rather than DHWSolarSys) during sizing process"     ; SAC 2/11/20 (tic #862)
      ResProj:CSE_HPWHSizUseSSF   = {  if (MaxAll( DHWSolarSys:NumHPWHNeedingSizing ) > 1) then  1  else  UNDEFINED  endif  }

   "Set DHWSys:HPWHSizeMultGuess (based on # dwelling units served and how many heaters in system)"    DHWSys:HPWHSizeMultGuess  =     ; NumAssignedCommonDUEquiv - SAC 10/10/24 (tic #3630)
      {  if (IfValidAnd( HPWHSizingReqd > 0 ))
         then  if ((IfValidAnd( NumAssignedDUFracs > 0 ) .OR. IfValidAnd( NumAssignedCommonDUEquiv > 0 )) .AND. IfValidAnd( TotNumDHWHeaters > 0 ))
               then  max( 2, ValidOr( ResProj:CSE_HPWHSzGuessMlt, 1/3 ) * (ValidOr( NumAssignedDUFracs, 0 ) + ValidOr( NumAssignedCommonDUEquiv, 0 )) / TotNumDHWHeaters )
               else if (IfValidAnd( NumAssignedDUFracs > 0 ) .OR. IfValidAnd( NumAssignedCommonDUEquiv > 0 ))
               then  max( 2, ValidOr( ResProj:CSE_HPWHSzGuessMlt, 1/3 ) * (ValidOr( NumAssignedDUFracs, 0 ) + ValidOr( NumAssignedCommonDUEquiv, 0 )) )
               else  3  endif endif
         else  UNDEFINED  endif  }

      ;DHWSys:HPWHSizeMult,   NotInput,   BEMP_Flt,  1,  0,  0,  "HPWH size multiplier (resulting from sizing runs triggered by HPWHSizingReqd)" 

   ; SAC 1/1/19 - revised HPWHSIZE properties to drive new 3-run curve fit sizing mechanism
   "Set ResProj:StdHPWHSzNumRuns"      ResProj:StdHPWHSzNumRuns  = {
         if (IfValidAnd( BypassRuleLimits > 0 ) .AND. LocalStatus( StdHPWHSzNumRuns ) > 5) then  UNCHANGED
         else if (CSE_HPWHSizingReqd < 0.5) then  UNDEFINED
         else  3  endif endif  }
   ; SAC 1/2/19 - HPWHSIZE
   "Set ResProj:StdHPWHSzTDVTbl"       ResProj:StdHPWHSzTDVTbl  = {
         if (IfValidAnd( BypassRuleLimits > 0 ) .AND. LocalStatus( StdHPWHSzTDVTbl ) > 5) then  UNCHANGED
         else if (CSE_HPWHSizingReqd < 0.5) then  UNDEFINED
         else  TDVTableName  endif endif  }     ; SAC 6/10/19 - 2022
       ;  else  "TDVTable"  endif endif  }
   "Set ResProj:StdHPWHSzTDVCol"       ResProj:StdHPWHSzTDVCol  = {
         if (IfValidAnd( BypassRuleLimits > 0 ) .AND. LocalStatus( StdHPWHSzTDVCol ) > 5) then  UNCHANGED
         else if (CSE_HPWHSizingReqd < 0.5) then  UNDEFINED
         else  ((ClimateZone-1) * 3) + 1  endif endif  }
   ; SAC 1/3/19 - revisions to multiplier guess formulas // SAC 1/4/19 - readjust mins: none for StdHPWHSzRunMlts[2] and 0.2 for [1]
   "Set DHWSys:StdHPWHSzRunMlts[2] (best guess)"      DHWSys:StdHPWHSzRunMlts[2]  =                ; NumAssignedCommonDUEquiv - SAC 10/10/24 (tic #3630)
      {  if (IfValidAnd( ResProj:BypassRuleLimits > 0 ) .AND. LocalStatus( StdHPWHSzRunMlts[2] ) > 5) then  UNCHANGED
         else if (IfValidAnd( HPWHSizingReqd > 0 )==0) then  UNDEFINED
         else  if ((ValidOr( NumAssignedDUFracs, 0 ) + ValidOr( NumAssignedCommonDUEquiv, 0 )) >= 2 .AND.
                   IfValidAnd( NumAssignedBRFracs >= 0 ) .AND. IfValidAnd( TotNumDHWHeaters > 0 ))
               then  (1 + ((ValidOr( NumAssignedDUFracs, 0 ) + ValidOr( NumAssignedCommonDUEquiv, 0 ) - 2) * 0.33) + (NumAssignedBRFracs * 0.0125)) / TotNumDHWHeaters
               else if ((ValidOr( NumAssignedDUFracs, 0 ) + ValidOr( NumAssignedCommonDUEquiv, 0 )) >= 2 .AND.
                        IfValidAnd( NumAssignedBRFracs >= 0 ))
               then  (1 + ((ValidOr( NumAssignedDUFracs, 0 ) + ValidOr( NumAssignedCommonDUEquiv, 0 ) - 2) * 0.33) + (NumAssignedBRFracs * 0.0125))
               else  2  endif endif
         endif endif  }
   "Set DHWSys:StdHPWHSzRunMlts[1] (low end)"         DHWSys:StdHPWHSzRunMlts[1]  = {
         if (IfValidAnd( ResProj:BypassRuleLimits > 0 ) .AND. LocalStatus( StdHPWHSzRunMlts[1] ) > 5) then  UNCHANGED
         else if (IfValidAnd( HPWHSizingReqd > 0 )==0) then  UNDEFINED
         else  max( 0.2, (ValidOr( StdHPWHSzRunMlts[2], 1 ) * 0.3) )
         endif endif  }
   ;      else  max( 0.2, (ValidOr( StdHPWHSzRunMlts[2], 2 ) - 1.5) )
   "Set DHWSys:StdHPWHSzRunMlts[3] (high end)"        DHWSys:StdHPWHSzRunMlts[3]  = {
         if (IfValidAnd( ResProj:BypassRuleLimits > 0 ) .AND. LocalStatus( StdHPWHSzRunMlts[3] ) > 5) then  UNCHANGED
         else if (IfValidAnd( HPWHSizingReqd > 0 )==0) then  UNDEFINED
         else  ValidOr( StdHPWHSzRunMlts[2], 1 ) * 1.4
         endif endif  }

;   "Set ResProj:CSE_HPWHSizingFrac"       ResProj:CSE_HPWHSizingFrac  = {
;         if (IfValidAnd( BypassRuleLimits > 0 ) .AND.
;             LocalStatus( CSE_HPWHSizingFrac ) > 5) then  UNCHANGED
;         else if (CSE_HPWHSizingReqd < 0.5) then  UNDEFINED
;         else  0.005
;         endif endif  }
;   "Set ResProj:CSE_HPWHSizingTol"        ResProj:CSE_HPWHSizingTol   = {
;         if (IfValidAnd( BypassRuleLimits > 0 ) .AND.
;             LocalStatus( CSE_HPWHSizingTol ) > 5) then  UNCHANGED
;         else if (CSE_HPWHSizingReqd < 0.5) then  UNDEFINED
;         else  ValidOr( CSE_HPWHSizingFrac, 0.005 ) * 0.02
;         endif endif  }  ; SAC 12/22/18 - doubled tolerance to prevent non-convergence
;   "Set ResProj:CSE_HPWHSizingTol"        ResProj:CSE_HPWHSizingTol   = {  if (CSE_HPWHSizingReqd < 0.5) then  UNDEFINED  else  0.005 * 0.01   endif  }

   "Set ResProj:CSE_HPWHSzGuessMlt"       ResProj:CSE_HPWHSzGuessMlt   = {
         if (IfValidAnd( BypassRuleLimits > 0 ) .AND.
             LocalStatus( CSE_HPWHSzGuessMlt ) > 5) then  UNCHANGED
         else if (CSE_HPWHSizingReqd < 0.5) then  UNDEFINED
         else  1/3
         endif endif  }  ; SAC 12/25/18 - added to enable manipulation of HPWH sizing guess

;   "Set ResProj:StdHPWHSizingMult"        ResProj:StdHPWHSizingMult    = {
;         if (IfValidAnd( BypassRuleLimits > 0 ) .AND.
;             LocalStatus( StdHPWHSizingMult ) > 5) then  UNCHANGED
;         else if (CSE_HPWHSizingReqd < 0.5) then  UNDEFINED
;         else  1.0
;         endif endif  }  ; SAC 12/26/18 - added to enable oversizing of std design HPWH (applied in sizing source code) (HPWHSIZE)
   "Set ResProj:StdHPWHSizingForm"        ResProj:StdHPWHSizingForm  = {
         if (IfValidAnd( BypassRuleLimits > 0 ) .AND.
             LocalStatus( StdHPWHSizingForm ) > 5) then  UNCHANGED
         else if (CSE_HPWHSizingReqd < 0.5) then  UNDEFINED
         else  0     ; XBU/Total
         endif endif  }    ; Formula used to calculate HPWH size fraction used in iterative sizing calc - SAC 12/26/18 (HPWHSIZE)

  ; SAC 10/6/15 - moved rules setting DHWHeater floor area served & hydronic heating-related properties to subordinate rulelist, to facilitate their evaluation during BudgetConversion
	"Set DHWHeater floor area served properties"		Proj:Action		= {	EvalRulelist( "Default_DHWHeater_AreaServedAndHydronic" )  }

   ; LDH 170722 calculate or lookup intermediate variables used to determine minimum efficiency for UEF rated DHW equip
  "Set Tank Volume Category for Consumer UEF rated storage water heaters"  DHWHeater:UEFMinTankVolCat ={
    if( ( IfValidAnd( HeaterType = 12 ) .AND.
          LocalStatus( TankVolume ) > 0 ) .OR.
        ( HeaterElementType = 5 .AND.
          IsUEF ) )
    then if( IfValidAnd( TankVolume <= 55 ) )
      then 1   ;   <=55 gal
      else 2   ;   >50 gal
      endif
    else 0     ;   na
    endif }

  "Lookup up Volume Coef for UEFMin Equation"  DHWHeater:UEFMinCoef1 = {
    CAUEFMinCoef:Coef1_Vol( "HeaterElementTypeIdx",HeaterElementType,
                            "TankTypeIdx",HeaterType,
                            "TankVolCatIdx",UEFMinTankVolCat,
                            "DrawPattern", UEFModelDrawPattern ) }

  "Lookup up Constant Coef for UEFMin Equation"  DHWHeater:UEFMinCoef2 = {
    CAUEFMinCoef:Coef2_Const( "HeaterElementTypeIdx",HeaterElementType,
                              "TankTypeIdx",HeaterType,
                              "TankVolCatIdx",UEFMinTankVolCat,
                              "DrawPattern", UEFModelDrawPattern ) }


   ; LDH 170722 moved rule above rulelist calls which switch heater element type and tank type
   ; SAC 8/22/16 - updated old 0.60 EnergyFactor w/ 0.82 (tic #740)
// TO DO - This can all be collapsed into one equation if the tables referenced above are expanded to handle non-UEF types , no time to test prior to current release.
	"Assign Code-level EnergyFactor for Altered DHWHeater" DHWHeater:AltEnergyFactor = {	   
    if (ResProj:DRtgRefRunID == 2014)			; "RESNET2014"
    then	switch ( HeaterElementType )
      case  0 :	0.9172   ; "electric"                                      
      case  1 :	0.60	   ; "gas"                                       
      case  2 :	0.60	   ; "propane"                                     
      case  3 :	0.9172   ; "heat pump"                                     
      case  4 :	0.60		; "oil"                                     
      default :	0.60
      endswitch
    else	switch (HeaterElementType)
      case  0 :	
        switch (HeaterType)			; "Electric Resistance" 
        case  5 : int( 1000 * ( 0.93 - (0.00132 * ValidOr( TankVolume, 0 )) ) + 0.5 ) / 1000  ; "Small Tankless"
        case  6 :	if (IfValidAnd( TankVolume > 55 ))           ; "Small Storage"  		; SAC 1/4/16 - .97 -> .945 (tic 547)
          then int( 1000 * ( 2.057 - (0.00113 * TankVolume               ) ) + 0.5 ) / 1000
			  	else int( 1000 * ( 0.960 - (0.0003  * ValidOr( TankVolume, 50 )) ) + 0.5 ) / 1000  
          endif
        case 10 : int( 1000 * ( UEFMinCoef2 + (UEFMinCoef1  * ValidOr( TankVolume, 0  )) ) + 0.5 ) / 1000 
        case 12 : int( 1000 * ( UEFMinCoef2 + (UEFMinCoef1  * ValidOr( TankVolume, 50 )) ) + 0.5 ) / 1000   
        case 15 : int( 1000 * ( UEFMinCoef2 + (UEFMinCoef1  * ValidOr( TankVolume, 50 )) ) + 0.5 ) / 1000   
        default : 0.93
        endswitch
      case  1 : 
        switch (HeaterType)       ; "Natural Gas"   
        case  5 :   int( 1000 * ( 0.82 - (0.0019 * ValidOr( TankVolume, 0 )) ) + 0.5 ) / 1000   ; "Small Tankless"
        case  6 :	if (IfValidAnd( TankVolume > 55 ))           ; "Small Storage"
          then int( 1000 * ( 0.8012 - (0.00078 * TankVolume               ) ) + 0.5 ) / 1000
          else int( 1000 * ( 0.675  - (0.0015  * ValidOr( TankVolume, 50 )) ) + 0.5 ) / 1000  
          endif
        case 10 : int( 1000 * ( UEFMinCoef2 + (UEFMinCoef1  * ValidOr( TankVolume, 0  )) ) + 0.5 ) / 1000 
        case 12 : int( 1000 * ( UEFMinCoef2 + (UEFMinCoef1  * ValidOr( TankVolume, 50 )) ) + 0.5 ) / 1000   
        case 15 : int( 1000 * ( UEFMinCoef2 + (UEFMinCoef1  * ValidOr( TankVolume, 50 )) ) + 0.5 ) / 1000  
        default :   0.80							; SAC 11/10/15 - updated from 0.575
        endswitch
      case  2 :
        switch (HeaterType)       ; "Propane"             
        case  6 :	if (IfValidAnd( TankVolume > 55 ))           ; "Small Storage"
          then  int( 1000 * ( 0.8012 - (0.00078 * TankVolume               ) ) + 0.5 ) / 1000
          else  int( 1000 * ( 0.675  - (0.0015  * ValidOr( TankVolume, 50 )) ) + 0.5 ) / 1000  
          endif
        case  5 :   int( 1000 * ( 0.82 - (0.0019 * ValidOr( TankVolume, 0 )) ) + 0.5 ) / 1000   ; "Small Tankless"
        default :   0.80							; SAC 11/10/15 - updated from 0.575
        endswitch
      case  3 :   
        switch (HeaterType)       ; "Heat Pump-2013"           
        case  6 :	int( 1000 * ( 0.97 - (0.00132 * ValidOr( TankVolume, 50 )) ) + 0.5 ) / 1000   ; "Small Storage" 
				case  5 : int( 1000 * ( 0.97 - (0.00132 * ValidOr( TankVolume,  0 )) ) + 0.5 ) / 1000   ; "Small Tankless"
				default :   0.97
				endswitch
      case  5 :   
        switch( IsUEF ) 
        case 1 : int( 1000 * ( UEFMinCoef2 + (UEFMinCoef1  * ValidOr( TankVolume, 50 )) ) + 0.5 ) / 1000
        default: if( IfValidAnd( HPWH_NEEARated  = 1 ) )
                 then 0.59
                 else int( 1000 * ( 0.97 - (0.00132 * ValidOr( TankVolume, 50 )) ) + 0.5 ) / 1000
                 endif
        endswitch
      default :	0.59
      endswitch   
    endif }


	; SAC 10/27/15 - moved rule setting DHWHeater:HeaterElementType to subordinate rulelist to prevent Resets of other properties we want to retain
	"Eval rulelist to reset DHWHeater:HeaterElementType when needed"	Proj:Action	= {	EvalRulelist( "BudgetConversion_DHWHeater_HeaterElementType" )  }

; SAC 11/10/15 - no longer needed w/ addition of ResProj:GasType
;	"Set ResProj:StdDHWFuelErrMsg if/when changes to NatGasAvailable are required but will cause TDV inconsistencies between proposed and standard results"
;		ResProj:StdDHWFuelErrMsg	= {	if (StdDesignBase < 2016 .OR. ResProj:NatGasAvailable > 0.5 .OR. SumAll( DHWHeater:StdDesignIsNatGas ) < 0.5) then  0		; none
;												else if (SumAll( Zone:Appl_DryerGain[3] ) > 0 .OR. SumAll( Zone:Appl_CookGain[3] ) > 0)						then  1		; Appliance fuel (cooking and/or dryer) TDV inconsistency
;												else if (SumAll( HVACSys:GasHeatAreaServed ) > 0)																			then  2		; Proposed model HVAC fuel use TDV inconsistency
;												else if (SumAll( DHWHeater:StdDesignIsNatGas ) > 0.5 .AND. SumAll( DHWHeater:StdDesignIsPropane ) > 0.5)	then  3		; Combination of Natural Gas and Propane water heaters prescribed in standard and/or reference model(s)
;												else  0  endif endif endif endif  }

;	"TEST shifting fuel use from Other to NatGas"
;		Zone:Appl_DryerGain[2]	= {	if (ResProj:NatGasAvailable < 0.5 .AND. SumAll( DHWHeater:StdDesignIsNatGas ) > 0.5 .AND. IfValidAnd( Appl_DryerGain[3] > 0 )) then  Appl_DryerGain[3]  else  UNCHANGED  endif  }
;	"TEST shifting fuel use from Other to NatGas"
;		Zone:Appl_DryerGain[3]	= {	if (ResProj:NatGasAvailable < 0.5 .AND. SumAll( DHWHeater:StdDesignIsNatGas ) > 0.5 .AND. IfValidAnd( Appl_DryerGain[2] > 0 )) then  0  else  UNCHANGED  endif  }

; SAC 11/10/15 - toggling of ResProj:NatGasAvailable no longer necessary
;	"Toggle ResProj:NatGasAvailable when std design DHWHeater switched to Nat Gas and there aren't any TDV problems w/ the switch"
;		ResProj:NatGasAvailable	= {	if (NatGasAvailable < 0.5 .AND. Proj:StdDesignBase >= 2016 .AND. SumAll( DHWHeater:StdDesignIsNatGas ) > 0.5 .AND. StdDHWFuelErrMsg == 0) then  1
;											else	UNCHANGED  endif  }

	; SAC 10/27/15 - moved rule setting DHWHeater:TankType to subordinate rulelist to prevent Resets of other properties we want to retain
	; SAC 12/30/19 - added logic to prevent reset of TankType for new central, recirc, gas boilers (tic #862)
	"Eval rulelist to reset DHWHeater:TankType when needed"	DHWHeater:Action	= 
      {  if (TankType == 16 .AND. LocalStatus( TankType ) == 3) then  UNCHANGED
         else  EvalRulelist( "BudgetConversion_DHWHeater_TankType", 1 )  endif  }

   ; SAC 4/20/15 - added logic for Propane (needed for 2016 standard design)
   ; SAC 8/28/17 - apply new StdInpRtgConv (fuel unit conversion factor) should InputRating be retained in translation from prop to std model (tic #893)
   ; SAC 6/13/18 - updated InputRating property name to InputRatingSim to accommodate InputRating being ignored for most heater types (tic #940)
	"Reset DHWHeater:InputRatingSim (when simulating std design)"
      DHWHeater:InputRatingSim			= {
         if (IfValidAnd( ForceStdDesign > 0.5 )==0) then  UNCHANGED
         else	switch (HeaterElementType)
         			case  0 :   			; (watts)  "Electric Resistance"
         			         	if (NewCntrlAreaServed >= 1)
         			            then  if (LocalStatus(InputRatingSim) < 1) then  UNCHANGED
         			                  else  InputRatingSim * ValidOr( StdInpRtgConv, 1 )  endif
         							else  8000  endif										; (watts)   "Electric Resistance" 
         			case  1 :   			; (Btu/hr)  "Natural Gas"   
         							if (HeaterType == 5) then  		200000			; Small Instantaneous
         							else if (HeaterType == 9) then  UNDEFINED		; Consumer Instantaneous (UEF)-New
         							else if (HeaterType == 0 || 							; "Boiler"     ; SAC 8/28/17 - retain user's InputRating for central boilers & indirect heaters (tic #892)
         							         HeaterType == 1 || 							; "Indirect"
         							         HeaterType == 3 || 							; "Large Storage"
         										HeaterType == 2)                      ; "Large Instantaneous"
         							then	if (LocalStatus(InputRatingSim) < 1) then  UNCHANGED
         			                  else  InputRatingSim * ValidOr( StdInpRtgConv, 1 )  endif
         							else 				40000  endif endif endif	   ; "Small Storage"
         			case  2 :   			; (Btu/hr)  "Propane"   
         							if (HeaterType == 5) then  200000					; Small Instantaneous
         							else if (HeaterType == 3 || 							; "Large Storage"
         										HeaterType == 2)                      ; "Large Instantaneous"
         							then	if (LocalStatus(InputRatingSim) < 1) then  UNCHANGED
         			                  else  InputRatingSim * ValidOr( StdInpRtgConv, 1 )  endif
         							else	40000  endif endif							; "Small Storage"
         			default :	UNDEFINED
         		endswitch  endif  }


; LH 170721 - store away AltDHWSys1:DHWHeater[1]:EnergyFactor PRIOR to being reset so that multiple comparisons (due to mult zone assignments) set consistently (tic #740)
;   "Store DHWHeater:TankVolume away for later comparison" DHWHeater:PropTankVolume = {  
;     if( IfValidAnd( TankVolume > 0 ) )
;     then TankVolume
;     else 0
;     endif }

	"Reset DHWHeater:TankVolume (when simulating std design)"	
			DHWHeater:TankVolume				= {	if (IfValidAnd( ForceStdDesign > 0.5 )==0) then  UNCHANGED
															else if (ResProj:DRtgRefRunID == 2014 .AND. (HeaterElementType == 0 .OR. HeaterElementType == 1) .AND.		; SAC 4/15/16 - use 40gal for Gas RESNET as well
																			(HeaterType == 5 || HeaterType == 6)) then  40		; SAC 4/7/16 - tic #631
															else if (NewCntrlAreaServed >= 1 .and. (HeaterType == 5 || HeaterType == 6)) then  UNCHANGED
															else if (HeaterType == 5) then   0			; Small Instantaneous
															else if (HeaterType == 9) then   0			; Consumer Instantaneous (UEF)-New
															else if (HeaterType == 6) then  50			; "Small Storage" 
															else  UNCHANGED
															endif endif endif endif endif endif  }

	"Reset DHWHeater:IntInsulRVal (when simulating std design)"		DHWHeater:IntInsulRVal		= {	if (IfValidAnd( ForceStdDesign > 0.5 )==0 .OR. NewCntrlAreaServed >= 1) then  UNCHANGED  else  0  endif  }
	"Reset DHWHeater:ExtInsulRVal (when simulating std design)"		DHWHeater:ExtInsulRVal		= {	if (IfValidAnd( ForceStdDesign > 0.5 )==0 .OR. NewCntrlAreaServed >= 1) then  UNCHANGED  else  0  endif  }
	"Reset DHWHeater:StandbyLossFrac (when simulating std design)"	DHWHeater:StandbyLossFrac	= {	if (IfValidAnd( ForceStdDesign > 0.5 )==0 .OR. NewCntrlAreaServed >= 1) then  UNCHANGED  else  0  endif  }
	"Reset DHWHeater:StandbyLossMult (when simulating std design)"	DHWHeater:StandbyLossMult	= {	if (IfValidAnd( ForceStdDesign > 0.5 )==0 .OR. NewCntrlAreaServed >= 1) then  UNCHANGED  else  1  endif  }    ; SAC 10/18/17

	; SAC 11/10/15 - add standby loss defaulting for large heaters based on fed appliance stds   - SAC 11/11/15 - added in elec storage losses + indirect fuel   - SAC 11/19/15 - added logic to set SBL to 0 for non-elec tanks < 10gal
   ; SAC 8/28/17 - revised logic to leave user input (pilot energy) unchanged when TankVolume >0 & <10 gals (tic #895)
   ; SAC 11/13/17 - revised result via new round() function to ensure consistency w/ input project precision (tic #892)
	"Set standard design DHWHeater:StandbyLossFrac for heaters"
				DHWHeater:StandbyLossFrac	= {	if (IfValidAnd( ForceStdDesign > 0.5 )==0) then  UNCHANGED
															else if (HeaterElementType = 1 .AND. HeaterType == 9) then  UNDEFINED      ; Consumer Instantaneous (UEF)-New
															else if (IfValidAnd( TankVolume > 0 )==0) then  UNCHANGED
															else if (HeaterElementType = 0 .OR. HeaterElementType = 3 .OR. HeaterElementType = 6)		; Electric
															then	if (HeaterType == 2 .OR. HeaterType == 0 .OR. HeaterType == 1)
																	then	round( ((0.3 + (27 / TankVolume )) / 100) * (8.25 * TankVolume * 70), 5 )		; Btuh
																	else if (HeaterType == 3)
																	then	round(  (0.3 + (27 / TankVolume )) / 100, 5 )											; frac
																	else	UNCHANGED  endif endif
															else if (HeaterElementType != 0 .AND. HeaterElementType != 3 .AND. HeaterElementType != 6)	; NOT elec
															then	if (HeaterType == 2 .OR. HeaterType == 0 .OR. HeaterType == 1)
																	then	if (TankVolume < 10) then  UNCHANGED
																			else	round(  (ValidOr( InputRatingSim, 0 ) / 800) + (110 * sqrt( TankVolume )), 5 )										; Btuh	
																			endif
																	else if (HeaterType == 3)
																	then	if (TankVolume < 10) then  UNCHANGED
																			else	round( ((ValidOr( InputRatingSim, 0 ) / 800) + (110 * sqrt( TankVolume ))) / (8.25 * TankVolume * 70), 5 )	; frac
																			endif
																	else	UNCHANGED  endif endif
															else	UNCHANGED  endif endif endif endif endif  }

; SAC 8/22/16 - fix for below rule to store away AltDHWSys1:DHWHeater[1]:EnergyFactor PRIOR to being reset so that multiple comparisons (due to mult zone assignments) set consistently (tic #740)
   "Store DHWHeater:EnergyFactor away for later comparison (into :PropEnergyFactor)"
         DHWHeater:PropEnergyFactor  = {  if (IfValidAnd( ResProj:DRtgRefRunID <= 0 )==0) then  UNCHANGED
                                          else  EnergyFactor  endif  }

	; SAC 9/1/15 - added logic to ensure EnergyFactor defaulted when ForceStdDesign true and TankType == Small Storage (or anything other than Small Instantaneous)
;  mjb 02/25/16   RESNET
   ; SAC 8/29/16 - updated 2016 T-24 efficiencies for small storage & instantaneous heaters to properly reflect tank size adjustments present in federal standards (table F-3) (tic #725)
   ; SAC 8/31/16 - added logic to round efficiencies to nearest 1/1000 (tic #725)
	"Assign Code-level EnergyFactor for DHWHeater"		; SAC 3/19/15 - added for 2016, multi-family, non-central DHW -> instantaneous
			DHWHeater:EnergyFactor 	= {	if (IfValidAnd( ForceStdDesign > 0.5 )==0) then  UNCHANGED
												;	else if (HeaterType == 5) then  0.82		; Small Instantaneous
													else if (ResProj:DRtgRefRunID == 2014)			; "RESNET2014"
													then	switch (HeaterElementType)
																case  0 :	switch (HeaterType)			; "Electric Resistance" 
																					case  6 :	0.9172				; "Small Storage" 
																					case  5 :   0.9172				; "Small Tankless"
																					default :   0.9172
																				endswitch
																case  1 :   switch (HeaterType)       ; "Natural Gas"   
																					case  6 :	0.594					; "Small Storage" 
																					case  5 :   0.594					; "Small Tankless"
																					default :   0.594
																				endswitch
																case  2 :   switch (HeaterType)       ; "Propane"             
																					case  6 :	0.594					; "Small Storage" 
																					case  5 :   0.594					; "Small Tankless"
																					default :   0.594
																				endswitch
																case  3 :   switch (HeaterType)       ; "Heat Pump"           
																					case  6 :	0.9172				; "Small Storage" 
																					case  5 :   0.9172				; "Small Tankless"
																					default :   0.9172
																				endswitch
																case  4 :   switch (HeaterType)       ; "Oil"   
																					case  6 :	0.60					; "Small Storage" 
																					case  5 :   0.82					; "Small Tankless"
																					default :   0.575
																				endswitch
																default :	0.59
															endswitch
													else if (ResProj:DRtgRefRunID == 2006)		; SAC 3/15/16 - same as CARes2013-14 for IECC2006 (tic #625)
													then	switch (HeaterElementType)
																case  0 :	switch (HeaterType)			; "Electric Resistance" 
																					case  6 :	0.945					; "Small Storage" 		; SAC 1/4/16 - .97 -> .945 (tic 547)
																					case  5 :   0.93					; "Small Tankless"
																					default :   0.93
																				endswitch
																case  1 :   switch (HeaterType)       ; "Natural Gas"   
																					case  6 :	0.575					; "Small Storage" 
																					case  5 :   0.82					; "Small Tankless"
																					default :   0.575
																				endswitch
																case  2 :   switch (HeaterType)       ; "Propane"             
																					case  6 :	0.575					; "Small Storage" 
																					case  5 :   0.82					; "Small Tankless"
																					default :   0.575
																				endswitch
																case  3 :   switch (HeaterType)       ; "Heat Pump"           
																					case  6 :	0.97					; "Small Storage" 
																					case  5 :   0.97					; "Small Tankless"
																					default :   0.97
																				endswitch
																case  4 :   switch (HeaterType)       ; "Oil"   
																					case  6 :	0.575					; "Small Storage" 
																					case  5 :   0.82					; "Small Tankless"
																					default :   0.575
																				endswitch
																default :	0.59
															endswitch
													else	switch (HeaterElementType)
																case  0 :	switch (HeaterType)			; "Electric Resistance" 
																					case  6 :	if (IfValidAnd( TankVolume > 55 ))           ; "Small Storage"  		; SAC 1/4/16 - .97 -> .945 (tic 547)
																					            then  int( 1000 * ( 2.057 - (0.00113 * TankVolume               ) ) + 0.5 ) / 1000
																					            else  int( 1000 * ( 0.960 - (0.0003  * ValidOr( TankVolume, 50 )) ) + 0.5 ) / 1000  endif
																					case  5 :   int( 1000 * ( 0.93 - (0.00132 * ValidOr( TankVolume, 0 )) ) + 0.5 ) / 1000  ; "Small Tankless"
                                                               case  9 :   0.92   ; Consumer Instantaneous (UEF)  - SAC 09/01/20 (tic #1187)
                                                               case 12 :   0.92   ; Consumer Storage (UEF)        - SAC 09/01/20 (tic #1187)
																					default :   0.93
																				endswitch
																case  1 :   switch (HeaterType)       ; "Natural Gas"   
																					case  6 :	if (IfValidAnd( TankVolume > 55 ))           ; "Small Storage"
																					            then  int( 1000 * ( 0.8012 - (0.00078 * TankVolume               ) ) + 0.5 ) / 1000
																					            else  int( 1000 * ( 0.675  - (0.0015  * ValidOr( TankVolume, 50 )) ) + 0.5 ) / 1000  endif
																					case  5 :   int( 1000 * ( 0.82 - (0.0019 * ValidOr( TankVolume, 0 )) ) + 0.5 ) / 1000   ; "Small Tankless"
																					case  9 :   0.81					; Consumer Instantaneous (UEF)-New
                                                               case 12 :   0.56   ; Consumer Storage (UEF)        - SAC 09/01/20 (tic #1187)
																					default :   0.80							; SAC 11/10/15 - updated from 0.575
																				endswitch
																case  2 :   switch (HeaterType)       ; "Propane"             
																					case  6 :	if (IfValidAnd( TankVolume > 55 ))           ; "Small Storage"
																					            then  int( 1000 * ( 0.8012 - (0.00078 * TankVolume               ) ) + 0.5 ) / 1000
																					            else  int( 1000 * ( 0.675  - (0.0015  * ValidOr( TankVolume, 50 )) ) + 0.5 ) / 1000  endif
																					case  5 :   int( 1000 * ( 0.82 - (0.0019 * ValidOr( TankVolume, 0 )) ) + 0.5 ) / 1000   ; "Small Tankless"
																					case  9 :   0.81	 ; Consumer Instantaneous (UEF)  - SAC 09/01/20 (tic #1187)
                                                               case 12 :   0.56   ; Consumer Storage (UEF)        - SAC 09/01/20 (tic #1187)
																					default :   0.80							; SAC 11/10/15 - updated from 0.575
																				endswitch
																case  3 :   switch (HeaterType)       ; "Heat Pump"           
																					case  6 :	int( 1000 * ( 0.97 - (0.00132 * ValidOr( TankVolume, 50 )) ) + 0.5 ) / 1000   ; "Small Storage" 
																					case  5 :   int( 1000 * ( 0.97 - (0.00132 * ValidOr( TankVolume,  0 )) ) + 0.5 ) / 1000   ; "Small Tankless"
																					default :   0.97
																				endswitch
													;			case  4 :   switch (HeaterType)       ; "Oil"   
													;								case  6 :	0.60					; "Small Storage" 
													;								case  5 :   0.82					; "Small Tankless"
													;								default :   0.575
													;							endswitch
																default :	0.59
															endswitch
													endif endif endif  }

   ; SAC 8/20/18 - ported DHWHeater:RecovEff default rule here from Rule_Default_DHW.rule to ensure std design UEF calculated based on valid RecovEff
	"Default DHWHeater:RecovEff"			DHWHeater:RecovEff	= {
      if (IfValidAnd( ForceStdDesign > 0.5 )==0) then  UNCHANGED
      else if ( CanBeCHWHeater .AND. HeaterType < 9 )	then  70
      else
   		switch (HeaterElementType)
            case  0 :            ; "Electric Resistance" 
               switch (HeaterType)
                  case 10 :   99		; "Consumer Instantaneous (UEF)"             
                  case 12 :   99		; "Consumer Storage (UEF)"                   
                  default :   UNDEFINED
               endswitch
            case  1 :          ; "Natural Gas"   
               switch (HeaterType)
        ;          case  9 :   82		; "Consumer Instantaneous (UEF)-New"  - allow to default via formula (tic #1054) - SAC 1/18/19
                  case 10 :   83		; "Consumer Instantaneous (UEF)"             
                  case 12 :   78		; "Consumer Storage (UEF)"                   
                  case 14 :   80		; "Residential-Duty Commercial Storage (UEF)"
                  default :   UNDEFINED
               endswitch
            default :  UNDEFINED
         endswitch
      endif endif  }

   ; SAC 8/15/17 - added properties specific to 'Consumer Instantaneous (UEF)-New' type
	"Set DHWHeater:RatedFlow"		DHWHeater:RatedFlow 		= {  
	      if (IfValidAnd( ForceStdDesign > 0.5 )==0 .OR. HeaterType != 9) then  UNCHANGED  else  4.7  endif  }
	"Set DHWHeater:AnnFuelUse"		DHWHeater:AnnFuelUse 	= {  
	      if (IfValidAnd( ForceStdDesign > 0.5 )==0 .OR. HeaterType != 9) then  UNCHANGED  else  205  endif  }
	"Set DHWHeater:AnnElecUse"		DHWHeater:AnnElecUse 	= {  
	      if (IfValidAnd( ForceStdDesign > 0.5 )==0 .OR. HeaterType != 9) then  UNCHANGED  else  52   endif  }
	"Set DHWHeater:StandbyElec"	DHWHeater:StandbyElec 	= {  
	      if (IfValidAnd( ForceStdDesign > 0.5 )==0 .OR. HeaterType != 9) then  UNCHANGED  else  4   endif  }
	;"Set DHWHeater:RecovEff"		DHWHeater:RecovEff 		= {  
	;      if (IfValidAnd( ForceStdDesign > 0.5 )==0 .OR. HeaterType != 9) then  UNCHANGED  else  82  endif  }  - allow to default via formula (tic #1054) - SAC 1/18/19


; SAC 9/19/16 - prevent proposed ElecMiniTank from transferring into baseline model
	"Disable DHWHeater:HasElecMiniTank (if applicable)"
      DHWHeater:HasElecMiniTank   = {  if (IfValidAnd( ForceStdDesign > 0.5 )==0) then  UNCHANGED
                                       else  0  endif  }

; SAC 8/22/16 - altered existing-verified EnergyFactor comparisons to compare vs. PropEnergyFactor to ensure consistent result (tic #740)
; LDH 170531 - modified rules to assign all properties of exiting, verified DHW Heaters (rather than only EF)

; AltDHWSys1 Properties
; AltDHWSys1 - DHWHeater[1] Properties
	"Change to Exist DHWSys1 DHWHeater[1] HeaterElementType if better than Code"	      ; SAC 5/15/20 - added IfValidAnd() to fix rule eval error (tic #1187)
   Zone:AltDHWSys1:DHWHeater[1]:HeaterElementType = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys1Status == 2 .AND. LocalCompAssigned( AltDHWSys1:DHWHeater[1] ) ) 
    then
      if ( DHWSys1Verified .AND. 
           IfValidAnd( AltDHWSys1:DHWHeater[1]:PropEnergyFactor >= AltDHWSys1:DHWHeater[1]:AltEnergyFactor ) .AND.
           LocalCompAssigned( exDHWSys1:DHWHeater[1] ) ) 
      then exDHWSys1:DHWHeater[1]:HeaterElementType 
      else UNCHANGED
      endif											   
    else UNCHANGED 
    endif }

	"Change to Exist DHWSys1 DHWHeater[1] TankType if better than Code"	
   Zone:AltDHWSys1:DHWHeater[1]:TankType = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys1Status == 2 .AND. LocalCompAssigned( AltDHWSys1:DHWHeater[1] ) ) 
    then
      if ( DHWSys1Verified .AND. 
           IfValidAnd( AltDHWSys1:DHWHeater[1]:PropEnergyFactor >= AltDHWSys1:DHWHeater[1]:AltEnergyFactor ) .AND.
           LocalCompAssigned( exDHWSys1:DHWHeater[1] ) ) 
      then exDHWSys1:DHWHeater[1]:TankType 
      else UNCHANGED
      endif											   
    else UNCHANGED 
    endif }

	"Change to Exist DHWSys1 DHWHeater[1] EnergyFactor if better than Code"	
   Zone:AltDHWSys1:DHWHeater[1]:EnergyFactor = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys1Status == 2 .AND. LocalCompAssigned( AltDHWSys1:DHWHeater[1] ) ) 
    then
      if ( DHWSys1Verified .AND. 
           IfValidAnd( AltDHWSys1:DHWHeater[1]:PropEnergyFactor >= AltDHWSys1:DHWHeater[1]:AltEnergyFactor ) .AND.
           LocalCompAssigned( exDHWSys1:DHWHeater[1] ) ) 
      then exDHWSys1:DHWHeater[1]:EnergyFactor 
      else AltDHWSys1:DHWHeater[1]:EnergyFactor 
      endif											   
    else UNCHANGED 
    endif }

; AltDHWSys1 - DHWHeater[2]
	"Change to Exist DHWSys1 DHWHeater[2] HeaterElementType if better than Code"	
   Zone:AltDHWSys1:DHWHeater[2]:HeaterElementType = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys1Status == 2 .AND. LocalCompAssigned( AltDHWSys1:DHWHeater[2] ) ) 
    then
      if ( DHWSys1Verified .AND. 
           IfValidAnd( AltDHWSys1:DHWHeater[2]:PropEnergyFactor >= AltDHWSys1:DHWHeater[2]:AltEnergyFactor ) )
      then 
        if( LocalCompAssigned( exDHWSys1:DHWHeater[2] ) ) 
        then exDHWSys1:DHWHeater[2]:HeaterElementType 
        else AltDHWSys1:DHWHeater[1]:HeaterElementType
        endif
      else UNCHANGED 
      endif											   
    else UNCHANGED 
    endif }

	"Change to Exist DHWSys1 DHWHeater[2] TankType if better than Code"	
   Zone:AltDHWSys1:DHWHeater[2]:TankType = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys1Status == 2 .AND. LocalCompAssigned( AltDHWSys1:DHWHeater[2] ) ) 
    then
      if ( DHWSys1Verified .AND. 
           IfValidAnd( AltDHWSys1:DHWHeater[2]:PropEnergyFactor >= AltDHWSys1:DHWHeater[2]:AltEnergyFactor ) )
      then 
        if( LocalCompAssigned( exDHWSys1:DHWHeater[2] ) ) 
        then exDHWSys1:DHWHeater[2]:TankType 
        else AltDHWSys1:DHWHeater[1]:TankType
        endif
      else UNCHANGED 
      endif											   
    else UNCHANGED 
    endif }

	"Change to Exist DHWSys1 DHWHeater[2] EnergyFactor if better than Code"	
   Zone:AltDHWSys1:DHWHeater[2]:EnergyFactor = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys1Status == 2 .AND. LocalCompAssigned( AltDHWSys1:DHWHeater[2] ) ) 
    then
      if ( DHWSys1Verified .AND. 
           IfValidAnd( AltDHWSys1:DHWHeater[2]:PropEnergyFactor >= AltDHWSys1:DHWHeater[2]:AltEnergyFactor ) )
      then 
        if( LocalCompAssigned( exDHWSys1:DHWHeater[2] ) ) 
        then exDHWSys1:DHWHeater[2]:EnergyFactor 
        else AltDHWSys1:DHWHeater[1]:EnergyFactor
        endif
      else AltDHWSys1:DHWHeater[2]:EnergyFactor 
      endif											   
    else UNCHANGED 
    endif }

; AltDHWSys1 - DHWHeater[3]
	"Change to Exist DHWSys1 DHWHeater[3] HeaterElementType if better than Code"	
   Zone:AltDHWSys1:DHWHeater[3]:HeaterElementType = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys1Status == 2 .AND. LocalCompAssigned( AltDHWSys1:DHWHeater[3] ) ) 
    then
      if ( DHWSys1Verified .AND. 
           IfValidAnd( AltDHWSys1:DHWHeater[3]:PropEnergyFactor >= AltDHWSys1:DHWHeater[3]:AltEnergyFactor ) )
      then 
        if( LocalCompAssigned( exDHWSys1:DHWHeater[3] ) ) 
        then exDHWSys1:DHWHeater[3]:HeaterElementType 
        else AltDHWSys1:DHWHeater[2]:HeaterElementType
        endif
      else UNCHANGED
      endif											   
    else UNCHANGED 
    endif }

	"Change to Exist DHWSys1 DHWHeater[3] TankType if better than Code"	
   Zone:AltDHWSys1:DHWHeater[3]:TankType = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys1Status == 2 .AND. LocalCompAssigned( AltDHWSys1:DHWHeater[3] ) ) 
    then
      if ( DHWSys1Verified .AND. 
           IfValidAnd( AltDHWSys1:DHWHeater[3]:PropEnergyFactor >= AltDHWSys1:DHWHeater[3]:AltEnergyFactor ) )
      then 
        if( LocalCompAssigned( exDHWSys1:DHWHeater[3] ) ) 
        then exDHWSys1:DHWHeater[3]:TankType 
        else AltDHWSys1:DHWHeater[2]:TankType
        endif
      else UNCHANGED
      endif											   
    else UNCHANGED 
    endif }

	"Change to Exist DHWSys1 DHWHeater[3] EnergyFactor if better than Code"	
   Zone:AltDHWSys1:DHWHeater[3]:EnergyFactor = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys1Status == 2 .AND. LocalCompAssigned( AltDHWSys1:DHWHeater[3] ) ) 
    then
      if ( DHWSys1Verified .AND. 
           IfValidAnd( AltDHWSys1:DHWHeater[3]:PropEnergyFactor >= AltDHWSys1:DHWHeater[3]:AltEnergyFactor ) )
      then 
        if( LocalCompAssigned( exDHWSys1:DHWHeater[3] ) ) 
        then exDHWSys1:DHWHeater[3]:EnergyFactor 
        else AltDHWSys1:DHWHeater[2]:EnergyFactor
        endif
      else AltDHWSys1:DHWHeater[3]:EnergyFactor 
      endif											   
    else UNCHANGED 
    endif }

; AltDHWSys1 - DHWHeater[4]
	"Change to Exist DHWSys1 DHWHeater[4] HeaterElementType if better than Code"	
   Zone:AltDHWSys1:DHWHeater[4]:HeaterElementType = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys1Status == 2 .AND. LocalCompAssigned( AltDHWSys1:DHWHeater[4] ) ) 
    then
      if ( DHWSys1Verified .AND. 
           IfValidAnd( AltDHWSys1:DHWHeater[4]:PropEnergyFactor >= AltDHWSys1:DHWHeater[4]:AltEnergyFactor ) )
      then 
        if( LocalCompAssigned( exDHWSys1:DHWHeater[4] ) ) 
        then exDHWSys1:DHWHeater[4]:HeaterElementType 
        else AltDHWSys1:DHWHeater[3]:HeaterElementType
        endif
      else UNCHANGED
      endif											   
    else UNCHANGED 
    endif }

	"Change to Exist DHWSys1 DHWHeater[4] TankType if better than Code"	
   Zone:AltDHWSys1:DHWHeater[4]:TankType = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys1Status == 2 .AND. LocalCompAssigned( AltDHWSys1:DHWHeater[4] ) ) 
    then
      if ( DHWSys1Verified .AND. 
           IfValidAnd( AltDHWSys1:DHWHeater[4]:PropEnergyFactor >= AltDHWSys1:DHWHeater[4]:AltEnergyFactor ) )
      then 
        if( LocalCompAssigned( exDHWSys1:DHWHeater[4] ) ) 
        then exDHWSys1:DHWHeater[4]:TankType 
        else AltDHWSys1:DHWHeater[3]:TankType
        endif
      else UNCHANGED
      endif											   
    else UNCHANGED 
    endif }

	"Change to Exist DHWSys1 DHWHeater[4] EnergyFactor if better than Code"	
   Zone:AltDHWSys1:DHWHeater[4]:EnergyFactor = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys1Status == 2 .AND. LocalCompAssigned( AltDHWSys1:DHWHeater[4] ) ) 
    then
      if ( DHWSys1Verified .AND. 
           IfValidAnd( AltDHWSys1:DHWHeater[4]:PropEnergyFactor >= AltDHWSys1:DHWHeater[4]:AltEnergyFactor ) )
      then 
        if( LocalCompAssigned( exDHWSys1:DHWHeater[4] ) ) 
        then exDHWSys1:DHWHeater[4]:EnergyFactor 
        else AltDHWSys1:DHWHeater[3]:EnergyFactor
        endif
      else AltDHWSys1:DHWHeater[4]:EnergyFactor 
      endif											   
    else UNCHANGED 
    endif }

; AltDHWSys1 - DHWHeater[5]
	"Change to Exist DHWSys1 DHWHeater[5] HeaterElementType if better than Code"	
   Zone:AltDHWSys1:DHWHeater[5]:HeaterElementType = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys1Status == 2 .AND. LocalCompAssigned( AltDHWSys1:DHWHeater[5] ) ) 
    then
      if ( DHWSys1Verified .AND. 
           IfValidAnd( AltDHWSys1:DHWHeater[5]:PropEnergyFactor >= AltDHWSys1:DHWHeater[5]:AltEnergyFactor ) )
      then 
        if( LocalCompAssigned( exDHWSys1:DHWHeater[5] ) ) 
        then exDHWSys1:DHWHeater[5]:HeaterElementType 
        else AltDHWSys1:DHWHeater[4]:HeaterElementType
        endif
      else UNCHANGED
      endif											   
    else UNCHANGED 
    endif }

	"Change to Exist DHWSys1 DHWHeater[5] TankType if better than Code"	
   Zone:AltDHWSys1:DHWHeater[5]:TankType = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys1Status == 2 .AND. LocalCompAssigned( AltDHWSys1:DHWHeater[5] ) ) 
    then
      if ( DHWSys1Verified .AND. 
           IfValidAnd( AltDHWSys1:DHWHeater[5]:PropEnergyFactor >= AltDHWSys1:DHWHeater[5]:AltEnergyFactor ) )
      then 
        if( LocalCompAssigned( exDHWSys1:DHWHeater[5] ) ) 
        then exDHWSys1:DHWHeater[5]:TankType 
        else AltDHWSys1:DHWHeater[4]:TankType
        endif
      else UNCHANGED
      endif											   
    else UNCHANGED 
    endif }

	"Change to Exist DHWSys1 DHWHeater[5] EnergyFactor if better than Code"	
   Zone:AltDHWSys1:DHWHeater[5]:EnergyFactor = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys1Status == 2 .AND. LocalCompAssigned( AltDHWSys1:DHWHeater[5] ) ) 
    then
      if ( DHWSys1Verified .AND. 
           IfValidAnd( AltDHWSys1:DHWHeater[5]:PropEnergyFactor >= AltDHWSys1:DHWHeater[5]:AltEnergyFactor ) )
      then 
        if( LocalCompAssigned( exDHWSys1:DHWHeater[5] ) ) 
        then exDHWSys1:DHWHeater[5]:EnergyFactor 
        else AltDHWSys1:DHWHeater[4]:EnergyFactor
        endif
      else AltDHWSys1:DHWHeater[5]:EnergyFactor 
      endif											   
    else UNCHANGED 
    endif }

; AltDHWSys1 - DHWHeater[6]
	"Change to Exist DHWSys1 DHWHeater[6] HeaterElementType if better than Code"	
   Zone:AltDHWSys1:DHWHeater[6]:HeaterElementType = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys1Status == 2 .AND. LocalCompAssigned( AltDHWSys1:DHWHeater[6] ) ) 
    then
      if ( DHWSys1Verified .AND. 
           IfValidAnd( AltDHWSys1:DHWHeater[6]:PropEnergyFactor >= AltDHWSys1:DHWHeater[6]:AltEnergyFactor ) )
      then 
        if( LocalCompAssigned( exDHWSys1:DHWHeater[6] ) ) 
        then exDHWSys1:DHWHeater[6]:HeaterElementType 
        else AltDHWSys1:DHWHeater[5]:HeaterElementType
        endif
      else UNCHANGED
      endif											   
    else UNCHANGED 
    endif }

	"Change to Exist DHWSys1 DHWHeater[6] TankType if better than Code"	
   Zone:AltDHWSys1:DHWHeater[6]:TankType = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys1Status == 2 .AND. LocalCompAssigned( AltDHWSys1:DHWHeater[6] ) ) 
    then
      if ( DHWSys1Verified .AND. 
           IfValidAnd( AltDHWSys1:DHWHeater[6]:PropEnergyFactor >= AltDHWSys1:DHWHeater[6]:AltEnergyFactor ) )
      then 
        if( LocalCompAssigned( exDHWSys1:DHWHeater[6] ) ) 
        then exDHWSys1:DHWHeater[6]:TankType 
        else AltDHWSys1:DHWHeater[5]:TankType
        endif
      else UNCHANGED
      endif											   
    else UNCHANGED 
    endif }

	"Change to Exist DHWSys1 DHWHeater[6] EnergyFactor if better than Code"	
   Zone:AltDHWSys1:DHWHeater[6]:EnergyFactor = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys1Status == 2 .AND. LocalCompAssigned( AltDHWSys1:DHWHeater[6] ) ) 
    then
      if ( DHWSys1Verified .AND. 
           IfValidAnd( AltDHWSys1:DHWHeater[6]:PropEnergyFactor >= AltDHWSys1:DHWHeater[6]:AltEnergyFactor ) )
      then 
        if( LocalCompAssigned( exDHWSys1:DHWHeater[6] ) ) 
        then exDHWSys1:DHWHeater[6]:EnergyFactor 
        else AltDHWSys1:DHWHeater[5]:EnergyFactor
        endif
      else AltDHWSys1:DHWHeater[6]:EnergyFactor 
      endif											   
    else UNCHANGED 
    endif }

; AltDHWSys2 Properties
; AltDHWSys2 - DHWHeater[1] Properties
	"Change to Exist DHWSys2 DHWHeater[1] HeaterElementType if better than Code"	
   Zone:AltDHWSys2:DHWHeater[1]:HeaterElementType = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys2Status == 2 .AND. LocalCompAssigned( AltDHWSys2:DHWHeater[1] ) ) 
    then
      if ( DHWSys2Verified .AND. 
           IfValidAnd( AltDHWSys2:DHWHeater[1]:PropEnergyFactor >= AltDHWSys2:DHWHeater[1]:AltEnergyFactor ) .AND.
           LocalCompAssigned( exDHWSys2:DHWHeater[1] ) ) 
      then exDHWSys2:DHWHeater[1]:HeaterElementType 
      else UNCHANGED
      endif											   
    else UNCHANGED 
    endif }

	"Change to Exist DHWSys2 DHWHeater[1] TankType if better than Code"	
   Zone:AltDHWSys2:DHWHeater[1]:TankType = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys2Status == 2 .AND. LocalCompAssigned( AltDHWSys2:DHWHeater[1] ) ) 
    then
      if ( DHWSys2Verified .AND. 
           IfValidAnd( AltDHWSys2:DHWHeater[1]:PropEnergyFactor >= AltDHWSys2:DHWHeater[1]:AltEnergyFactor ) .AND.
           LocalCompAssigned( exDHWSys2:DHWHeater[1] ) ) 
      then exDHWSys2:DHWHeater[1]:TankType 
      else UNCHANGED
      endif											   
    else UNCHANGED 
    endif }

	"Change to Exist DHWSys2 DHWHeater[1] EnergyFactor if better than Code"	
   Zone:AltDHWSys2:DHWHeater[1]:EnergyFactor = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys2Status == 2 .AND. LocalCompAssigned( AltDHWSys2:DHWHeater[1] ) ) 
    then
      if ( DHWSys2Verified .AND. 
           IfValidAnd( AltDHWSys2:DHWHeater[1]:PropEnergyFactor >= AltDHWSys2:DHWHeater[1]:AltEnergyFactor ) .AND.
           LocalCompAssigned( exDHWSys2:DHWHeater[1] ) ) 
      then exDHWSys2:DHWHeater[1]:EnergyFactor 
      else AltDHWSys2:DHWHeater[1]:EnergyFactor 
      endif											   
    else UNCHANGED 
    endif }

; AltDHWSys2 - DHWHeater[2]
	"Change to Exist DHWSys2 DHWHeater[2] HeaterElementType if better than Code"	
   Zone:AltDHWSys2:DHWHeater[2]:HeaterElementType = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys2Status == 2 .AND. LocalCompAssigned( AltDHWSys2:DHWHeater[2] ) ) 
    then
      if ( DHWSys2Verified .AND. 
           IfValidAnd( AltDHWSys2:DHWHeater[2]:PropEnergyFactor >= AltDHWSys2:DHWHeater[2]:AltEnergyFactor ) )
      then 
        if( LocalCompAssigned( exDHWSys2:DHWHeater[2] ) ) 
        then exDHWSys2:DHWHeater[2]:HeaterElementType 
        else AltDHWSys2:DHWHeater[1]:HeaterElementType
        endif
      else UNCHANGED
      endif											   
    else UNCHANGED 
    endif }

	"Change to Exist DHWSys2 DHWHeater[2] TankType if better than Code"	
   Zone:AltDHWSys2:DHWHeater[2]:TankType = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys2Status == 2 .AND. LocalCompAssigned( AltDHWSys2:DHWHeater[2] ) ) 
    then
      if ( DHWSys2Verified .AND. 
           IfValidAnd( AltDHWSys2:DHWHeater[2]:PropEnergyFactor >= AltDHWSys2:DHWHeater[2]:AltEnergyFactor ) )
      then 
        if( LocalCompAssigned( exDHWSys2:DHWHeater[2] ) ) 
        then exDHWSys2:DHWHeater[2]:TankType 
        else AltDHWSys2:DHWHeater[1]:TankType
        endif
      else UNCHANGED
      endif											   
    else UNCHANGED 
    endif }

	"Change to Exist DHWSys2 DHWHeater[2] EnergyFactor if better than Code"	
   Zone:AltDHWSys2:DHWHeater[2]:EnergyFactor = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys2Status == 2 .AND. LocalCompAssigned( AltDHWSys2:DHWHeater[2] ) ) 
    then
      if ( DHWSys2Verified .AND. 
           IfValidAnd( AltDHWSys2:DHWHeater[2]:PropEnergyFactor >= AltDHWSys2:DHWHeater[2]:AltEnergyFactor ) )
      then 
        if( LocalCompAssigned( exDHWSys2:DHWHeater[2] ) ) 
        then exDHWSys2:DHWHeater[2]:EnergyFactor 
        else AltDHWSys2:DHWHeater[1]:EnergyFactor
        endif
      else AltDHWSys2:DHWHeater[2]:EnergyFactor 
      endif											   
    else UNCHANGED 
    endif }

; AltDHWSys2 - DHWHeater[3]
	"Change to Exist DHWSys2 DHWHeater[3] HeaterElementType if better than Code"	
   Zone:AltDHWSys2:DHWHeater[3]:HeaterElementType = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys2Status == 2 .AND. LocalCompAssigned( AltDHWSys2:DHWHeater[3] ) ) 
    then
      if ( DHWSys2Verified .AND. 
           IfValidAnd( AltDHWSys2:DHWHeater[3]:PropEnergyFactor >= AltDHWSys2:DHWHeater[3]:AltEnergyFactor ))
      then 
        if( LocalCompAssigned( exDHWSys2:DHWHeater[3] ) ) 
        then exDHWSys2:DHWHeater[3]:HeaterElementType 
        else AltDHWSys2:DHWHeater[2]:HeaterElementType
        endif
      else UNCHANGED
      endif											   
    else UNCHANGED 
    endif }

	"Change to Exist DHWSys2 DHWHeater[3] TankType if better than Code"	
   Zone:AltDHWSys2:DHWHeater[3]:TankType = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys2Status == 2 .AND. LocalCompAssigned( AltDHWSys2:DHWHeater[3] ) ) 
    then
      if ( DHWSys2Verified .AND. 
           IfValidAnd( AltDHWSys2:DHWHeater[3]:PropEnergyFactor >= AltDHWSys2:DHWHeater[3]:AltEnergyFactor ))
      then 
        if( LocalCompAssigned( exDHWSys2:DHWHeater[3] ) ) 
        then exDHWSys2:DHWHeater[3]:TankType 
        else AltDHWSys2:DHWHeater[2]:TankType
        endif
      else UNCHANGED
      endif											   
    else UNCHANGED 
    endif }

	"Change to Exist DHWSys2 DHWHeater[3] EnergyFactor if better than Code"	
   Zone:AltDHWSys2:DHWHeater[3]:EnergyFactor = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys2Status == 2 .AND. LocalCompAssigned( AltDHWSys2:DHWHeater[3] ) ) 
    then
      if ( DHWSys2Verified .AND. 
           IfValidAnd( AltDHWSys2:DHWHeater[3]:PropEnergyFactor >= AltDHWSys2:DHWHeater[3]:AltEnergyFactor ))
      then 
        if( LocalCompAssigned( exDHWSys2:DHWHeater[3] ) ) 
        then exDHWSys2:DHWHeater[3]:EnergyFactor 
        else AltDHWSys2:DHWHeater[2]:EnergyFactor
        endif
      else AltDHWSys2:DHWHeater[3]:EnergyFactor 
      endif											   
    else UNCHANGED 
    endif }

; AltDHWSys2 - DHWHeater[4]
	"Change to Exist DHWSys2 DHWHeater[4] HeaterElementType if better than Code"	
   Zone:AltDHWSys2:DHWHeater[4]:HeaterElementType = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys2Status == 2 .AND. LocalCompAssigned( AltDHWSys2:DHWHeater[4] ) ) 
    then
      if ( DHWSys2Verified .AND. 
           IfValidAnd( AltDHWSys2:DHWHeater[4]:PropEnergyFactor >= AltDHWSys2:DHWHeater[4]:AltEnergyFactor ))
      then 
        if( LocalCompAssigned( exDHWSys2:DHWHeater[4] ) ) 
        then exDHWSys2:DHWHeater[4]:HeaterElementType 
        else AltDHWSys2:DHWHeater[3]:HeaterElementType
        endif
      else UNCHANGED
      endif											   
    else UNCHANGED 
    endif }

	"Change to Exist DHWSys2 DHWHeater[4] TankType if better than Code"	
   Zone:AltDHWSys2:DHWHeater[4]:TankType = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys2Status == 2 .AND. LocalCompAssigned( AltDHWSys2:DHWHeater[4] ) ) 
    then
      if ( DHWSys2Verified .AND. 
           IfValidAnd( AltDHWSys2:DHWHeater[4]:PropEnergyFactor >= AltDHWSys2:DHWHeater[4]:AltEnergyFactor ))
      then 
        if( LocalCompAssigned( exDHWSys2:DHWHeater[4] ) ) 
        then exDHWSys2:DHWHeater[4]:TankType 
        else AltDHWSys2:DHWHeater[3]:TankType
        endif
      else UNCHANGED
      endif											   
    else UNCHANGED 
    endif }

	"Change to Exist DHWSys2 DHWHeater[4] EnergyFactor if better than Code"	
   Zone:AltDHWSys2:DHWHeater[4]:EnergyFactor = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys2Status == 2 .AND. LocalCompAssigned( AltDHWSys2:DHWHeater[4] ) ) 
    then
      if ( DHWSys2Verified .AND. 
           IfValidAnd( AltDHWSys2:DHWHeater[4]:PropEnergyFactor >= AltDHWSys2:DHWHeater[4]:AltEnergyFactor ))
      then 
        if( LocalCompAssigned( exDHWSys2:DHWHeater[4] ) ) 
        then exDHWSys2:DHWHeater[4]:EnergyFactor 
        else AltDHWSys2:DHWHeater[3]:EnergyFactor
        endif
      else AltDHWSys2:DHWHeater[4]:EnergyFactor 
      endif											   
    else UNCHANGED 
    endif }

; AltDHWSys2 - DHWHeater[5]
	"Change to Exist DHWSys2 DHWHeater[5] HeaterElementType if better than Code"	
   Zone:AltDHWSys2:DHWHeater[5]:HeaterElementType = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys2Status == 2 .AND. LocalCompAssigned( AltDHWSys2:DHWHeater[5] ) ) 
    then
      if ( DHWSys2Verified .AND. 
           IfValidAnd( AltDHWSys2:DHWHeater[5]:PropEnergyFactor >= AltDHWSys2:DHWHeater[5]:AltEnergyFactor ) )
      then 
        if( LocalCompAssigned( exDHWSys2:DHWHeater[5] ) ) 
        then exDHWSys2:DHWHeater[5]:HeaterElementType 
        else AltDHWSys2:DHWHeater[4]:HeaterElementType
        endif
      else UNCHANGED
      endif											   
    else UNCHANGED 
    endif }

	"Change to Exist DHWSys2 DHWHeater[5] TankType if better than Code"	
   Zone:AltDHWSys2:DHWHeater[5]:TankType = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys2Status == 2 .AND. LocalCompAssigned( AltDHWSys2:DHWHeater[5] ) ) 
    then
      if ( DHWSys2Verified .AND. 
           IfValidAnd( AltDHWSys2:DHWHeater[5]:PropEnergyFactor >= AltDHWSys2:DHWHeater[5]:AltEnergyFactor ) )
      then 
        if( LocalCompAssigned( exDHWSys2:DHWHeater[5] ) ) 
        then exDHWSys2:DHWHeater[5]:TankType 
        else AltDHWSys2:DHWHeater[4]:TankType
        endif
      else UNCHANGED
      endif											   
    else UNCHANGED 
    endif }

	"Change to Exist DHWSys2 DHWHeater[5] EnergyFactor if better than Code"	
   Zone:AltDHWSys2:DHWHeater[5]:EnergyFactor = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys2Status == 2 .AND. LocalCompAssigned( AltDHWSys2:DHWHeater[5] ) ) 
    then
      if ( DHWSys2Verified .AND. 
           IfValidAnd( AltDHWSys2:DHWHeater[5]:PropEnergyFactor >= AltDHWSys2:DHWHeater[5]:AltEnergyFactor ) )
      then 
        if( LocalCompAssigned( exDHWSys2:DHWHeater[5] ) ) 
        then exDHWSys2:DHWHeater[5]:EnergyFactor 
        else AltDHWSys2:DHWHeater[4]:EnergyFactor
        endif
      else AltDHWSys2:DHWHeater[5]:EnergyFactor 
      endif											   
    else UNCHANGED 
    endif }

; AltDHWSys2 - DHWHeater[6]
	"Change to Exist DHWSys2 DHWHeater[6] HeaterElementType if better than Code"	
   Zone:AltDHWSys2:DHWHeater[6]:HeaterElementType = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys2Status == 2 .AND. LocalCompAssigned( AltDHWSys2:DHWHeater[6] ) ) 
    then
      if ( DHWSys2Verified .AND. 
           IfValidAnd( AltDHWSys2:DHWHeater[6]:PropEnergyFactor >= AltDHWSys2:DHWHeater[6]:AltEnergyFactor ))
      then 
        if( LocalCompAssigned( exDHWSys2:DHWHeater[6] ) ) 
        then exDHWSys2:DHWHeater[6]:HeaterElementType 
        else AltDHWSys2:DHWHeater[5]:HeaterElementType
        endif
      else UNCHANGED
      endif											   
    else UNCHANGED 
    endif }

	"Change to Exist DHWSys2 DHWHeater[6] TankType if better than Code"	
   Zone:AltDHWSys2:DHWHeater[6]:TankType = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys2Status == 2 .AND. LocalCompAssigned( AltDHWSys2:DHWHeater[6] ) ) 
    then
      if ( DHWSys2Verified .AND. 
           IfValidAnd( AltDHWSys2:DHWHeater[6]:PropEnergyFactor >= AltDHWSys2:DHWHeater[6]:AltEnergyFactor ))
      then 
        if( LocalCompAssigned( exDHWSys2:DHWHeater[6] ) ) 
        then exDHWSys2:DHWHeater[6]:TankType 
        else AltDHWSys2:DHWHeater[5]:TankType
        endif
      else UNCHANGED
      endif											   
    else UNCHANGED 
    endif }

	"Change to Exist DHWSys2 DHWHeater[6] EnergyFactor if better than Code"	
   Zone:AltDHWSys2:DHWHeater[6]:EnergyFactor = {	
    if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. 
         DHWSys2Status == 2 .AND. LocalCompAssigned( AltDHWSys2:DHWHeater[6] ) ) 
    then
      if ( DHWSys2Verified .AND. 
           IfValidAnd( AltDHWSys2:DHWHeater[6]:PropEnergyFactor >= AltDHWSys2:DHWHeater[6]:AltEnergyFactor ))
      then 
        if( LocalCompAssigned( exDHWSys2:DHWHeater[6] ) ) 
        then exDHWSys2:DHWHeater[6]:EnergyFactor 
        else AltDHWSys2:DHWHeater[5]:EnergyFactor
        endif
      else AltDHWSys2:DHWHeater[6]:EnergyFactor 
      endif											   
    else UNCHANGED 
    endif }

   "Set DHWHeater:HeaterType to handle lots of defaulting and UI - needed to differentiate original Elec/Gas ConsInst from new CSE model"  ; SAC 3/1/18 (tic #993)
      DHWHeater:HeaterType  = {
         if (HeaterElementType == 1 .AND. TankType == 10 .AND.
             IfValidAnd( Proj:EngyCodeYearNum >= 2019 ))
         then  9
         else  TankType
         endif  }


; AltDHWSys1 SystemType
   ; SAC 3/8/18 - revised logic to set flag for all-elec central systems w/ no recirc (tic #983)
   "Set Zone:AltDHWSys1:IsStdDesignElec - whether this system is setup as an electric standard design"  ; SAC 2/16/18 - tic #983
      Zone:AltDHWSys1:IsStdDesignElec = {
         if (Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. DHWSys1Status == 2 .AND.
             DHWSys1Verified .AND. LocalCompAssigned( exDHWSys1 )) then  UNCHANGED
         else if (Proj:SimulateStdDHW > 0.5)
         then  if (AltDHWSys1:FloorAreaServed[1] > 0.1 .AND. (AltDHWSys1:CentralDHW == 0 .OR. AltDHWSys1:MFamDistType == 0) .AND. AltDHWSys1:HeatersAllElec == 1)
               then  1  else  UNCHANGED  endif
         else  UNCHANGED  endif endif  }
	; SAC 4/30/15 - added logic to ensure modeling std design as 'Standard' when simulating std design and system is non-central) (issue 530)
	"Change to Exist DHWSys1 SystemType if better than Code"	
      Zone:AltDHWSys1:SystemType = {
         if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. DHWSys1Status == 2 .AND. DHWSys1Verified .AND. LocalCompAssigned( exDHWSys1 ) )
         then  exDHWSys1:SystemType
         else if ( Proj:SimulateStdDHW > 0.5 .AND. (Proj:IsSFamResRuleset .OR. IfValidAnd( AltDHWSys2:CentralDHW > 0.5 )) )
         then  if (DHWSys1:CentralDHW == 0 .AND. DHWSys1:HeatersAllElec == 1)
               then  T24RClimateZoneCodeBase:ElecDHWDwellUnitDist( "ClimateZone", Proj:CliZnNum, "CodeBase", Proj:StdDesignBase, "BldgType", Proj:BldgTypeTblStr )
               else  T24RClimateZoneCodeBase:DHWDwellUnitDist(     "ClimateZone", Proj:CliZnNum, "CodeBase", Proj:StdDesignBase, "BldgType", Proj:BldgTypeTblStr )
               endif
         else UNCHANGED endif endif }

; AltDHWSys1 SolFracType
	; SAC 4/22/15 - eliminate solar fraction data for altered, unverified DHW systems to prevent them from effecting std design results (GC 507)
	"Change to Exist DHWSys1 SolFracType if better than Code"	
			Zone:AltDHWSys1:SolFracType = {	if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. DHWSys1Status == 2 )
														then	if ( DHWSys1Verified .AND. LocalCompAssigned( exDHWSys1 ) )
																then	exDHWSys1:SolFracType
																else	1  endif
														else UNCHANGED endif }
; AltDHWSys1 SolFracAnn
	"Change to Exist DHWSys1 SolFracAnn if better than Code"	
			Zone:AltDHWSys1:SolFracAnn = {	if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. DHWSys1Status == 2 )
														then	if ( DHWSys1Verified .AND. LocalCompAssigned( exDHWSys1 ) )
																then	exDHWSys1:SolFracAnn
																else	0  endif
														else UNCHANGED endif }
; AltDHWSys1 SolFracMon
	"Change to Exist DHWSys1 SolFracMon if better than Code"	
			Zone:AltDHWSys1:SolFracMon = {	if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. DHWSys1Status == 2 .AND. DHWSys1Verified .AND. LocalCompAssigned( exDHWSys1 ) ) then
															exDHWSys1:SolFracMon
														else UNCHANGED endif }

; AltDHWSys2 SystemType
   ; SAC 3/8/18 - revised logic to set flag for all-elec central systems w/ no recirc (tic #983)
   "Set Zone:AltDHWSys2:IsStdDesignElec - whether this system is setup as an electric standard design"  ; SAC 2/16/18 - tic #983
      Zone:AltDHWSys2:IsStdDesignElec = {
         if (Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. DHWSys2Status == 2 .AND.
             DHWSys2Verified .AND. LocalCompAssigned( exDHWSys2 )) then  UNCHANGED
         else if (Proj:SimulateStdDHW > 0.5)
         then  if (AltDHWSys2:FloorAreaServed[1] > 0.1 .AND. (AltDHWSys2:CentralDHW == 0 .OR. AltDHWSys2:MFamDistType == 0) .AND. AltDHWSys2:HeatersAllElec == 1)
               then  1  else  UNCHANGED  endif
         else  UNCHANGED  endif endif  }
	; SAC 4/30/15 - added logic to ensure modeling std design as 'Standard' when simulating std design and system is non-central) (issue 530)
	"Change to Exist DHWSys2 SystemType if better than Code"	
      Zone:AltDHWSys2:SystemType = {
         if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. DHWSys2Status == 2 .AND. DHWSys2Verified .AND. LocalCompAssigned( exDHWSys2 ) )
         then  exDHWSys2:SystemType
         else if ( Proj:SimulateStdDHW > 0.5 .AND. (Proj:IsSFamResRuleset .OR. IfValidAnd( AltDHWSys2:CentralDHW > 0.5 )) )
         then  if (AltDHWSys2:CentralDHW == 0 .AND. AltDHWSys2:HeatersAllElec == 1)
               then  T24RClimateZoneCodeBase:ElecDHWDwellUnitDist( "ClimateZone", Proj:CliZnNum, "CodeBase", Proj:StdDesignBase, "BldgType", Proj:BldgTypeTblStr )
               else  T24RClimateZoneCodeBase:DHWDwellUnitDist(     "ClimateZone", Proj:CliZnNum, "CodeBase", Proj:StdDesignBase, "BldgType", Proj:BldgTypeTblStr )
               endif
         else UNCHANGED endif endif }

; AltDHWSys2 SolFracType
	; SAC 4/22/15 - eliminate solar fraction data for altered, unverified DHW systems to prevent them from effecting std design results (GC 507)
	"Change to Exist DHWSys2 SolFracType if better than Code"	
			Zone:AltDHWSys2:SolFracType = {	if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. DHWSys2Status == 2 )
														then	if ( DHWSys2Verified .AND. LocalCompAssigned( exDHWSys2 ) )
																then	exDHWSys2:SolFracType
																else	1  endif
														else UNCHANGED endif }
; AltDHWSys2 SolFracAnn
	"Change to Exist DHWSys2 SolFracAnn if better than Code"	
			Zone:AltDHWSys2:SolFracAnn = {	if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. DHWSys2Status == 2 )
														then	if ( DHWSys2Verified .AND. LocalCompAssigned( exDHWSys2 ) )
																then	exDHWSys2:SolFracAnn
																else	0  endif
														else UNCHANGED endif }
; AltDHWSys2 SolFracMon
	"Change to Exist DHWSys1 SolFracMon if better than Code"	
			Zone:AltDHWSys2:SolFracMon = {	if ( Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. DHWSys2Status == 2 .AND. DHWSys2Verified .AND. LocalCompAssigned( exDHWSys2 ) ) then
															exDHWSys2:SolFracMon
														else UNCHANGED endif }

; New DHWSys1 budget conversion	
   ; SAC 3/8/18 - revised logic to set flag for all-elec central systems w/ no recirc (tic #983)
   "Set Zone:DHWSys1:IsStdDesignElec - whether this system is setup as an electric standard design"  ; SAC 2/16/18 - tic #983
      Zone:DHWSys1:IsStdDesignElec = {
         if ((Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. DHWSys1Status == 3) .OR. (Proj:SimulateStdDHW > 0.5 .AND. IfValidAnd( DHWSys1:StdEqProp < 0.5 )))
         then  if (DHWSys1:FloorAreaServed[1] > 0.1 .AND. (DHWSys1:CentralDHW == 0 .OR. DHWSys1:MFamDistType == 0) .AND. DHWSys1:HeatersAllElec == 1)
               then  1
               else  UNCHANGED  endif
         else  UNCHANGED  endif  }
	; SAC 4/28/15 - added logic to switch non-central, 2016 standard design to 'Standard'
   ; SAC 2/16/18 - revised logic to enable different standard design SystemType for non-central, all-electric DHW systems (tic #983)
	"Assign Standard SystemType to New DHWSys1"	
      Zone:DHWSys1:SystemType = {
         if ( (Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. DHWSys1Status == 3) .OR. (Proj:SimulateStdDHW > 0.5 .AND. IfValidAnd( DHWSys1:StdEqProp < 0.5 )))
         then	if (DHWSys1:CentralDHW == 0 .AND. DHWSys1:HeatersAllElec == 1)
               then  T24RClimateZoneCodeBase:ElecDHWDwellUnitDist( "ClimateZone", Proj:CliZnNum, "CodeBase", Proj:StdDesignBase, "BldgType", Proj:BldgTypeTblStr )
               else  T24RClimateZoneCodeBase:DHWDwellUnitDist(     "ClimateZone", Proj:CliZnNum, "CodeBase", Proj:StdDesignBase, "BldgType", Proj:BldgTypeTblStr )
               endif
         else	UNCHANGED  endif	}

                                                   ; SAC 8/22/16 - updated old 0.60 EnergyFactor w/ 0.82 (tic #740)
	"Assign EnergyFactor requirements to New DHWSys1 DHWHeater[1]"	
			Zone:DHWSys1:DHWHeater[1]:EnergyFactor = {	if (Proj:IsComRuleset) then  UNCHANGED
																		else	if ( ResProj:RunScope == 2 .AND. DHWSys1Status == 3 )
																				then	if (ResProj:DRtgRefRunID == 2014)			; "RESNET2014"
																						then	switch ( DHWSys1:DHWHeater[1]:HeaterElementType )
																									case  0 :	0.9172   ; "electric"                                      
																									case  1 :	0.60	   ; "gas"                                       
																									case  2 :	0.60	   ; "propane"                                     
																									case  3 :	0.9172   ; "heat pump"                                     
																									case  4 :	0.60		; "oil"                                     
																									default :	0.60
																								endswitch
																						else	switch ( DHWSys1:DHWHeater[1]:HeaterElementType )
																									case  0 :	0.945    ; "electric"                                      
																									case  1 :	0.82	   ; "gas"                                       
																									case  2 :	0.82	   ; "propane"                                     
																									case  3 :	0.945	   ; "heat pump"                                     
																									case  4 :	0.82		; "oil"                                     
																									default :	0.82
																								endswitch
																						endif
																				else UNCHANGED endif
																		endif }

                                                   ; SAC 8/22/16 - updated old 0.60 EnergyFactor w/ 0.82 (tic #740)
	"Assign EnergyFactor requirements to New DHWSys1 DHWHeater[2]"	
			Zone:DHWSys1:DHWHeater[2]:EnergyFactor = {	if (Proj:IsComRuleset) then  UNCHANGED
																		else	if ( ResProj:RunScope == 2 .AND. DHWSys1Status == 3 )
																				then	if (ResProj:DRtgRefRunID == 2014)			; "RESNET2014"
																						then	switch ( DHWSys1:DHWHeater[2]:HeaterElementType )
																									case  0 :	0.9172   ; "electric"                                      
																									case  1 :	0.60	   ; "gas"                                       
																									case  2 :	0.60	   ; "propane"                                     
																									case  3 :	0.9172   ; "heat pump"                                     
																									case  4 :	0.60		; "oil"                                     
																									default :	0.60
																								endswitch
																						else	switch ( DHWSys1:DHWHeater[2]:HeaterElementType )
																									case  0 :	0.945    ; "electric"                                      
																									case  1 :	0.82	   ; "gas"                                       
																									case  2 :	0.82	   ; "propane"                                     
																									case  3 :	0.945	   ; "heat pump"                                     
																									case  4 :	0.82		; "oil"                                     
																									default :	0.82
																								endswitch
																						endif
																				else UNCHANGED endif
																		endif }

                                                   ; SAC 8/22/16 - updated old 0.60 EnergyFactor w/ 0.82 (tic #740)
	"Assign EnergyFactor requirements to New DHWSys1 DHWHeater[3]"	
			Zone:DHWSys1:DHWHeater[3]:EnergyFactor = {	if (Proj:IsComRuleset) then  UNCHANGED
																		else	if ( ResProj:RunScope == 2 .AND. DHWSys1Status == 3 )
																				then	if (ResProj:DRtgRefRunID == 2014)			; "RESNET2014"
																						then	switch ( DHWSys1:DHWHeater[3]:HeaterElementType )
																									case  0 :	0.9172   ; "electric"                                      
																									case  1 :	0.60	   ; "gas"                                       
																									case  2 :	0.60	   ; "propane"                                     
																									case  3 :	0.9172   ; "heat pump"                                     
																									case  4 :	0.60		; "oil"                                     
																									default :	0.60
																								endswitch
																						else	switch ( DHWSys1:DHWHeater[3]:HeaterElementType )
																									case  0 :	0.945    ; "electric"                                      
																									case  1 :	0.82	   ; "gas"                                       
																									case  2 :	0.82	   ; "propane"                                     
																									case  3 :	0.945	   ; "heat pump"                                     
																									case  4 :	0.82		; "oil"                                     
																									default :	0.82
																								endswitch
																						endif
																				else UNCHANGED endif
																		endif }

                                                   ; SAC 8/22/16 - updated old 0.60 EnergyFactor w/ 0.82 (tic #740)
	"Assign EnergyFactor requirements to New DHWSys1 DHWHeater[4]"	
			Zone:DHWSys1:DHWHeater[4]:EnergyFactor = {	if (Proj:IsComRuleset) then  UNCHANGED
																		else	if ( ResProj:RunScope == 2 .AND. DHWSys1Status == 3 )
																				then	if (ResProj:DRtgRefRunID == 2014)			; "RESNET2014"
																						then	switch ( DHWSys1:DHWHeater[4]:HeaterElementType )
																									case  0 :	0.9172   ; "electric"                                      
																									case  1 :	0.60	   ; "gas"                                       
																									case  2 :	0.60	   ; "propane"                                     
																									case  3 :	0.9172   ; "heat pump"                                     
																									case  4 :	0.60		; "oil"                                     
																									default :	0.60
																								endswitch
																						else	switch ( DHWSys1:DHWHeater[4]:HeaterElementType )
																									case  0 :	0.945    ; "electric"                                      
																									case  1 :	0.82	   ; "gas"                                       
																									case  2 :	0.82	   ; "propane"                                     
																									case  3 :	0.945	   ; "heat pump"                                     
																									case  4 :	0.82		; "oil"                                     
																									default :	0.82
																								endswitch
																						endif
																				else UNCHANGED endif
																		endif }

                                                   ; SAC 8/22/16 - updated old 0.60 EnergyFactor w/ 0.82 (tic #740)
	"Assign EnergyFactor requirements to New DHWSys1 DHWHeater[5]"	
			Zone:DHWSys1:DHWHeater[5]:EnergyFactor = {	if (Proj:IsComRuleset) then  UNCHANGED
																		else	if ( ResProj:RunScope == 2 .AND. DHWSys1Status == 3 )
																				then	if (ResProj:DRtgRefRunID == 2014)			; "RESNET2014"
																						then	switch ( DHWSys1:DHWHeater[5]:HeaterElementType )
																									case  0 :	0.9172   ; "electric"                                      
																									case  1 :	0.60	   ; "gas"                                       
																									case  2 :	0.60	   ; "propane"                                     
																									case  3 :	0.9172   ; "heat pump"                                     
																									case  4 :	0.60		; "oil"                                     
																									default :	0.60
																								endswitch
																						else	switch ( DHWSys1:DHWHeater[5]:HeaterElementType )
																									case  0 :	0.945    ; "electric"                                      
																									case  1 :	0.82	   ; "gas"                                       
																									case  2 :	0.82	   ; "propane"                                     
																									case  3 :	0.945	   ; "heat pump"                                     
																									case  4 :	0.82		; "oil"                                     
																									default :	0.82
																								endswitch
																						endif
																				else UNCHANGED endif
																		endif }

                                                   ; SAC 8/22/16 - updated old 0.60 EnergyFactor w/ 0.82 (tic #740)
	"Assign EnergyFactor requirements to New DHWSys1 DHWHeater[6]"	
			Zone:DHWSys1:DHWHeater[6]:EnergyFactor = {	if (Proj:IsComRuleset) then  UNCHANGED
																		else	if ( ResProj:RunScope == 2 .AND. DHWSys1Status == 3 )
																				then	if (ResProj:DRtgRefRunID == 2014)			; "RESNET2014"
																						then	switch ( DHWSys1:DHWHeater[6]:HeaterElementType )
																									case  0 :	0.9172   ; "electric"                                      
																									case  1 :	0.60	   ; "gas"                                       
																									case  2 :	0.60	   ; "propane"                                     
																									case  3 :	0.9172   ; "heat pump"                                     
																									case  4 :	0.60		; "oil"                                     
																									default :	0.60
																								endswitch
																						else	switch ( DHWSys1:DHWHeater[6]:HeaterElementType )
																									case  0 :	0.945    ; "electric"                                      
																									case  1 :	0.82	   ; "gas"                                       
																									case  2 :	0.82	   ; "propane"                                     
																									case  3 :	0.945	   ; "heat pump"                                     
																									case  4 :	0.82		; "oil"                                     
																									default :	0.82
																								endswitch
																						endif
																				else UNCHANGED endif
																		endif }


; New OtherZone:ozDHWSys budget conversion	
   ; SAC 9/19/19 - OtherZone (MFamProto)
   "Set OtherZone:ozDHWSys:IsStdDesignElec - whether this system is setup as an electric standard design"  ; SAC 2/16/18 - tic #983
      OtherZone:ozDHWSys:IsStdDesignElec = {
         if (Proj:SimulateStdDHW > 0.5 .AND. IfValidAnd( ozDHWSys:StdEqProp < 0.5 ))
         then  if (ozDHWSys:FloorAreaServed[1] > 0.1 .AND. (ozDHWSys:CentralDHW == 0 .OR. ozDHWSys:MFamDistType == 0) .AND. ozDHWSys:HeatersAllElec == 1)
               then  1
               else  UNCHANGED  endif
         else  UNCHANGED  endif  }
	"Assign Standard SystemType to New ozDHWSys"	
      OtherZone:ozDHWSys:SystemType = {
         if ( Proj:SimulateStdDHW > 0.5 .AND. IfValidAnd( ozDHWSys:StdEqProp < 0.5 ) )
         then	if (ozDHWSys:CentralDHW == 0 .AND. ozDHWSys:HeatersAllElec == 1)
               then  T24RClimateZoneCodeBase:ElecDHWDwellUnitDist( "ClimateZone", Proj:CliZnNum, "CodeBase", Proj:StdDesignBase, "BldgType", Proj:BldgTypeTblStr )
               else  T24RClimateZoneCodeBase:DHWDwellUnitDist(     "ClimateZone", Proj:CliZnNum, "CodeBase", Proj:StdDesignBase, "BldgType", Proj:BldgTypeTblStr )
               endif
         else	UNCHANGED  endif	}


; New DHWSys2 budget conversion	
   ; SAC 3/8/18 - revised logic to set flag for all-elec central systems w/ no recirc (tic #983)
   "Set Zone:DHWSys2:IsStdDesignElec - whether this system is setup as an electric standard design"  ; SAC 2/16/18 - tic #983
      Zone:DHWSys2:IsStdDesignElec = {
         if ((Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. DHWSys2Status == 3) .OR. (Proj:SimulateStdDHW > 0.5 .AND. IfValidAnd( DHWSys2:StdEqProp < 0.5 )) )
         then  if (DHWSys2:FloorAreaServed[1] > 0.1 .AND. (DHWSys2:CentralDHW == 0 .OR. DHWSys2:MFamDistType == 0) .AND. DHWSys2:HeatersAllElec == 1)
               then  1
               else  UNCHANGED  endif
         else  UNCHANGED  endif  }
   ; SAC 2/16/18 - revised logic to enable different standard design SystemType for non-central, all-electric DHW systems (tic #983)
	"Assign Standard SystemType to New DHWSys2"	
      Zone:DHWSys2:SystemType = {
         if ( (Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. DHWSys2Status == 3) .OR. (Proj:SimulateStdDHW > 0.5 .AND. IfValidAnd( DHWSys2:StdEqProp < 0.5 )) )
         then	if (DHWSys1:CentralDHW == 0 .AND. DHWSys1:HeatersAllElec == 1)
               then  T24RClimateZoneCodeBase:ElecDHWDwellUnitDist( "ClimateZone", Proj:CliZnNum, "CodeBase", Proj:StdDesignBase, "BldgType", Proj:BldgTypeTblStr )
               else  T24RClimateZoneCodeBase:DHWDwellUnitDist(     "ClimateZone", Proj:CliZnNum, "CodeBase", Proj:StdDesignBase, "BldgType", Proj:BldgTypeTblStr )
               endif
         else	UNCHANGED  endif	}

	"Assign EnergyFactor requirements to New DHWSys2 DHWHeater[1]"	
			Zone:DHWSys2:DHWHeater[1]:EnergyFactor = {	if (Proj:IsComRuleset) then  UNCHANGED
																		else	if ( ResProj:RunScope == 2 .AND. DHWSys2Status == 3 )
																				then  if (ResProj:DRtgRefRunID == 2014)			; "RESNET2014"
																						then	switch ( DHWSys2:DHWHeater[1]:HeaterElementType )
																									case  0 :	0.9172   ; "electric"                                      
																									case  1 :	0.60	   ; "gas"                                       
																									case  2 :	0.60	   ; "propane"                                     
																									case  3 :	0.9172   ; "heat pump"                                     
																									case  4 :	0.60		; "oil"                                     
																									default :	0.60
																								endswitch
                                                   ; SAC 8/22/16 - updated old 0.60 EnergyFactor w/ 0.82 (tic #740)
																						else	switch ( DHWSys2:DHWHeater[1]:HeaterElementType )
																									case  0 :	0.945    ; "electric"                                      
																									case  1 :	0.82	   ; "gas"                                       
																									case  2 :	0.82	   ; "propane"                                     
																									case  3 :	0.945	   ; "heat pump"                                     
																									case  4 :	0.82		; "oil"                                     
																									default :	0.82
																								endswitch
																						endif
																				else UNCHANGED endif
																		endif }

	"Assign EnergyFactor requirements to New DHWSys2 DHWHeater[2]"	
			Zone:DHWSys2:DHWHeater[2]:EnergyFactor = {	if (Proj:IsComRuleset) then  UNCHANGED
																		else	if ( ResProj:RunScope == 2 .AND. DHWSys2Status == 3 )
																				then	if (ResProj:DRtgRefRunID == 2014)			; "RESNET2014"
																						then	switch ( DHWSys2:DHWHeater[2]:HeaterElementType )
																									case  0 :	0.9172   ; "electric"                                      
																									case  1 :	0.60	   ; "gas"                                       
																									case  2 :	0.60	   ; "propane"                                     
																									case  3 :	0.9172   ; "heat pump"                                     
																									case  4 :	0.60		; "oil"                                     
																									default :	0.60
																								endswitch
                                                   ; SAC 8/22/16 - updated old 0.60 EnergyFactor w/ 0.82 (tic #740)
																						else	switch ( DHWSys2:DHWHeater[2]:HeaterElementType )
																									case  0 :	0.945    ; "electric"                                      
																									case  1 :	0.82	   ; "gas"                                       
																									case  2 :	0.82	   ; "propane"                                     
																									case  3 :	0.945	   ; "heat pump"                                     
																									case  4 :	0.82		; "oil"                                     
																									default :	0.82
																								endswitch
																						endif
																				else UNCHANGED endif
																		endif }

	"Assign EnergyFactor requirements to New DHWSys2 DHWHeater[3]"	
			Zone:DHWSys2:DHWHeater[3]:EnergyFactor = {	if (Proj:IsComRuleset) then  UNCHANGED
																		else 	if ( ResProj:RunScope == 2 .AND. DHWSys2Status == 3 )
																				then	if (ResProj:DRtgRefRunID == 2014)			; "RESNET2014"
																						then	switch ( DHWSys2:DHWHeater[3]:HeaterElementType )
																									case  0 :	0.9172   ; "electric"                                      
																									case  1 :	0.60	   ; "gas"                                       
																									case  2 :	0.60	   ; "propane"                                     
																									case  3 :	0.9172   ; "heat pump"                                     
																									case  4 :	0.60		; "oil"                                     
																									default :	0.60
																								endswitch
                                                   ; SAC 8/22/16 - updated old 0.60 EnergyFactor w/ 0.82 (tic #740)
																						else	switch ( DHWSys2:DHWHeater[3]:HeaterElementType )
																									case  0 :	0.945    ; "electric"                                      
																									case  1 :	0.82	   ; "gas"                                       
																									case  2 :	0.82	   ; "propane"                                     
																									case  3 :	0.945	   ; "heat pump"                                     
																									case  4 :	0.82		; "oil"                                     
																									default :	0.82
																								endswitch
																						endif
																				else UNCHANGED endif
																		endif }

	"Assign EnergyFactor requirements to New DHWSys2 DHWHeater[4]"	
			Zone:DHWSys2:DHWHeater[4]:EnergyFactor = {	if (Proj:IsComRuleset) then  UNCHANGED
																		else	if ( ResProj:RunScope == 2 .AND. DHWSys2Status == 3 )
																				then	if (ResProj:DRtgRefRunID == 2014)			; "RESNET2014"
																						then	switch ( DHWSys2:DHWHeater[4]:HeaterElementType )
																									case  0 :	0.9172   ; "electric"                                      
																									case  1 :	0.60	   ; "gas"                                       
																									case  2 :	0.60	   ; "propane"                                     
																									case  3 :	0.9172   ; "heat pump"                                     
																									case  4 :	0.60		; "oil"                                     
																									default :	0.60
																								endswitch
                                                   ; SAC 8/22/16 - updated old 0.60 EnergyFactor w/ 0.82 (tic #740)
																						else	switch ( DHWSys2:DHWHeater[4]:HeaterElementType )
																									case  0 :	0.945    ; "electric"                                      
																									case  1 :	0.82	   ; "gas"                                       
																									case  2 :	0.82	   ; "propane"                                     
																									case  3 :	0.945	   ; "heat pump"                                     
																									case  4 :	0.82		; "oil"                                     
																									default :	0.82
																								endswitch
																						endif
																				else UNCHANGED endif
																		endif }

	"Assign EnergyFactor requirements to New DHWSys2 DHWHeater[5]"	
			Zone:DHWSys2:DHWHeater[5]:EnergyFactor = {	if (Proj:IsComRuleset) then  UNCHANGED
																		else	if ( ResProj:RunScope == 2 .AND. DHWSys2Status == 3 )
																				then	if (ResProj:DRtgRefRunID == 2014)			; "RESNET2014"
																						then	switch ( DHWSys2:DHWHeater[5]:HeaterElementType )
																									case  0 :	0.9172   ; "electric"                                      
																									case  1 :	0.60	   ; "gas"                                       
																									case  2 :	0.60	   ; "propane"                                     
																									case  3 :	0.9172   ; "heat pump"                                     
																									case  4 :	0.60		; "oil"                                     
																									default :	0.60
																								endswitch
                                                   ; SAC 8/22/16 - updated old 0.60 EnergyFactor w/ 0.82 (tic #740)
																						else	switch ( DHWSys2:DHWHeater[5]:HeaterElementType )
																									case  0 :	0.945    ; "electric"                                      
																									case  1 :	0.82	   ; "gas"                                       
																									case  2 :	0.82	   ; "propane"                                     
																									case  3 :	0.945	   ; "heat pump"                                     
																									case  4 :	0.82		; "oil"                                     
																									default :	0.82
																								endswitch
																						endif
																				else UNCHANGED endif
																		endif }

	"Assign EnergyFactor requirements to New DHWSys2 DHWHeater[6]"	
			Zone:DHWSys2:DHWHeater[6]:EnergyFactor = {	if (Proj:IsComRuleset) then  UNCHANGED
																		else	if ( ResProj:RunScope == 2 .AND. DHWSys2Status == 3 )
																				then	if (ResProj:DRtgRefRunID == 2014)			; "RESNET2014"
																						then	switch ( DHWSys2:DHWHeater[6]:HeaterElementType )
																									case  0 :	0.9172   ; "electric"                                      
																									case  1 :	0.60	   ; "gas"                                       
																									case  2 :	0.60	   ; "propane"                                     
																									case  3 :	0.9172   ; "heat pump"                                     
																									case  4 :	0.60		; "oil"                                     
																									default :	0.60
																								endswitch
                                                   ; SAC 8/22/16 - updated old 0.60 EnergyFactor w/ 0.82 (tic #740)
																						else	switch ( DHWSys2:DHWHeater[6]:HeaterElementType )
																									case  0 :	0.945    ; "electric"                                      
																									case  1 :	0.82	   ; "gas"                                       
																									case  2 :	0.82	   ; "propane"                                     
																									case  3 :	0.945	   ; "heat pump"                                     
																									case  4 :	0.82		; "oil"                                     
																									default :	0.82
																								endswitch
																						endif
																				else UNCHANGED endif
																		endif }


;	; SAC 9/2/15 - Added Proj:SimulateStdDHW > 0.5 condition in following rules
;	"Assign Standard SolFracType to New DHWSys1"	
;			Zone:DHWSys1:SolFracType = {	if ( (Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. DHWSys1Status == 3) .OR. Proj:SimulateStdDHW > 0.5 )
;													then	if (Proj:IsSFamResRuleset .OR. DHWSys1:CentralDHW < 0.5 .OR. IfValidAnd( Proj:CliZnNum > 0 )==0)
;															then  0  else  1  endif
;													else UNCHANGED endif	}
;	; SAC 9/2/15 - Added default central solar fractions
;	"Assign Standard SolFracAnn to New DHWSys1"	
;			Zone:DHWSys1:SolFracAnn = {	if ( (Proj:IsSFamResRuleset .AND. ResProj:RunScope == 2 .AND. DHWSys1Status == 3) .OR. Proj:SimulateStdDHW > 0.5 )
;													then	if (Proj:IsSFamResRuleset .OR. DHWSys1:CentralDHW < 0.5 .OR. IfValidAnd( Proj:CliZnNum > 0 )==0) then  0
;															else if (Proj:CliZnNum < 10) then  0.2  else  0.35  endif endif
;													else UNCHANGED endif	}
; SAC 11/10/15 - moved rules down here for Zone:DHWSys1 & Zone:DHWSys2 solar fraction setup and revised to operate directly on ALL NEW DHWSys objects, since Zone assignment not valid for MFam models
	; SAC 9/2/15 - Added Proj:SimulateStdDHW > 0.5 condition in following rules
	"Assign Standard SolFracType to New DHWSys"	 DHWSys:SolFracType = {	
    if( ( Proj:IsSFamResRuleset .AND. IfValidAnd( ResProj:RunScope != 2 )==0 .AND. Status == 3 ) .OR. 
          (Proj:SimulateStdDHW > 0.5 .AND. IfValidAnd( StdEqProp < 0.5 )) )
    then if( Proj:IsSFamResRuleset .OR. CentralDHW < 0.5 .OR. 
             IfValidAnd( Proj:CliZnNum > 0 )==0 .OR. Status == 2 )
		  then  0  
      else  1  
      endif
    else UNCHANGED endif	}

	; SAC 9/2/15 - Added default central solar fractions
	"Assign Standard SolFracAnn to New DHWSys"	 DHWSys:SolFracAnn = {	
    if ( (Proj:IsSFamResRuleset < 0.5 .AND. IfValidAnd( ResProj:RunScope != 2 )==0 .AND. Status == 3) .OR. 
          (Proj:SimulateStdDHW > 0.5 .AND. IfValidAnd( StdEqProp < 0.5 )) )
		then	if ( Proj:IsSFamResRuleset .OR. CentralDHW < 0.5 .OR. 
               IfValidAnd( Proj:CliZnNum > 0 ) == 0 .OR. Status == 2 )  
      then  0
		  else if (Proj:CliZnNum < 10) 
      then  0.2  
      else  0.35  endif endif
		else UNCHANGED endif	}

   "Toggle off HaveShwrDrnHtRecov for Std & DRtg ref runs"     ; SAC 2/19/18 (tic #978)
      Proj:HaveShwrDrnHtRecov  = {  if (SimulateStdDHW < 0.5 .OR. SumAll( ResDHWSys:StdEqProp ) > 0.5 ) then  UNCHANGED
                                    else  0  endif  }

   ; SAC 10/18/17 - force default of ResProj:ShwrDRAINHREFF if SimulateStdDHW
   ; SAC 2/16/18 - moved down below all Elec std design DHW rules (tic #978)
   "Force default of ResProj:ShwrDRAINHREFF if SimulateStdDHW"    Proj:Action  =          ; StdDesignDrnWtrHtRecYear - SAC 01/22/21
      {  if (Proj:SimulateStdDHW < 0.5 .OR. SumAll( ResDHWSys:StdEqProp ) > 0.5) then  UNCHANGED
         else if (IsSFamResRuleset)
         then  if (T24RClimateZoneCodeBase:ElecDHWDrnWtrHtRecovEff( "ClimateZone", Proj:CliZnNum, "CodeBase", Proj:StdDesignDrnWtrHtRecYear, "BldgType", Proj:BldgTypeTblStr ) < 0.01)
               then  EvalRulelist( "Remove_ShowerDrainHeatRecov_SFam" )
               else  EvalRulelist( "ForceDefault_ShowerDrainHeatRecov_SFam" )
               endif
         else  EvalRulelist( "ForceDefault_ShowerDrainHeatRecov_MFam" )
         endif endif  }

   "Force default of Hotel/Motel drain water heat recovery"    Proj:Action  =          ; SAC 03/11/22
      {  if (Proj:SimulateStdDHW < 0.5 .OR. SumAll( ResDHWSys:StdEqProp ) > 0.5) then  UNCHANGED
         else if (IsComRuleset)
         then  EvalRulelist( "ForceDefault_ShowerDrainHeatRecov_NRes" )
         else  UNCHANGED
         endif endif  }

   ; SAC 1/12/19 - Setup std design Compact Distribution
   ; SAC 1/14/19 - fixes to std design logic for non-elec and other cases broken in prior version
   ; SAC 3/25/19 - revisions in std design compact distrib for new ResProj-level feature
   "Setup std design Compact Distribution inputs for SFam models"     Proj:Action  = {
         if (SimulateStdDHW < 0.5 .OR.
             IfValidAnd( EngyCodeYearNum >= 2019 )==0 .OR. IsComRuleset) then  UNCHANGED
         else  EvalRulelist( "ForceDefault_CompactDistribution_SFam" )
         endif  }
   "Setup std design Compact Distribution inputs for MFam models"    Proj:Action  = {
         if (SimulateStdDHW < 0.5 .OR. SumAll( ResDHWSys:StdEqProp ) > 0.5 .OR.
             IfValidAnd( EngyCodeYearNum >= 2019 )==0 .OR. IsSFamResRuleset) then  UNCHANGED
         else  EvalRulelist( "ForceDefault_CompactDistribution_MFam" )
         endif  }


; SAC 12/23/13 - should not delete DHWSys objects just because an assignment is not used, because that system MAY be a valid assignment to another Zone - caused NO std design results for a run from Martyn														
;; now blast DHWSys objects that do not match E+A+A specifications
;	"Delete DHWSys1 if Altered or Existing"			Zone:DHWSys1	= {	if (ResProj:RunScope == 2 .AND. DHWSys1Status != 3 .AND. LocalCompAssigned( DHWSys1 )) then  DeleteComp()  else  UNCHANGED  endif  }
;	"Delete DHWSys2 if Altered or Existing"			Zone:DHWSys2	= {	if (ResProj:RunScope == 2 .AND. DHWSys2Status != 3 .AND. LocalCompAssigned( DHWSys2 )) then  DeleteComp()  else  UNCHANGED  endif  }
;
;	"Delete AltDHWSys1 if New or Existing"				Zone:AltDHWSys1	= {	if (ResProj:RunScope == 2 .AND. DHWSys1Status != 2 .AND. LocalCompAssigned( AltDHWSys1 )) then  DeleteComp()  else  UNCHANGED  endif  }
;	"Delete AltDHWSys2 if New or Existing"				Zone:AltDHWSys2	= {	if (ResProj:RunScope == 2 .AND. DHWSys2Status != 2 .AND. LocalCompAssigned( AltDHWSys2 )) then  DeleteComp()  else  UNCHANGED  endif  }
;
;	"Delete exDHWSys1 if New or Altered"				Zone:exDHWSys1	= {	if (ResProj:RunScope == 2 .AND. DHWSys1Status != 1 .AND. LocalCompAssigned( exDHWSys1 )) then  DeleteComp()  else  UNCHANGED  endif  }
;	"Delete exDHWSys2 if New or Altered"				Zone:exDHWSys2	= {	if (ResProj:RunScope == 2 .AND. DHWSys2Status != 1 .AND. LocalCompAssigned( exDHWSys2 )) then  DeleteComp()  else  UNCHANGED  endif  }


;   ;--------------------------------------------------------------------
;   ; BudgetConversion: HVACSys-based DHW heaters
;   ;--------------------------------------------------------------------
;	; SAC 5/7/14 - deal w/ issue where HP HVACSys used as water heater will no longer have a valid HPSysCOP47, which will cause error in std model DHW simulation, so plug in another value
;	"Set HVACSys:DHWEnergyFactor"		HVACSys:DHWEnergyFactor		= {	if (DHWFloorAreaServed < 0.1 .OR. IfValidAnd( DHWEnergyFactor > 0.5 )) then  UNCHANGED
;																							else  3  endif  }


END
;*************************************************************************

; SAC 10/5/15 - rulelist to prevent multiple heaters in a system and multipliers > 1 for any standard design system
;*************************************************************************
RULELIST  "BudgetConversion_DHWSys_SingleHeater" 1 0 1 0
   ; SAC 2/16/18 - revised to switch assignment to Proj:StdElecDHWHeater for applicable systems (tic #983)
	"Reset DHWSys:DHWHeater[1] if not first assigned heater"		DHWSys:DHWHeater[1]	= {
         if (FirstDHWHtrIndex != 1) then  UNDEFINED
         else if (HeatersAllElec > 0 .AND. IfValidAnd( Proj:StdElecDHWHeater:HeaterElementType > 0 ))
         then  Proj:StdElecDHWHeater
         else  UNCHANGED  endif endif  }
	"Reset DHWSys:DHWHeater[2] if not first assigned heater"		DHWSys:DHWHeater[2]	= {
         if (FirstDHWHtrIndex != 2) then  UNDEFINED
         else if (HeatersAllElec > 0 .AND. IfValidAnd( Proj:StdElecDHWHeater:HeaterElementType > 0 ))
         then  Proj:StdElecDHWHeater
         else  UNCHANGED  endif endif  }
	"Reset DHWSys:DHWHeater[3] if not first assigned heater"		DHWSys:DHWHeater[3]	= {
         if (FirstDHWHtrIndex != 3) then  UNDEFINED
         else if (HeatersAllElec > 0 .AND. IfValidAnd( Proj:StdElecDHWHeater:HeaterElementType > 0 ))
         then  Proj:StdElecDHWHeater
         else  UNCHANGED  endif endif  }
	"Reset DHWSys:DHWHeater[4] if not first assigned heater"		DHWSys:DHWHeater[4]	= {
         if (FirstDHWHtrIndex != 4) then  UNDEFINED
         else if (HeatersAllElec > 0 .AND. IfValidAnd( Proj:StdElecDHWHeater:HeaterElementType > 0 ))
         then  Proj:StdElecDHWHeater
         else  UNCHANGED  endif endif  }
	"Reset DHWSys:DHWHeater[5] if not first assigned heater"		DHWSys:DHWHeater[5]	= {
         if (FirstDHWHtrIndex != 5) then  UNDEFINED
         else if (HeatersAllElec > 0 .AND. IfValidAnd( Proj:StdElecDHWHeater:HeaterElementType > 0 ))
         then  Proj:StdElecDHWHeater
         else  UNCHANGED  endif endif  }
	"Reset DHWSys:DHWHeater[6] if not first assigned heater"		DHWSys:DHWHeater[6]	= {
         if (FirstDHWHtrIndex != 6) then  UNDEFINED
         else if (HeatersAllElec > 0 .AND. IfValidAnd( Proj:StdElecDHWHeater:HeaterElementType > 0 ))
         then  Proj:StdElecDHWHeater
         else  UNCHANGED  endif endif  }

	"Reset DHWSys:HeaterMult[1] if not first assigned heater"	DHWSys:HeaterMult[1]	= {	if (FirstDHWHtrIndex == 1) then  1  else  UNDEFINED  endif  }
	"Reset DHWSys:HeaterMult[2] if not first assigned heater"	DHWSys:HeaterMult[2]	= {	if (FirstDHWHtrIndex == 2) then  1  else  UNDEFINED  endif  }
	"Reset DHWSys:HeaterMult[3] if not first assigned heater"	DHWSys:HeaterMult[3]	= {	if (FirstDHWHtrIndex == 3) then  1  else  UNDEFINED  endif  }
	"Reset DHWSys:HeaterMult[4] if not first assigned heater"	DHWSys:HeaterMult[4]	= {	if (FirstDHWHtrIndex == 4) then  1  else  UNDEFINED  endif  }
	"Reset DHWSys:HeaterMult[5] if not first assigned heater"	DHWSys:HeaterMult[5]	= {	if (FirstDHWHtrIndex == 5) then  1  else  UNDEFINED  endif  }
	"Reset DHWSys:HeaterMult[6] if not first assigned heater"	DHWSys:HeaterMult[6]	= {	if (FirstDHWHtrIndex == 6) then  1  else  UNDEFINED  endif  }

	"Reset DHWSys:HeaterMultFlt[1] if not first assigned heater"	DHWSys:HeaterMultFlt[1]	= {	if (FirstDHWHtrIndex == 1) then  1  else  UNDEFINED  endif  }  ; SAC 1/2/19 - reset BOTH Int & Flt htr multipliers
	"Reset DHWSys:HeaterMultFlt[2] if not first assigned heater"	DHWSys:HeaterMultFlt[2]	= {	if (FirstDHWHtrIndex == 2) then  1  else  UNDEFINED  endif  }
	"Reset DHWSys:HeaterMultFlt[3] if not first assigned heater"	DHWSys:HeaterMultFlt[3]	= {	if (FirstDHWHtrIndex == 3) then  1  else  UNDEFINED  endif  }
	"Reset DHWSys:HeaterMultFlt[4] if not first assigned heater"	DHWSys:HeaterMultFlt[4]	= {	if (FirstDHWHtrIndex == 4) then  1  else  UNDEFINED  endif  }
	"Reset DHWSys:HeaterMultFlt[5] if not first assigned heater"	DHWSys:HeaterMultFlt[5]	= {	if (FirstDHWHtrIndex == 5) then  1  else  UNDEFINED  endif  }
	"Reset DHWSys:HeaterMultFlt[6] if not first assigned heater"	DHWSys:HeaterMultFlt[6]	= {	if (FirstDHWHtrIndex == 6) then  1  else  UNDEFINED  endif  }

   "Set DHWSys:CntrlHtrMultFlt[1]"     DHWSys:CntrlHtrMultFlt[1]  =           ; SAC 6/14/20 (tic #185)
      {  if (Proj:IsComRuleset .AND. IfValidAnd( CentralDHW > 0 ) .AND. 
             IfValidAnd( HeaterMultFlt[1] > 0 ) .AND. IfValidAnd( FloorAreaServed[1] > 0 ))
         then  HeaterMultFlt[1]  else  UNDEFINED  endif  }
   "Set DHWSys:CntrlHtrMultFlt[2]"     DHWSys:CntrlHtrMultFlt[2]  =  
      {  if (Proj:IsComRuleset .AND. IfValidAnd( CentralDHW > 0 ) .AND. 
             IfValidAnd( HeaterMultFlt[2] > 0 ) .AND. IfValidAnd( FloorAreaServed[1] > 0 ))
         then  HeaterMultFlt[2]  else  UNDEFINED  endif  }
   "Set DHWSys:CntrlHtrMultFlt[3]"     DHWSys:CntrlHtrMultFlt[3]  =  
      {  if (Proj:IsComRuleset .AND. IfValidAnd( CentralDHW > 0 ) .AND. 
             IfValidAnd( HeaterMultFlt[3] > 0 ) .AND. IfValidAnd( FloorAreaServed[1] > 0 ))
         then  HeaterMultFlt[3]  else  UNDEFINED  endif  }
   "Set DHWSys:CntrlHtrMultFlt[4]"     DHWSys:CntrlHtrMultFlt[4]  =  
      {  if (Proj:IsComRuleset .AND. IfValidAnd( CentralDHW > 0 ) .AND. 
             IfValidAnd( HeaterMultFlt[4] > 0 ) .AND. IfValidAnd( FloorAreaServed[1] > 0 ))
         then  HeaterMultFlt[4]  else  UNDEFINED  endif  }
   "Set DHWSys:CntrlHtrMultFlt[5]"     DHWSys:CntrlHtrMultFlt[5]  =  
      {  if (Proj:IsComRuleset .AND. IfValidAnd( CentralDHW > 0 ) .AND. 
             IfValidAnd( HeaterMultFlt[5] > 0 ) .AND. IfValidAnd( FloorAreaServed[1] > 0 ))
         then  HeaterMultFlt[5]  else  UNDEFINED  endif  }
   "Set DHWSys:CntrlHtrMultFlt[6]"     DHWSys:CntrlHtrMultFlt[6]  =  
      {  if (Proj:IsComRuleset .AND. IfValidAnd( CentralDHW > 0 ) .AND. 
             IfValidAnd( HeaterMultFlt[6] > 0 ) .AND. IfValidAnd( FloorAreaServed[1] > 0 ))
         then  HeaterMultFlt[6]  else  UNDEFINED  endif  }
END
;*************************************************************************

;*************************************************************************
RULELIST  "BudgetConversion_DHWSys_CentralElecHeaters" 1 0 1 0
   ; SAC 3/8/18 - similar rule as above only this time to assign StdElecDHWHeater to each heater assignment of central, no recirc, all-elec std design systems (tic #983)
   ; SAC 12/11/18 - updated logic in each rule to verify ELec htr before replacement (since only partial replacement possible)
   ; SAC 12/21/18 - revised rules to replace (possibly) MULTIPLE Elec DHWHeater assignments to one single one - HPWHSIZE
   ; SAC 1/8/19 - replaced references to StdElecDHWHeater w/ StdCntrlElecDHWHtr
   "Update DHWSys:HeaterMult[1] to result in a single StdCntrlElecDHWHtr in system"   DHWSys:HeaterMult[1]  = {
         if (IsStdDesignElec == 1) then  1
         else if (IfValidAnd( HeaterMult[1] > 0 ) .AND. IfValidAnd( DHWHeater[1]:HeaterElementType != 1 )) then  0
         else  UNCHANGED  endif endif  }
   "Update DHWSys:HeaterMult[2] to result in a single StdCntrlElecDHWHtr in system"   DHWSys:HeaterMult[2]  = {
         if (IsStdDesignElec == 2) then  1
         else if (IfValidAnd( HeaterMult[2] > 0 ) .AND. IfValidAnd( DHWHeater[2]:HeaterElementType != 1 )) then  0
         else  UNCHANGED  endif endif  }
   "Update DHWSys:HeaterMult[3] to result in a single StdCntrlElecDHWHtr in system"   DHWSys:HeaterMult[3]  = {
         if (IsStdDesignElec == 3) then  1
         else if (IfValidAnd( HeaterMult[3] > 0 ) .AND. IfValidAnd( DHWHeater[3]:HeaterElementType != 1 )) then  0
         else  UNCHANGED  endif endif  }
   "Update DHWSys:HeaterMult[4] to result in a single StdCntrlElecDHWHtr in system"   DHWSys:HeaterMult[4]  = {
         if (IsStdDesignElec == 4) then  1
         else if (IfValidAnd( HeaterMult[4] > 0 ) .AND. IfValidAnd( DHWHeater[4]:HeaterElementType != 1 )) then  0
         else  UNCHANGED  endif endif  }
   "Update DHWSys:HeaterMult[5] to result in a single StdCntrlElecDHWHtr in system"   DHWSys:HeaterMult[5]  = {
         if (IsStdDesignElec == 5) then  1
         else if (IfValidAnd( HeaterMult[5] > 0 ) .AND. IfValidAnd( DHWHeater[5]:HeaterElementType != 1 )) then  0
         else  UNCHANGED  endif endif  }
   "Update DHWSys:HeaterMult[6] to result in a single StdCntrlElecDHWHtr in system"   DHWSys:HeaterMult[6]  = {
         if (IsStdDesignElec == 6) then  1
         else if (IfValidAnd( HeaterMult[6] > 0 ) .AND. IfValidAnd( DHWHeater[6]:HeaterElementType != 1 )) then  0
         else  UNCHANGED  endif endif  }
   ; SAC 1/2/19 - apply above htr mult adjustment to BOTH Int (above) & Flt (below) mutlipliers
   "Update DHWSys:HeaterMultFlt[1] to result in a single StdCntrlElecDHWHtr in system"   DHWSys:HeaterMultFlt[1]  = {
         if (IsStdDesignElec == 1) then  1
         else if (IfValidAnd( HeaterMultFlt[1] > 0 ) .AND. IfValidAnd( DHWHeater[1]:HeaterElementType != 1 )) then  0
         else  UNCHANGED  endif endif  }
   "Update DHWSys:HeaterMultFlt[2] to result in a single StdCntrlElecDHWHtr in system"   DHWSys:HeaterMultFlt[2]  = {
         if (IsStdDesignElec == 2) then  1
         else if (IfValidAnd( HeaterMultFlt[2] > 0 ) .AND. IfValidAnd( DHWHeater[2]:HeaterElementType != 1 )) then  0
         else  UNCHANGED  endif endif  }
   "Update DHWSys:HeaterMultFlt[3] to result in a single StdCntrlElecDHWHtr in system"   DHWSys:HeaterMultFlt[3]  = {
         if (IsStdDesignElec == 3) then  1
         else if (IfValidAnd( HeaterMultFlt[3] > 0 ) .AND. IfValidAnd( DHWHeater[3]:HeaterElementType != 1 )) then  0
         else  UNCHANGED  endif endif  }
   "Update DHWSys:HeaterMultFlt[4] to result in a single StdCntrlElecDHWHtr in system"   DHWSys:HeaterMultFlt[4]  = {
         if (IsStdDesignElec == 4) then  1
         else if (IfValidAnd( HeaterMultFlt[4] > 0 ) .AND. IfValidAnd( DHWHeater[4]:HeaterElementType != 1 )) then  0
         else  UNCHANGED  endif endif  }
   "Update DHWSys:HeaterMultFlt[5] to result in a single StdCntrlElecDHWHtr in system"   DHWSys:HeaterMultFlt[5]  = {
         if (IsStdDesignElec == 5) then  1
         else if (IfValidAnd( HeaterMultFlt[5] > 0 ) .AND. IfValidAnd( DHWHeater[5]:HeaterElementType != 1 )) then  0
         else  UNCHANGED  endif endif  }
   "Update DHWSys:HeaterMultFlt[6] to result in a single StdCntrlElecDHWHtr in system"   DHWSys:HeaterMultFlt[6]  = {
         if (IsStdDesignElec == 6) then  1
         else if (IfValidAnd( HeaterMultFlt[6] > 0 ) .AND. IfValidAnd( DHWHeater[6]:HeaterElementType != 1 )) then  0
         else  UNCHANGED  endif endif  }

   "Set DHWSys:CntrlHtrMultFlt[1]"     DHWSys:CntrlHtrMultFlt[1]  =           ; SAC 6/14/20 (tic #185)
      {  if (Proj:IsSFamResRuleset .OR. IfValidAnd( CentralDHW > 0 )==0 .OR. IfValidAnd( FloorAreaServed[1] > 0 )==0) then  UNDEFINED
         else if (IfValidAnd( CntrlHtrMultFlt[1] = HeaterMultFlt[1] )) then  UNCHANGED
         else  HeaterMultFlt[1]  endif endif  }
   "Set DHWSys:CntrlHtrMultFlt[2]"     DHWSys:CntrlHtrMultFlt[2]  =  
      {  if (Proj:IsSFamResRuleset .OR. IfValidAnd( CentralDHW > 0 )==0 .OR. IfValidAnd( FloorAreaServed[1] > 0 )==0) then  UNDEFINED
         else if (IfValidAnd( CntrlHtrMultFlt[2] = HeaterMultFlt[2] )) then  UNCHANGED
         else  HeaterMultFlt[2]  endif endif  }
   "Set DHWSys:CntrlHtrMultFlt[3]"     DHWSys:CntrlHtrMultFlt[3]  =  
      {  if (Proj:IsSFamResRuleset .OR. IfValidAnd( CentralDHW > 0 )==0 .OR. IfValidAnd( FloorAreaServed[1] > 0 )==0) then  UNDEFINED
         else if (IfValidAnd( CntrlHtrMultFlt[3] = HeaterMultFlt[3] )) then  UNCHANGED
         else  HeaterMultFlt[3]  endif endif  }
   "Set DHWSys:CntrlHtrMultFlt[4]"     DHWSys:CntrlHtrMultFlt[4]  =  
      {  if (Proj:IsSFamResRuleset .OR. IfValidAnd( CentralDHW > 0 )==0 .OR. IfValidAnd( FloorAreaServed[1] > 0 )==0) then  UNDEFINED
         else if (IfValidAnd( CntrlHtrMultFlt[4] = HeaterMultFlt[4] )) then  UNCHANGED
         else  HeaterMultFlt[4]  endif endif  }
   "Set DHWSys:CntrlHtrMultFlt[5]"     DHWSys:CntrlHtrMultFlt[5]  =  
      {  if (Proj:IsSFamResRuleset .OR. IfValidAnd( CentralDHW > 0 )==0 .OR. IfValidAnd( FloorAreaServed[1] > 0 )==0) then  UNDEFINED
         else if (IfValidAnd( CntrlHtrMultFlt[5] = HeaterMultFlt[5] )) then  UNCHANGED
         else  HeaterMultFlt[5]  endif endif  }
   "Set DHWSys:CntrlHtrMultFlt[6]"     DHWSys:CntrlHtrMultFlt[6]  =  
      {  if (Proj:IsSFamResRuleset .OR. IfValidAnd( CentralDHW > 0 )==0 .OR. IfValidAnd( FloorAreaServed[1] > 0 )==0) then  UNDEFINED
         else if (IfValidAnd( CntrlHtrMultFlt[6] = HeaterMultFlt[6] )) then  UNCHANGED
         else  HeaterMultFlt[6]  endif endif  }

	"Update DHWSys:DHWHeater[1] assignment if present & elec"		DHWSys:DHWHeater[1]	= {
         if (IsStdDesignElec == 1) then  Proj:StdCntrlElecDHWHtr
         else if (IfValidAnd( HeaterMultFlt[1] > 0 ) .AND. IfValidAnd( DHWHeater[1]:HeaterElementType != 1 )) then  UNDEFINED
         else  UNCHANGED  endif endif  }
	"Update DHWSys:DHWHeater[2] assignment if present & elec"		DHWSys:DHWHeater[2]	= {
         if (IsStdDesignElec == 2) then  Proj:StdCntrlElecDHWHtr
         else if (IfValidAnd( HeaterMultFlt[2] > 0 ) .AND. IfValidAnd( DHWHeater[2]:HeaterElementType != 1 )) then  UNDEFINED
         else  UNCHANGED  endif endif  }
	"Update DHWSys:DHWHeater[3] assignment if present & elec"		DHWSys:DHWHeater[3]	= {
         if (IsStdDesignElec == 3) then  Proj:StdCntrlElecDHWHtr
         else if (IfValidAnd( HeaterMultFlt[3] > 0 ) .AND. IfValidAnd( DHWHeater[3]:HeaterElementType != 1 )) then  UNDEFINED
         else  UNCHANGED  endif endif  }
	"Update DHWSys:DHWHeater[4] assignment if present & elec"		DHWSys:DHWHeater[4]	= {
         if (IsStdDesignElec == 4) then  Proj:StdCntrlElecDHWHtr
         else if (IfValidAnd( HeaterMultFlt[4] > 0 ) .AND. IfValidAnd( DHWHeater[4]:HeaterElementType != 1 )) then  UNDEFINED
         else  UNCHANGED  endif endif  }
	"Update DHWSys:DHWHeater[5] assignment if present & elec"		DHWSys:DHWHeater[5]	= {
         if (IsStdDesignElec == 5) then  Proj:StdCntrlElecDHWHtr
         else if (IfValidAnd( HeaterMultFlt[5] > 0 ) .AND. IfValidAnd( DHWHeater[5]:HeaterElementType != 1 )) then  UNDEFINED
         else  UNCHANGED  endif endif  }
	"Update DHWSys:DHWHeater[6] assignment if present & elec"		DHWSys:DHWHeater[6]	= {
         if (IsStdDesignElec == 6) then  Proj:StdCntrlElecDHWHtr
         else if (IfValidAnd( HeaterMultFlt[6] > 0 ) .AND. IfValidAnd( DHWHeater[6]:HeaterElementType != 1 )) then  UNDEFINED
         else  UNCHANGED  endif endif  }
END
;*************************************************************************

;************************************************************************* SAC 09/02/20 (tic #1187)
RULELIST  "BudgetConversion_DHWSys_AssignStdElecDHWHeaters" 1 0 1 0
;"dbg" DHWSys:Action = { MessageBox( "Assigning StdCntrlElecDHWHtr to altered DHWSys '%s':  HeaterMultFlt[1] %g / DHWHeater[1]:HeaterElementType %g",
;                           Name, HeaterMultFlt[1], DHWHeater[1]:HeaterElementType )  }
	"Update DHWSys:DHWHeater[1] assignment if present & HPWH"		DHWSys:DHWHeater[1]	= {
         if (IfValidAnd( HeaterMultFlt[1] > 0 ) .AND. IfValidAnd( DHWHeater[1]:HeaterElementType = 5 )) then  Proj:StdElecDHWHeater
         else  UNCHANGED  endif  }
	"Update DHWSys:DHWHeater[2] assignment if present & HPWH"		DHWSys:DHWHeater[2]	= {
         if (IfValidAnd( HeaterMultFlt[2] > 0 ) .AND. IfValidAnd( DHWHeater[2]:HeaterElementType = 5 )) then  Proj:StdElecDHWHeater
         else  UNCHANGED  endif  }
	"Update DHWSys:DHWHeater[3] assignment if present & HPWH"		DHWSys:DHWHeater[3]	= {
         if (IfValidAnd( HeaterMultFlt[3] > 0 ) .AND. IfValidAnd( DHWHeater[3]:HeaterElementType = 5 )) then  Proj:StdElecDHWHeater
         else  UNCHANGED  endif  }
	"Update DHWSys:DHWHeater[4] assignment if present & HPWH"		DHWSys:DHWHeater[4]	= {
         if (IfValidAnd( HeaterMultFlt[4] > 0 ) .AND. IfValidAnd( DHWHeater[4]:HeaterElementType = 5 )) then  Proj:StdElecDHWHeater
         else  UNCHANGED  endif  }
	"Update DHWSys:DHWHeater[5] assignment if present & HPWH"		DHWSys:DHWHeater[5]	= {
         if (IfValidAnd( HeaterMultFlt[5] > 0 ) .AND. IfValidAnd( DHWHeater[5]:HeaterElementType = 5 )) then  Proj:StdElecDHWHeater
         else  UNCHANGED  endif  }
	"Update DHWSys:DHWHeater[6] assignment if present & HPWH"		DHWSys:DHWHeater[6]	= {
         if (IfValidAnd( HeaterMultFlt[6] > 0 ) .AND. IfValidAnd( DHWHeater[6]:HeaterElementType = 5 )) then  Proj:StdElecDHWHeater
         else  UNCHANGED  endif  }
END
;*************************************************************************

;************************************************************************* ; SAC 12/30/19 (tic #862)
RULELIST  "BudgetConversion_DHWSys_CentralRecircGasBoiler" 1 0 1 0

   "Set DHWSys:CentralDHWType to 'Other'"    DHWSys:CentralDHWType  = {  "Other"  }    ; SAC 1/5/20 (tic #862)

   "Assign Std Com Pckgd Boiler as DHWSys:DHWHeater[1]"  DHWSys:DHWHeater[1]  =
      {  RuleLibrary( DHWHeater, "Std Cntrl Recirc Boiler" )  }
   "Blast DHWSys:DHWHeater[2] assignment"    DHWSys:DHWHeater[2]  = {  UNDEFINED  }
   "Blast DHWSys:DHWHeater[3] assignment"    DHWSys:DHWHeater[3]  = {  UNDEFINED  }
   "Blast DHWSys:DHWHeater[4] assignment"    DHWSys:DHWHeater[4]  = {  UNDEFINED  }
   "Blast DHWSys:DHWHeater[5] assignment"    DHWSys:DHWHeater[5]  = {  UNDEFINED  }
   "Blast DHWSys:DHWHeater[6] assignment"    DHWSys:DHWHeater[6]  = {  UNDEFINED  }

   "Set DHWSys:HeaterMult[1]"    DHWSys:HeaterMult[1]  = {  1  }
   "Blast DHWSys:HeaterMult[2]"  DHWSys:HeaterMult[2]  = {  UNDEFINED  }
   "Blast DHWSys:HeaterMult[3]"  DHWSys:HeaterMult[3]  = {  UNDEFINED  }
   "Blast DHWSys:HeaterMult[4]"  DHWSys:HeaterMult[4]  = {  UNDEFINED  }
   "Blast DHWSys:HeaterMult[5]"  DHWSys:HeaterMult[5]  = {  UNDEFINED  }
   "Blast DHWSys:HeaterMult[6]"  DHWSys:HeaterMult[6]  = {  UNDEFINED  }

   "Remove DHWSys:LoopHeater assignment"  DHWSys:LoopHeater  = {  UNDEFINED  }

	"Set Std Cntrl Recirc Boiler ResWtrHtr:TankVolume"    DHWSys:DHWHeater[1]:TankVolume	=     ; SAC 03/02/22 (MFam)  ; NumAssignedCommonDUEquiv - SAC 10/10/24 (tic #3630)
		{  if (DHWHeater[1]:HeaterElementType == 1 .AND.
             DHWHeater[1]:TankType == 16)
         then  (ValidOr( NumAssignedBRFracs, 1 ) * 3) +
               ((ValidOr( NumAssignedDUFracs, 1 ) + ValidOr( NumAssignedCommonDUEquiv, 0 )) * 10)     ; "Commercial Packaged Boiler" 
			else  UNCHANGED  endif  }
END
;*************************************************************************

;************************************************************************* ; central HPWH in 2022+ code std design - SAC 07/02/21 (tic #1275)
RULELIST  "BudgetConversion_DHWSys_CentralHPWH" 1 0 1 0

;"dbg" DHWSys:Action = {  PostMessageToLog( "   eval rulelist 'BudgetConversion_DHWSys_CentralHPWH' for run %s on DHWSys '%s'", Proj:RunAbbrev, Name )  }

   "Set DHWSys:CentralDHWType to 'HPWH'"     DHWSys:CentralDHWType  = {  "HPWH"  }
;   "Set DHWSys:MFamDistType to recirc"       DHWSys:MFamDistType    = {  "Multi-family: Recirculating with no control (continuous pumping)"  }
   "Set DHWSys:IsStdLargeCHPWH flag"         DHWSys:IsStdLargeCHPWH = {  1  }    ; SAC 07/10/21 (tic #1275)

   "Blast DHWSys:DHWHeater[1] assignment"    DHWSys:DHWHeater[1]  = {  UNDEFINED  }
   "Blast DHWSys:DHWHeater[2] assignment"    DHWSys:DHWHeater[2]  = {  UNDEFINED  }
   "Blast DHWSys:DHWHeater[3] assignment"    DHWSys:DHWHeater[3]  = {  UNDEFINED  }
   "Blast DHWSys:DHWHeater[4] assignment"    DHWSys:DHWHeater[4]  = {  UNDEFINED  }
   "Blast DHWSys:DHWHeater[5] assignment"    DHWSys:DHWHeater[5]  = {  UNDEFINED  }
   "Blast DHWSys:DHWHeater[6] assignment"    DHWSys:DHWHeater[6]  = {  UNDEFINED  }

   "Blast DHWSys:HeaterMult[1]"  DHWSys:HeaterMult[1]  = {  UNDEFINED  }
   "Blast DHWSys:HeaterMult[2]"  DHWSys:HeaterMult[2]  = {  UNDEFINED  }
   "Blast DHWSys:HeaterMult[3]"  DHWSys:HeaterMult[3]  = {  UNDEFINED  }
   "Blast DHWSys:HeaterMult[4]"  DHWSys:HeaterMult[4]  = {  UNDEFINED  }
   "Blast DHWSys:HeaterMult[5]"  DHWSys:HeaterMult[5]  = {  UNDEFINED  }
   "Blast DHWSys:HeaterMult[6]"  DHWSys:HeaterMult[6]  = {  UNDEFINED  }

   "Remove DHWSys:LoopHeater assignment"  DHWSys:LoopHeater  = {  UNDEFINED  }

   ; set CHPWH data
;   "Set DHWSys:CHPWHSysDescrip"        DHWSys:CHPWHSysDescrip        = {  "Large Single Pass Primary"  }
   "Set DHWSys:CHPWHSysDescrip"        DHWSys:CHPWHSysDescrip        = {  "Single Pass Primary"  }    ; removed 'Large' from name - SAC 01/17/22
   "Set DHWSys:CHPWHCompType"          DHWSys:CHPWHCompType          = {  "generic  (26kW cap @ 40F)"  }
   "Set DHWSys:CHPWHCompAutosizeSim"   DHWSys:CHPWHCompAutosizeSim   = {  1  }
   "Set DHWSys:CHPWHNumComp"           DHWSys:CHPWHNumComp           = {  1  }
   "Set DHWSys:CHPWHNumCompFlt"        DHWSys:CHPWHNumCompFlt        = {  1  }
   "Set DHWSys:CHPWHTankSetpt"         DHWSys:CHPWHTankSetpt         = {  140  }
   "Set DHWSys:CHPWHTankRVal"          DHWSys:CHPWHTankRVal          = {  16   }
   "Blast DHWSys:CHPWHTotTankVol"      DHWSys:CHPWHTotTankVol        = {  UNDEFINED  }
   "Blast DHWSys:CHPWHTankCount"       DHWSys:CHPWHTankCount         = {  UNDEFINED  }

; retain tank and air source locations from Proposed model (but IsStdLargeCHPWH flag will impact sim settings) - SAC 07/10/21 (tic #1275)
;   "Set DHWSys:CHPWHTankLoc"           DHWSys:CHPWHTankLoc           = {  "Outside"   }
;;   "Set DHWSys:CHPWHTankZone"          DHWSys:CHPWHTankZone          = {  ""   }
;   "Set DHWSys:CHPWHSrcAirLoc"         DHWSys:CHPWHSrcAirLoc         = {  "Outside"   }
;;   "Set DHWSys:CHPWHSrcAirZone"        DHWSys:CHPWHSrcAirZone        = {  ""   }

;   "Set DHWSys:CHPWHLoopTankType"      DHWSys:CHPWHLoopTankType      = {  "Large HPWH/Compressor"  }
;   "Set DHWSys:CHPWHLoopTankCompType"  DHWSys:CHPWHLoopTankCompType  = {  "generic  (5kW cap @ 40F)"  }
   "Set DHWSys:CHPWHLoopTankConfig"    DHWSys:CHPWHLoopTankConfig    = {  "Series (Swing)"  }         ; SAC 02/23/22
   "Set DHWSys:CHPWHLoopTankType"      DHWSys:CHPWHLoopTankType      = {  "Electric Resistance"  }
   "Set DHWSys:CHPWHLoopTankCompCnt"   DHWSys:CHPWHLoopTankCompCnt   = {  1    }
   "Set DHWSys:CHPWHLoopTankSetpt"     DHWSys:CHPWHLoopTankSetpt     = {  140  }
   "Set DHWSys:CHPWHLoopTankRVal"      DHWSys:CHPWHLoopTankRVal      = {  16   }
   "Set DHWSys:CHPWHLoopTankVol"       DHWSys:CHPWHLoopTankVol       =              ; NumAssignedCommonDUEquiv - SAC 10/10/24 (tic #3630)
      {  if ((ValidOr( NumAssignedDUFracs, 0 ) + ValidOr( NumAssignedCommonDUEquiv, 0 )) > 48 )
         then  120  else  80  endif  }
   "Set DHWSys:CHPWHLoopTankTankCnt"   DHWSys:CHPWHLoopTankTankCnt   = {  1  }
   "Set DHWSys:CHPWHLoopTankResHtPwr"  DHWSys:CHPWHLoopTankResHtPwr  =              ; SAC 07/03/21 (tic #1275)  ; NumAssignedCommonDUEquiv - SAC 10/10/24 (tic #3630)
      {  if ((ValidOr( NumAssignedDUFracs, 0 ) + ValidOr( NumAssignedCommonDUEquiv, 0 )) > 0 )
         then  1.75 * 100 * (ValidOr( NumAssignedDUFracs, 0 ) + ValidOr( NumAssignedCommonDUEquiv, 0 ))
         else  UNDEFINED  endif  }

; retain tank and air source locations from Proposed model (but IsStdLargeCHPWH flag will impact sim settings) - SAC 07/10/21 (tic #1275)
;   "Set DHWSys:CHPWHLoopTankLoc"          DHWSys:CHPWHLoopTankLoc          = {  "Outside"   }
;;   "Set DHWSys:CHPWHLoopTankZone"         DHWSys:CHPWHLoopTankZone         = {  ""   }
;   "Set DHWSys:CHPWHLoopTankSrcAirLoc"    DHWSys:CHPWHLoopTankSrcAirLoc    = {  "Outside"   }
;;   "Set DHWSys:CHPWHLoopTankSrcAirZone"   DHWSys:CHPWHLoopTankSrcAirZone   = {  ""   }
; restored tank and air source locations to force to 'Outside' iff TankLoc invalid - SAC 01/17/24 (tic #3477)
   "Set DHWSys:CHPWHLoopTankLoc (if none selected)"         DHWSys:CHPWHLoopTankLoc    =
      {  if (IfValidAnd( CHPWHLoopTankLoc       > 0 )) then  UNCHANGED  else  "Outside"  endif  }
   "Set DHWSys:CHPWHLoopTankSrcAirLoc (if none selected)"   DHWSys:CHPWHLoopTankSrcAirLoc    =
      {  if (IfValidAnd( CHPWHLoopTankSrcAirLoc > 0 )) then  UNCHANGED  else  "Outside"  endif  }
END
;*************************************************************************


; SAC 1/11/16 - REPLACE first heater in MaxNewNCntrlDHWSys if it is NOT a DHWHeater object (could be an air-to-water heat pump) (tic 560)
RULELIST  "BudgetConversion_DHWHeater_ImportFromLibrary" 1 0 1 1

	"Replace ResProj:MaxNewNCntrlDHWSys:DHWHeater[1] (if necessary)"	
				ResProj:MaxNewNCntrlDHWSys:DHWHeater[1]	= {	; based on logic for setting DHWHeater:HeaterElementType
																			if (StdDesignBase >= 2016)
																			then	RuleLibrary( DHWHeater, "Std Gas DHW Heater" )		; Gas
																			else if (NatGasAvailable > 0.5)
																			then	RuleLibrary( DHWHeater, "Std NatGas DHW Heater" )	; Natural Gas
																			else	RuleLibrary( DHWHeater, "Std Elec DHW Heater" )		; Electric
																			endif endif  }

	"Set ResProj:MaxNewNCntrlDHWSys:DHWHeater[1]:ForceStdDesign"			ResProj:MaxNewNCntrlDHWSys:DHWHeater[1]:ForceStdDesign		= {	1  }
	"Set ResProj:MaxNewNCntrlDHWSys:DHWHeater[1]:NewCntrlAreaServed"		ResProj:MaxNewNCntrlDHWSys:DHWHeater[1]:NewCntrlAreaServed	= {	MaxNewNCntrlDHWSys:NewCntrlAreaServed  }

END

;************************************************************************* ; SAC 01/22/21
RULELIST  "BudgetConversion_DHW_StdHPWHToCondZone" 1 0 1 1
   "Toggle Off Proj:StdElecDHWHeater:TankOutside"  Proj:StdElecDHWHeater:TankOutside = {  0  }
   "Set Proj:StdElecDHWHeater:TankZone"            Proj:StdElecDHWHeater:TankZone    = {  MaxAllComp( Zone:CondVolume )  }
END

;*************************************************************************
; SAC 10/27/15 - moved rule setting DHWHeater:HeaterElementType to subordinate rulelist to prevent Resets of other properties we want to retain
RULELIST  "BudgetConversion_DHWHeater_HeaterElementType" 1 0 1 1
   "Set DHWHeater:PropHtrElemTypeNum"     DHWHeater:PropHtrElemTypeNum  = {  HeaterElementType  }     ; SAC 8/28/17
; SAC 4/20/15 - added logic for 2016 standard design
; SAC 5/1/15 - revised 2016 logic to only select Propane if NatGasAvailable = 0 AND HeaterElementType set to Propane in the proposed model (issue 531)
; SAC 4/7/16 - added logic to set HeaterElementType  for RESNET2014 design rating reference run (tic #631)
; SAC 8/16/17 - added logic to retain HPWH as std design for 2019 models when proposed design is HPWH  - SAC 8/22/17 - rolled back HPWH std design mods of 8/16
;"dbg" DHWHeater:Action = { PostMessageToLog( "setting budget DHWHeater '%s' HeaterElementType:  ForceStdDesign %g / DRtgRefRunID %g / StdDesignBase %g / NatGasAvailable %g / Status %g / HeaterElementType %g",
;                                 Name, ForceStdDesign, ResProj:DRtgRefRunID, Proj:StdDesignBase, ResProj:NatGasAvailable, Status, HeaterElementType ) }  ; SAC 09/02/20
	"Reset DHWHeater:HeaterElementType (when simulating std design)" DHWHeater:HeaterElementType	=     ; revised for Com rules - SAC 03/03/22
   { if (IfValidAnd( ForceStdDesign > 0.5 )==0) 
    then  UNCHANGED
    else if (IfValidAnd( ResProj:DRtgRefRunID == 2014 ))			; "RESNET2014"
    then	
      if (HeaterElementType == 1) then  UNCHANGED		; Gas -> Gas
      else	0		; ElecRes, HPWH or HPWHX -> ElecRes
      endif
    else if (Proj:StdDesignBase >= 2016)
    then   ; LDH 170509 - Added logic to select proper Heater Element type for alterations (tic # 820)
      if ( ((Proj:IsSFamResRuleset .AND. IfValidAnd( ResProj:NatGasAvailable < 0.5 )) .OR.
            (Proj:IsComRuleset     .AND. IfValidAnd(    Proj:NatGasAvail     < 0.5 ))) .AND.  ; No Natural Gas Available at Site
           Status = 2 .AND.                  ;  Altered
           HeaterElementType != 1 )          ; Not Equal to Gas (Propane)
      then 0   ; Electric resistance
      else 1 ; Gas (Natural Gas or Propane, depending on ResProj:GasType selection
      endif 
    else if (((Proj:IsSFamResRuleset .AND. IfValidAnd( ResProj:NatGasAvailable > 0.5 )) .OR.
              (Proj:IsComRuleset     .AND. IfValidAnd(    Proj:NatGasAvail     > 0.5 ))) .AND. HeaterElementType != 1 .AND. HeaterElementType != 2)		; != NatGas or Propane
    then	1	; Natural Gas
    else if (((Proj:IsSFamResRuleset .AND. IfValidAnd( ResProj:NatGasAvailable < 0.5 )) .OR.
              (Proj:IsComRuleset     .AND. IfValidAnd(    Proj:NatGasAvail     < 0.5 ))) .AND. HeaterElementType == 2)		; = Propane		SF tic 478 to correct Altered Propane DHW std design
    then	UNCHANGED
    else if (((Proj:IsSFamResRuleset .AND. IfValidAnd( ResProj:NatGasAvailable < 0.5 )) .OR.
              (Proj:IsComRuleset     .AND. IfValidAnd(    Proj:NatGasAvail     < 0.5 ))) .AND. HeaterElementType != 0)		; != Electric
    then	0	; Electric
    else	UNCHANGED  
    endif endif endif endif endif endif  }

   "Set DHWHeater:StdInpRtgConv (fuel unit conversion should InputRatingSim be retained in std model)"   ; SAC 8/28/17 - (tic #893)
      DHWHeater:StdInpRtgConv  = {
         if ( (PropHtrElemTypeNum == 0 .OR. PropHtrElemTypeNum == 3 .OR. PropHtrElemTypeNum == 5) .AND.
              (HeaterElementType  == 1 .OR. HeaterElementType  == 2 .OR. HeaterElementType  == 4) )
         then  3.412       ; elec W -> gas Btuh
         else if ( (PropHtrElemTypeNum == 1 .OR. PropHtrElemTypeNum == 2 .OR. PropHtrElemTypeNum == 4) .AND.
                   (HeaterElementType  == 0 .OR. HeaterElementType  == 3 .OR. HeaterElementType  == 5) )
         then  1/3.412     ; gas Btuh -> elec W
         else  1.0  endif endif  }
END
;*************************************************************************
; SAC 10/27/15 - moved rule setting DHWHeater:TankType to subordinate rulelist to prevent Resets of other properties we want to retain
RULELIST  "BudgetConversion_DHWHeater_TankType" 1 0 1 1
; SAC 3/19/14 - modified to cause 2016, multi-family w/ non-central DHW to simulate standard design
; SAC 9/23/15 - added 'ForceStdDesign < 0.5' to if statement to ensure TankType NOT switched for Existing heaters
; SAC 10/27/15 - added logic to prevent changing TankType, InputRating or TankVolume for heaters of central systems (unless required)
; LDH 170504 - updated StdDesign TankType to equal PropDesign for altered heaters (tic #820)
; SAC 8/15/17 - added logic to setup 2019 std design water heater as 'Consumer Instantaneous (UEF)-New'
; SAC 2/23/18 - minor updates in logic to ensure new (2019 UEF-related) TankTypes are preserved in Gas and Propane heaters 
; SAC 6/20/18 - revised to map new Res-Duty Commercial types to valid compatible types
; revised logic to cause Small Inst, Consumer Inst and -default- heaters that are Altered to switch to Cons Inst UEF-New (rather than Small Inst) - SAC 08/11/20 (tic #1187) 
; replace dependence on DwellUnitType:NumDUsCntrlDHW & NumDUsNonCntrlDHW w/ DHWHeater:NewCntrlAreaServed & FloorAreaServed - SAC 05/09/23
;"dbg" DHWHeater:Action = { PostMessageToLog( ":  ForceStdDesign %g  /  ",
;            ValidOr( ForceStdDesign, -999 ), ValidOr( xxx, -999 ), ValidOr( xxx, -999 ), ValidOr( xxx, -999 ), ValidOr( xxx, -999 ), ValidOr( xxx, -999 ), ValidOr( xxx, -999 ) )  }
	"Reset DHWHeater:TankType (when simulating std design)"	DHWHeater:TankType = {	
    if ( IfValidAnd( ForceStdDesign > 0.5 ) .AND. 
		   ( Proj:IsSFamResRuleset .OR. 
           ( Proj:IsComRuleset .AND. IfValidAnd( NewCntrlAreaServed < 0.5 ) .AND. 
             IfValidAnd( FloorAreaServed > 0.5 ) ) ) )
    then ; StdDesign TankType = PropDesign for 'Altered' DHW heaters
      if( Status = 2 )  ; Altered
      then switch( HeaterType )
           case  2:  2   ; Large Instantaneous  ->   Large Instantaneous
           case  3:  3   ; Large Storage  ->   Large Storage
           case  5:  9   ; Small Instantaneous  ->   Consumer Instantaneous (UEF) - SAC 08/11/20
           case  6: 12   ; Small Storage  ->   Consumer Storage (UEF)            > previously mapped to (6) Small Storage - SAC 09/01/20 (tic #1187)
           case 10:  9   ; Consumer Instantaneous (UEF)  ->   Consumer Instantaneous (UEF) - SAC 08/11/20
           case 11:  2   ; Commercial Instantaneous (TE)  ->   Large Instantaneous
           case 12: 12   ; Consumer Storage (UEF)  ->   Consumer Storage (UEF)   > previously mapped to (6) Small Storage - SAC 09/01/20 (tic #1187)
           case 13:  3   ; Commercial Storage (TE & SBL)  ->   Large Storage
           case 14:  3   ; Residential-Duty Commercial Storage (UEF)  ->   Large Storage
           case 15:  2   ; Residential-Duty Commercial Instantaneous (UEF)  ->   Large Instantaneous
           default:  9   ; Consumer Instantaneous (UEF) - SAC 08/11/20
           endswitch
      else if (IfValidAnd( Proj:StdDesignBase >= 2019 ))
      then  9        ; "Consumer Instantaneous (UEF)-New"   ; SAC 8/2/17
      else  5        ; New -> Small Instantaneous
      endif endif
    else if (IfValidAnd( ForceStdDesign > 0.5 )==0) then  UNCHANGED   ; Existing
    else if (NewCntrlAreaServed >= 1)
    then  ; only reset if HeaterElementType is incompatible w/ current TankType
      switch (HeaterElementType)
      case  0 :	; Elec Resistance
        if (HeaterType < 2 .OR. HeaterType = 4 .OR. HeaterType = 7) then  3  ; Large Storage
        else if (HeaterType = 14) then  3  ; Residential-Duty Commercial Storage (UEF) -> Large Storage - SAC 6/20/18
        else	UNCHANGED  endif endif
      case  1 :	; Nat Gas
        if (HeaterType = 4 .OR. HeaterType = 7) then  3  ; Large Storage
        else if (HeaterType = 15) then  3  ; Residential-Duty Commercial Instantaneous (UEF) -> Large Storage - SAC 6/20/18
        else	UNCHANGED  endif endif
      case  2 :	; Propane
        if (HeaterType = 4 .OR. HeaterType = 7) then  3  ; Large Storage
        else if (HeaterType = 15) then  3  ; Residential-Duty Commercial Instantaneous (UEF) -> Large Storage - SAC 6/20/18
        else	UNCHANGED  endif endif
      default :	UNCHANGED
      endswitch
    else  6	; Small Storage
    endif endif endif  }
   "Set DHWHeater:HeaterType to handle lots of defaulting and UI - needed to differentiate original Elec/Gas ConsInst from new CSE model"  ; SAC 3/1/18 (tic #993)
      DHWHeater:HeaterType  = {
         if (HeaterElementType == 1 .AND. TankType == 10 .AND.
             IfValidAnd( Proj:EngyCodeYearNum >= 2019 ))
         then  9
         else  TankType
         endif  }
END
;*************************************************************************

;*************************************************************************  - SAC 1/8/19
RULELIST  "Blast_DHWSys_DWHRSysRefs"  1 0 0 1
   "Blast DHWSys:DWHRSysRef[1]"     DHWSys:DWHRSysRef[1]  = {  UNDEFINED  }
   "Blast DHWSys:DWHRSysRef[2]"     DHWSys:DWHRSysRef[2]  = {  UNDEFINED  }
   "Blast DHWSys:DWHRSysRef[3]"     DHWSys:DWHRSysRef[3]  = {  UNDEFINED  }
   "Blast DHWSys:DWHRSysRef[4]"     DHWSys:DWHRSysRef[4]  = {  UNDEFINED  }
   "Blast DHWSys:DWHRSysRef[5]"     DHWSys:DWHRSysRef[5]  = {  UNDEFINED  }
   "Blast DHWSys:DWHRSysRef[6]"     DHWSys:DWHRSysRef[6]  = {  UNDEFINED  }
END

;*************************************************************************  - SAC 1/8/19
RULELIST  "Blast_DwellUnitType_DWHRSysRefs_1"  1 0 0 1
   "Blast DwellUnitType:DWHRSysRef1[1]"   DwellUnitType:DWHRSysRef1[1]  = {  UNDEFINED  }
   "Blast DwellUnitType:DWHRSysRef2[1]"   DwellUnitType:DWHRSysRef2[1]  = {  UNDEFINED  }
   "Blast DwellUnitType:DWHRSysRef3[1]"   DwellUnitType:DWHRSysRef3[1]  = {  UNDEFINED  }
   "Blast DwellUnitType:DWHRSysRef4[1]"   DwellUnitType:DWHRSysRef4[1]  = {  UNDEFINED  }
   "Blast DwellUnitType:DWHRSysRef5[1]"   DwellUnitType:DWHRSysRef5[1]  = {  UNDEFINED  }
   "Blast DwellUnitType:DWHRSysRef6[1]"   DwellUnitType:DWHRSysRef6[1]  = {  UNDEFINED  }
END
RULELIST  "Blast_DwellUnitType_DWHRSysRefs_2"  1 0 0 1
   "Blast DwellUnitType:DWHRSysRef1[2]"   DwellUnitType:DWHRSysRef1[2]  = {  UNDEFINED  }
   "Blast DwellUnitType:DWHRSysRef2[2]"   DwellUnitType:DWHRSysRef2[2]  = {  UNDEFINED  }
   "Blast DwellUnitType:DWHRSysRef3[2]"   DwellUnitType:DWHRSysRef3[2]  = {  UNDEFINED  }
   "Blast DwellUnitType:DWHRSysRef4[2]"   DwellUnitType:DWHRSysRef4[2]  = {  UNDEFINED  }
   "Blast DwellUnitType:DWHRSysRef5[2]"   DwellUnitType:DWHRSysRef5[2]  = {  UNDEFINED  }
   "Blast DwellUnitType:DWHRSysRef6[2]"   DwellUnitType:DWHRSysRef6[2]  = {  UNDEFINED  }
END
RULELIST  "Blast_DwellUnitType_DWHRSysRefs_3"  1 0 0 1
   "Blast DwellUnitType:DWHRSysRef1[3]"   DwellUnitType:DWHRSysRef1[3]  = {  UNDEFINED  }
   "Blast DwellUnitType:DWHRSysRef2[3]"   DwellUnitType:DWHRSysRef2[3]  = {  UNDEFINED  }
   "Blast DwellUnitType:DWHRSysRef3[3]"   DwellUnitType:DWHRSysRef3[3]  = {  UNDEFINED  }
   "Blast DwellUnitType:DWHRSysRef4[3]"   DwellUnitType:DWHRSysRef4[3]  = {  UNDEFINED  }
   "Blast DwellUnitType:DWHRSysRef5[3]"   DwellUnitType:DWHRSysRef5[3]  = {  UNDEFINED  }
   "Blast DwellUnitType:DWHRSysRef6[3]"   DwellUnitType:DWHRSysRef6[3]  = {  UNDEFINED  }
END
RULELIST  "Blast_DwellUnitType_DWHRSysRefs_4"  1 0 0 1
   "Blast DwellUnitType:DWHRSysRef1[4]"   DwellUnitType:DWHRSysRef1[4]  = {  UNDEFINED  }
   "Blast DwellUnitType:DWHRSysRef2[4]"   DwellUnitType:DWHRSysRef2[4]  = {  UNDEFINED  }
   "Blast DwellUnitType:DWHRSysRef3[4]"   DwellUnitType:DWHRSysRef3[4]  = {  UNDEFINED  }
   "Blast DwellUnitType:DWHRSysRef4[4]"   DwellUnitType:DWHRSysRef4[4]  = {  UNDEFINED  }
   "Blast DwellUnitType:DWHRSysRef5[4]"   DwellUnitType:DWHRSysRef5[4]  = {  UNDEFINED  }
   "Blast DwellUnitType:DWHRSysRef6[4]"   DwellUnitType:DWHRSysRef6[4]  = {  UNDEFINED  }
END
RULELIST  "Blast_DwellUnitType_DWHRSysRefs_5"  1 0 0 1
   "Blast DwellUnitType:DWHRSysRef1[5]"   DwellUnitType:DWHRSysRef1[5]  = {  UNDEFINED  }
   "Blast DwellUnitType:DWHRSysRef2[5]"   DwellUnitType:DWHRSysRef2[5]  = {  UNDEFINED  }
   "Blast DwellUnitType:DWHRSysRef3[5]"   DwellUnitType:DWHRSysRef3[5]  = {  UNDEFINED  }
   "Blast DwellUnitType:DWHRSysRef4[5]"   DwellUnitType:DWHRSysRef4[5]  = {  UNDEFINED  }
   "Blast DwellUnitType:DWHRSysRef5[5]"   DwellUnitType:DWHRSysRef5[5]  = {  UNDEFINED  }
   "Blast DwellUnitType:DWHRSysRef6[5]"   DwellUnitType:DWHRSysRef6[5]  = {  UNDEFINED  }
END
;*************************************************************************


;*************************************************************************
;*************************************************************************

ENDFILE
